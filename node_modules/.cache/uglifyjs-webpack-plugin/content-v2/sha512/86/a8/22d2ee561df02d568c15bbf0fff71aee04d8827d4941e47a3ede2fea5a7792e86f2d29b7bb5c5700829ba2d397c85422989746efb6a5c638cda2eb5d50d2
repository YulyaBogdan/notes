{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\"],\"names\":[\"parentHotUpdateCallback\",\"window\",\"chunkId\",\"moreModules\",\"hotAvailableFilesMap\",\"hotRequestedFilesMap\",\"moduleId\",\"Object\",\"prototype\",\"hasOwnProperty\",\"call\",\"hotUpdate\",\"hotWaitingFiles\",\"hotChunksLoading\",\"hotUpdateDownloaded\",\"hotAddUpdateChunk\",\"hotCurrentChildModule\",\"hotApplyOnUpdate\",\"hotCurrentHash\",\"hotRequestTimeout\",\"hotCurrentModuleData\",\"hotCurrentParents\",\"hotCurrentParentsTemp\",\"hotCreateRequire\",\"me\",\"installedModules\",\"__webpack_require__\",\"fn\",\"request\",\"hot\",\"active\",\"parents\",\"includes\",\"push\",\"children\",\"console\",\"warn\",\"ObjectFactory\",\"name\",\"configurable\",\"enumerable\",\"get\",\"set\",\"value\",\"defineProperty\",\"e\",\"hotStatus\",\"hotSetStatus\",\"then\",\"finishChunkLoading\",\"err\",\"hotWaitingFilesMap\",\"hotEnsureUpdateChunk\",\"hotStatusHandlers\",\"newStatus\",\"i\",\"length\",\"hotDeferred\",\"hotUpdateNewHash\",\"toModuleId\",\"id\",\"hotCheck\",\"apply\",\"Error\",\"requestTimeout\",\"Promise\",\"resolve\",\"reject\",\"XMLHttpRequest\",\"requestPath\",\"p\",\"open\",\"timeout\",\"send\",\"onreadystatechange\",\"readyState\",\"status\",\"update\",\"JSON\",\"parse\",\"responseText\",\"c\",\"h\",\"promise\",\"head\",\"document\",\"getElementsByTagName\",\"script\",\"createElement\",\"charset\",\"src\",\"appendChild\",\"hotDownloadUpdateChunk\",\"deferred\",\"hotApply\",\"result\",\"outdatedModules\",\"options\",\"cb\",\"j\",\"module\",\"getAffectedStuff\",\"updateModuleId\",\"outdatedDependencies\",\"queue\",\"slice\",\"map\",\"chain\",\"queueItem\",\"pop\",\"_selfAccepted\",\"_selfDeclined\",\"type\",\"_main\",\"parentId\",\"parent\",\"_declinedDependencies\",\"concat\",\"_acceptedDependencies\",\"addAllToSet\",\"a\",\"b\",\"item\",\"appliedUpdate\",\"warnUnexpectedRequire\",\"abortError\",\"doApply\",\"doDispose\",\"chainInfo\",\"join\",\"onDeclined\",\"ignoreDeclined\",\"onUnaccepted\",\"ignoreUnaccepted\",\"onAccepted\",\"onDisposed\",\"idx\",\"outdatedSelfAcceptedModules\",\"errorHandler\",\"keys\",\"forEach\",\"installedChunks\",\"hotDisposeChunk\",\"dependency\",\"moduleOutdatedDependencies\",\"data\",\"disposeHandlers\",\"_disposeHandlers\",\"child\",\"indexOf\",\"splice\",\"modules\",\"error\",\"callbacks\",\"onErrored\",\"dependencyId\",\"ignoreErrored\",\"err2\",\"originalError\",\"exports\",\"l\",\"accept\",\"dep\",\"callback\",\"decline\",\"dispose\",\"addDisposeHandler\",\"removeDisposeHandler\",\"check\",\"addStatusHandler\",\"removeStatusHandler\",\"undefined\",\"hotCreateModule\",\"m\",\"d\",\"getter\",\"o\",\"r\",\"n\",\"__esModule\",\"object\",\"property\",\"s\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\tfunction hotDisposeChunk(chunkId) {\\n \\t\\tdelete installedChunks[chunkId];\\n \\t}\\n \\tvar parentHotUpdateCallback = window[\\\"webpackHotUpdate\\\"];\\n \\twindow[\\\"webpackHotUpdate\\\"] = // eslint-disable-next-line no-unused-vars\\n \\tfunction webpackHotUpdateCallback(chunkId, moreModules) {\\n \\t\\thotAddUpdateChunk(chunkId, moreModules);\\n \\t\\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\\n \\t} ;\\n\\n \\t// eslint-disable-next-line no-unused-vars\\n \\tfunction hotDownloadUpdateChunk(chunkId) {\\n \\t\\tvar head = document.getElementsByTagName(\\\"head\\\")[0];\\n \\t\\tvar script = document.createElement(\\\"script\\\");\\n \\t\\tscript.charset = \\\"utf-8\\\";\\n \\t\\tscript.src = __webpack_require__.p + \\\"\\\" + chunkId + \\\".\\\" + hotCurrentHash + \\\".hot-update.js\\\";\\n \\t\\t;\\n \\t\\thead.appendChild(script);\\n \\t}\\n\\n \\t// eslint-disable-next-line no-unused-vars\\n \\tfunction hotDownloadManifest(requestTimeout) {\\n \\t\\trequestTimeout = requestTimeout || 10000;\\n \\t\\treturn new Promise(function(resolve, reject) {\\n \\t\\t\\tif (typeof XMLHttpRequest === \\\"undefined\\\")\\n \\t\\t\\t\\treturn reject(new Error(\\\"No browser support\\\"));\\n \\t\\t\\ttry {\\n \\t\\t\\t\\tvar request = new XMLHttpRequest();\\n \\t\\t\\t\\tvar requestPath = __webpack_require__.p + \\\"\\\" + hotCurrentHash + \\\".hot-update.json\\\";\\n \\t\\t\\t\\trequest.open(\\\"GET\\\", requestPath, true);\\n \\t\\t\\t\\trequest.timeout = requestTimeout;\\n \\t\\t\\t\\trequest.send(null);\\n \\t\\t\\t} catch (err) {\\n \\t\\t\\t\\treturn reject(err);\\n \\t\\t\\t}\\n \\t\\t\\trequest.onreadystatechange = function() {\\n \\t\\t\\t\\tif (request.readyState !== 4) return;\\n \\t\\t\\t\\tif (request.status === 0) {\\n \\t\\t\\t\\t\\t// timeout\\n \\t\\t\\t\\t\\treject(\\n \\t\\t\\t\\t\\t\\tnew Error(\\\"Manifest request to \\\" + requestPath + \\\" timed out.\\\")\\n \\t\\t\\t\\t\\t);\\n \\t\\t\\t\\t} else if (request.status === 404) {\\n \\t\\t\\t\\t\\t// no update available\\n \\t\\t\\t\\t\\tresolve();\\n \\t\\t\\t\\t} else if (request.status !== 200 && request.status !== 304) {\\n \\t\\t\\t\\t\\t// other failure\\n \\t\\t\\t\\t\\treject(new Error(\\\"Manifest request to \\\" + requestPath + \\\" failed.\\\"));\\n \\t\\t\\t\\t} else {\\n \\t\\t\\t\\t\\t// success\\n \\t\\t\\t\\t\\ttry {\\n \\t\\t\\t\\t\\t\\tvar update = JSON.parse(request.responseText);\\n \\t\\t\\t\\t\\t} catch (e) {\\n \\t\\t\\t\\t\\t\\treject(e);\\n \\t\\t\\t\\t\\t\\treturn;\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\tresolve(update);\\n \\t\\t\\t\\t}\\n \\t\\t\\t};\\n \\t\\t});\\n \\t}\\n\\n \\tvar hotApplyOnUpdate = true;\\n \\tvar hotCurrentHash = \\\"b79198715fb9ca747a7f\\\"; // eslint-disable-line no-unused-vars\\n \\tvar hotRequestTimeout = 10000;\\n \\tvar hotCurrentModuleData = {};\\n \\tvar hotCurrentChildModule; // eslint-disable-line no-unused-vars\\n \\tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\\n \\tvar hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars\\n\\n \\t// eslint-disable-next-line no-unused-vars\\n \\tfunction hotCreateRequire(moduleId) {\\n \\t\\tvar me = installedModules[moduleId];\\n \\t\\tif (!me) return __webpack_require__;\\n \\t\\tvar fn = function(request) {\\n \\t\\t\\tif (me.hot.active) {\\n \\t\\t\\t\\tif (installedModules[request]) {\\n \\t\\t\\t\\t\\tif (!installedModules[request].parents.includes(moduleId))\\n \\t\\t\\t\\t\\t\\tinstalledModules[request].parents.push(moduleId);\\n \\t\\t\\t\\t} else {\\n \\t\\t\\t\\t\\thotCurrentParents = [moduleId];\\n \\t\\t\\t\\t\\thotCurrentChildModule = request;\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (!me.children.includes(request)) me.children.push(request);\\n \\t\\t\\t} else {\\n \\t\\t\\t\\tconsole.warn(\\n \\t\\t\\t\\t\\t\\\"[HMR] unexpected require(\\\" +\\n \\t\\t\\t\\t\\t\\trequest +\\n \\t\\t\\t\\t\\t\\t\\\") from disposed module \\\" +\\n \\t\\t\\t\\t\\t\\tmoduleId\\n \\t\\t\\t\\t);\\n \\t\\t\\t\\thotCurrentParents = [];\\n \\t\\t\\t}\\n \\t\\t\\treturn __webpack_require__(request);\\n \\t\\t};\\n \\t\\tvar ObjectFactory = function ObjectFactory(name) {\\n \\t\\t\\treturn {\\n \\t\\t\\t\\tconfigurable: true,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: function() {\\n \\t\\t\\t\\t\\treturn __webpack_require__[name];\\n \\t\\t\\t\\t},\\n \\t\\t\\t\\tset: function(value) {\\n \\t\\t\\t\\t\\t__webpack_require__[name] = value;\\n \\t\\t\\t\\t}\\n \\t\\t\\t};\\n \\t\\t};\\n \\t\\tfor (var name in __webpack_require__) {\\n \\t\\t\\tif (\\n \\t\\t\\t\\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\\n \\t\\t\\t\\tname !== \\\"e\\\"\\n \\t\\t\\t) {\\n \\t\\t\\t\\tObject.defineProperty(fn, name, ObjectFactory(name));\\n \\t\\t\\t}\\n \\t\\t}\\n \\t\\tfn.e = function(chunkId) {\\n \\t\\t\\tif (hotStatus === \\\"ready\\\") hotSetStatus(\\\"prepare\\\");\\n \\t\\t\\thotChunksLoading++;\\n \\t\\t\\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\\n \\t\\t\\t\\tfinishChunkLoading();\\n \\t\\t\\t\\tthrow err;\\n \\t\\t\\t});\\n\\n \\t\\t\\tfunction finishChunkLoading() {\\n \\t\\t\\t\\thotChunksLoading--;\\n \\t\\t\\t\\tif (hotStatus === \\\"prepare\\\") {\\n \\t\\t\\t\\t\\tif (!hotWaitingFilesMap[chunkId]) {\\n \\t\\t\\t\\t\\t\\thotEnsureUpdateChunk(chunkId);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\\n \\t\\t\\t\\t\\t\\thotUpdateDownloaded();\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t};\\n \\t\\treturn fn;\\n \\t}\\n\\n \\t// eslint-disable-next-line no-unused-vars\\n \\tfunction hotCreateModule(moduleId) {\\n \\t\\tvar hot = {\\n \\t\\t\\t// private stuff\\n \\t\\t\\t_acceptedDependencies: {},\\n \\t\\t\\t_declinedDependencies: {},\\n \\t\\t\\t_selfAccepted: false,\\n \\t\\t\\t_selfDeclined: false,\\n \\t\\t\\t_disposeHandlers: [],\\n \\t\\t\\t_main: hotCurrentChildModule !== moduleId,\\n\\n \\t\\t\\t// Module API\\n \\t\\t\\tactive: true,\\n \\t\\t\\taccept: function(dep, callback) {\\n \\t\\t\\t\\tif (typeof dep === \\\"undefined\\\") hot._selfAccepted = true;\\n \\t\\t\\t\\telse if (typeof dep === \\\"function\\\") hot._selfAccepted = dep;\\n \\t\\t\\t\\telse if (typeof dep === \\\"object\\\")\\n \\t\\t\\t\\t\\tfor (var i = 0; i < dep.length; i++)\\n \\t\\t\\t\\t\\t\\thot._acceptedDependencies[dep[i]] = callback || function() {};\\n \\t\\t\\t\\telse hot._acceptedDependencies[dep] = callback || function() {};\\n \\t\\t\\t},\\n \\t\\t\\tdecline: function(dep) {\\n \\t\\t\\t\\tif (typeof dep === \\\"undefined\\\") hot._selfDeclined = true;\\n \\t\\t\\t\\telse if (typeof dep === \\\"object\\\")\\n \\t\\t\\t\\t\\tfor (var i = 0; i < dep.length; i++)\\n \\t\\t\\t\\t\\t\\thot._declinedDependencies[dep[i]] = true;\\n \\t\\t\\t\\telse hot._declinedDependencies[dep] = true;\\n \\t\\t\\t},\\n \\t\\t\\tdispose: function(callback) {\\n \\t\\t\\t\\thot._disposeHandlers.push(callback);\\n \\t\\t\\t},\\n \\t\\t\\taddDisposeHandler: function(callback) {\\n \\t\\t\\t\\thot._disposeHandlers.push(callback);\\n \\t\\t\\t},\\n \\t\\t\\tremoveDisposeHandler: function(callback) {\\n \\t\\t\\t\\tvar idx = hot._disposeHandlers.indexOf(callback);\\n \\t\\t\\t\\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\\n \\t\\t\\t},\\n\\n \\t\\t\\t// Management API\\n \\t\\t\\tcheck: hotCheck,\\n \\t\\t\\tapply: hotApply,\\n \\t\\t\\tstatus: function(l) {\\n \\t\\t\\t\\tif (!l) return hotStatus;\\n \\t\\t\\t\\thotStatusHandlers.push(l);\\n \\t\\t\\t},\\n \\t\\t\\taddStatusHandler: function(l) {\\n \\t\\t\\t\\thotStatusHandlers.push(l);\\n \\t\\t\\t},\\n \\t\\t\\tremoveStatusHandler: function(l) {\\n \\t\\t\\t\\tvar idx = hotStatusHandlers.indexOf(l);\\n \\t\\t\\t\\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\\n \\t\\t\\t},\\n\\n \\t\\t\\t//inherit from previous dispose call\\n \\t\\t\\tdata: hotCurrentModuleData[moduleId]\\n \\t\\t};\\n \\t\\thotCurrentChildModule = undefined;\\n \\t\\treturn hot;\\n \\t}\\n\\n \\tvar hotStatusHandlers = [];\\n \\tvar hotStatus = \\\"idle\\\";\\n\\n \\tfunction hotSetStatus(newStatus) {\\n \\t\\thotStatus = newStatus;\\n \\t\\tfor (var i = 0; i < hotStatusHandlers.length; i++)\\n \\t\\t\\thotStatusHandlers[i].call(null, newStatus);\\n \\t}\\n\\n \\t// while downloading\\n \\tvar hotWaitingFiles = 0;\\n \\tvar hotChunksLoading = 0;\\n \\tvar hotWaitingFilesMap = {};\\n \\tvar hotRequestedFilesMap = {};\\n \\tvar hotAvailableFilesMap = {};\\n \\tvar hotDeferred;\\n\\n \\t// The update info\\n \\tvar hotUpdate, hotUpdateNewHash;\\n\\n \\tfunction toModuleId(id) {\\n \\t\\tvar isNumber = +id + \\\"\\\" === id;\\n \\t\\treturn isNumber ? +id : id;\\n \\t}\\n\\n \\tfunction hotCheck(apply) {\\n \\t\\tif (hotStatus !== \\\"idle\\\")\\n \\t\\t\\tthrow new Error(\\\"check() is only allowed in idle status\\\");\\n \\t\\thotApplyOnUpdate = apply;\\n \\t\\thotSetStatus(\\\"check\\\");\\n \\t\\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\\n \\t\\t\\tif (!update) {\\n \\t\\t\\t\\thotSetStatus(\\\"idle\\\");\\n \\t\\t\\t\\treturn null;\\n \\t\\t\\t}\\n \\t\\t\\thotRequestedFilesMap = {};\\n \\t\\t\\thotWaitingFilesMap = {};\\n \\t\\t\\thotAvailableFilesMap = update.c;\\n \\t\\t\\thotUpdateNewHash = update.h;\\n\\n \\t\\t\\thotSetStatus(\\\"prepare\\\");\\n \\t\\t\\tvar promise = new Promise(function(resolve, reject) {\\n \\t\\t\\t\\thotDeferred = {\\n \\t\\t\\t\\t\\tresolve: resolve,\\n \\t\\t\\t\\t\\treject: reject\\n \\t\\t\\t\\t};\\n \\t\\t\\t});\\n \\t\\t\\thotUpdate = {};\\n \\t\\t\\tvar chunkId = 0;\\n \\t\\t\\t{\\n \\t\\t\\t\\t// eslint-disable-line no-lone-blocks\\n \\t\\t\\t\\t/*globals chunkId */\\n \\t\\t\\t\\thotEnsureUpdateChunk(chunkId);\\n \\t\\t\\t}\\n \\t\\t\\tif (\\n \\t\\t\\t\\thotStatus === \\\"prepare\\\" &&\\n \\t\\t\\t\\thotChunksLoading === 0 &&\\n \\t\\t\\t\\thotWaitingFiles === 0\\n \\t\\t\\t) {\\n \\t\\t\\t\\thotUpdateDownloaded();\\n \\t\\t\\t}\\n \\t\\t\\treturn promise;\\n \\t\\t});\\n \\t}\\n\\n \\t// eslint-disable-next-line no-unused-vars\\n \\tfunction hotAddUpdateChunk(chunkId, moreModules) {\\n \\t\\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\\n \\t\\t\\treturn;\\n \\t\\thotRequestedFilesMap[chunkId] = false;\\n \\t\\tfor (var moduleId in moreModules) {\\n \\t\\t\\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\\n \\t\\t\\t\\thotUpdate[moduleId] = moreModules[moduleId];\\n \\t\\t\\t}\\n \\t\\t}\\n \\t\\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\\n \\t\\t\\thotUpdateDownloaded();\\n \\t\\t}\\n \\t}\\n\\n \\tfunction hotEnsureUpdateChunk(chunkId) {\\n \\t\\tif (!hotAvailableFilesMap[chunkId]) {\\n \\t\\t\\thotWaitingFilesMap[chunkId] = true;\\n \\t\\t} else {\\n \\t\\t\\thotRequestedFilesMap[chunkId] = true;\\n \\t\\t\\thotWaitingFiles++;\\n \\t\\t\\thotDownloadUpdateChunk(chunkId);\\n \\t\\t}\\n \\t}\\n\\n \\tfunction hotUpdateDownloaded() {\\n \\t\\thotSetStatus(\\\"ready\\\");\\n \\t\\tvar deferred = hotDeferred;\\n \\t\\thotDeferred = null;\\n \\t\\tif (!deferred) return;\\n \\t\\tif (hotApplyOnUpdate) {\\n \\t\\t\\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\\n \\t\\t\\t// avoid triggering uncaught exception warning in Chrome.\\n \\t\\t\\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\\n \\t\\t\\tPromise.resolve()\\n \\t\\t\\t\\t.then(function() {\\n \\t\\t\\t\\t\\treturn hotApply(hotApplyOnUpdate);\\n \\t\\t\\t\\t})\\n \\t\\t\\t\\t.then(\\n \\t\\t\\t\\t\\tfunction(result) {\\n \\t\\t\\t\\t\\t\\tdeferred.resolve(result);\\n \\t\\t\\t\\t\\t},\\n \\t\\t\\t\\t\\tfunction(err) {\\n \\t\\t\\t\\t\\t\\tdeferred.reject(err);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t);\\n \\t\\t} else {\\n \\t\\t\\tvar outdatedModules = [];\\n \\t\\t\\tfor (var id in hotUpdate) {\\n \\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\\n \\t\\t\\t\\t\\toutdatedModules.push(toModuleId(id));\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t\\tdeferred.resolve(outdatedModules);\\n \\t\\t}\\n \\t}\\n\\n \\tfunction hotApply(options) {\\n \\t\\tif (hotStatus !== \\\"ready\\\")\\n \\t\\t\\tthrow new Error(\\\"apply() is only allowed in ready status\\\");\\n \\t\\toptions = options || {};\\n\\n \\t\\tvar cb;\\n \\t\\tvar i;\\n \\t\\tvar j;\\n \\t\\tvar module;\\n \\t\\tvar moduleId;\\n\\n \\t\\tfunction getAffectedStuff(updateModuleId) {\\n \\t\\t\\tvar outdatedModules = [updateModuleId];\\n \\t\\t\\tvar outdatedDependencies = {};\\n\\n \\t\\t\\tvar queue = outdatedModules.slice().map(function(id) {\\n \\t\\t\\t\\treturn {\\n \\t\\t\\t\\t\\tchain: [id],\\n \\t\\t\\t\\t\\tid: id\\n \\t\\t\\t\\t};\\n \\t\\t\\t});\\n \\t\\t\\twhile (queue.length > 0) {\\n \\t\\t\\t\\tvar queueItem = queue.pop();\\n \\t\\t\\t\\tvar moduleId = queueItem.id;\\n \\t\\t\\t\\tvar chain = queueItem.chain;\\n \\t\\t\\t\\tmodule = installedModules[moduleId];\\n \\t\\t\\t\\tif (!module || module.hot._selfAccepted) continue;\\n \\t\\t\\t\\tif (module.hot._selfDeclined) {\\n \\t\\t\\t\\t\\treturn {\\n \\t\\t\\t\\t\\t\\ttype: \\\"self-declined\\\",\\n \\t\\t\\t\\t\\t\\tchain: chain,\\n \\t\\t\\t\\t\\t\\tmoduleId: moduleId\\n \\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (module.hot._main) {\\n \\t\\t\\t\\t\\treturn {\\n \\t\\t\\t\\t\\t\\ttype: \\\"unaccepted\\\",\\n \\t\\t\\t\\t\\t\\tchain: chain,\\n \\t\\t\\t\\t\\t\\tmoduleId: moduleId\\n \\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tfor (var i = 0; i < module.parents.length; i++) {\\n \\t\\t\\t\\t\\tvar parentId = module.parents[i];\\n \\t\\t\\t\\t\\tvar parent = installedModules[parentId];\\n \\t\\t\\t\\t\\tif (!parent) continue;\\n \\t\\t\\t\\t\\tif (parent.hot._declinedDependencies[moduleId]) {\\n \\t\\t\\t\\t\\t\\treturn {\\n \\t\\t\\t\\t\\t\\t\\ttype: \\\"declined\\\",\\n \\t\\t\\t\\t\\t\\t\\tchain: chain.concat([parentId]),\\n \\t\\t\\t\\t\\t\\t\\tmoduleId: moduleId,\\n \\t\\t\\t\\t\\t\\t\\tparentId: parentId\\n \\t\\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\tif (outdatedModules.includes(parentId)) continue;\\n \\t\\t\\t\\t\\tif (parent.hot._acceptedDependencies[moduleId]) {\\n \\t\\t\\t\\t\\t\\tif (!outdatedDependencies[parentId])\\n \\t\\t\\t\\t\\t\\t\\toutdatedDependencies[parentId] = [];\\n \\t\\t\\t\\t\\t\\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\\n \\t\\t\\t\\t\\t\\tcontinue;\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\tdelete outdatedDependencies[parentId];\\n \\t\\t\\t\\t\\toutdatedModules.push(parentId);\\n \\t\\t\\t\\t\\tqueue.push({\\n \\t\\t\\t\\t\\t\\tchain: chain.concat([parentId]),\\n \\t\\t\\t\\t\\t\\tid: parentId\\n \\t\\t\\t\\t\\t});\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n\\n \\t\\t\\treturn {\\n \\t\\t\\t\\ttype: \\\"accepted\\\",\\n \\t\\t\\t\\tmoduleId: updateModuleId,\\n \\t\\t\\t\\toutdatedModules: outdatedModules,\\n \\t\\t\\t\\toutdatedDependencies: outdatedDependencies\\n \\t\\t\\t};\\n \\t\\t}\\n\\n \\t\\tfunction addAllToSet(a, b) {\\n \\t\\t\\tfor (var i = 0; i < b.length; i++) {\\n \\t\\t\\t\\tvar item = b[i];\\n \\t\\t\\t\\tif (!a.includes(item)) a.push(item);\\n \\t\\t\\t}\\n \\t\\t}\\n\\n \\t\\t// at begin all updates modules are outdated\\n \\t\\t// the \\\"outdated\\\" status can propagate to parents if they don't accept the children\\n \\t\\tvar outdatedDependencies = {};\\n \\t\\tvar outdatedModules = [];\\n \\t\\tvar appliedUpdate = {};\\n\\n \\t\\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\\n \\t\\t\\tconsole.warn(\\n \\t\\t\\t\\t\\\"[HMR] unexpected require(\\\" + result.moduleId + \\\") to disposed module\\\"\\n \\t\\t\\t);\\n \\t\\t};\\n\\n \\t\\tfor (var id in hotUpdate) {\\n \\t\\t\\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\\n \\t\\t\\t\\tmoduleId = toModuleId(id);\\n \\t\\t\\t\\tvar result;\\n \\t\\t\\t\\tif (hotUpdate[id]) {\\n \\t\\t\\t\\t\\tresult = getAffectedStuff(moduleId);\\n \\t\\t\\t\\t} else {\\n \\t\\t\\t\\t\\tresult = {\\n \\t\\t\\t\\t\\t\\ttype: \\\"disposed\\\",\\n \\t\\t\\t\\t\\t\\tmoduleId: id\\n \\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tvar abortError = false;\\n \\t\\t\\t\\tvar doApply = false;\\n \\t\\t\\t\\tvar doDispose = false;\\n \\t\\t\\t\\tvar chainInfo = \\\"\\\";\\n \\t\\t\\t\\tif (result.chain) {\\n \\t\\t\\t\\t\\tchainInfo = \\\"\\\\nUpdate propagation: \\\" + result.chain.join(\\\" -> \\\");\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tswitch (result.type) {\\n \\t\\t\\t\\t\\tcase \\\"self-declined\\\":\\n \\t\\t\\t\\t\\t\\tif (options.onDeclined) options.onDeclined(result);\\n \\t\\t\\t\\t\\t\\tif (!options.ignoreDeclined)\\n \\t\\t\\t\\t\\t\\t\\tabortError = new Error(\\n \\t\\t\\t\\t\\t\\t\\t\\t\\\"Aborted because of self decline: \\\" +\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tresult.moduleId +\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tchainInfo\\n \\t\\t\\t\\t\\t\\t\\t);\\n \\t\\t\\t\\t\\t\\tbreak;\\n \\t\\t\\t\\t\\tcase \\\"declined\\\":\\n \\t\\t\\t\\t\\t\\tif (options.onDeclined) options.onDeclined(result);\\n \\t\\t\\t\\t\\t\\tif (!options.ignoreDeclined)\\n \\t\\t\\t\\t\\t\\t\\tabortError = new Error(\\n \\t\\t\\t\\t\\t\\t\\t\\t\\\"Aborted because of declined dependency: \\\" +\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tresult.moduleId +\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\\" in \\\" +\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tresult.parentId +\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tchainInfo\\n \\t\\t\\t\\t\\t\\t\\t);\\n \\t\\t\\t\\t\\t\\tbreak;\\n \\t\\t\\t\\t\\tcase \\\"unaccepted\\\":\\n \\t\\t\\t\\t\\t\\tif (options.onUnaccepted) options.onUnaccepted(result);\\n \\t\\t\\t\\t\\t\\tif (!options.ignoreUnaccepted)\\n \\t\\t\\t\\t\\t\\t\\tabortError = new Error(\\n \\t\\t\\t\\t\\t\\t\\t\\t\\\"Aborted because \\\" + moduleId + \\\" is not accepted\\\" + chainInfo\\n \\t\\t\\t\\t\\t\\t\\t);\\n \\t\\t\\t\\t\\t\\tbreak;\\n \\t\\t\\t\\t\\tcase \\\"accepted\\\":\\n \\t\\t\\t\\t\\t\\tif (options.onAccepted) options.onAccepted(result);\\n \\t\\t\\t\\t\\t\\tdoApply = true;\\n \\t\\t\\t\\t\\t\\tbreak;\\n \\t\\t\\t\\t\\tcase \\\"disposed\\\":\\n \\t\\t\\t\\t\\t\\tif (options.onDisposed) options.onDisposed(result);\\n \\t\\t\\t\\t\\t\\tdoDispose = true;\\n \\t\\t\\t\\t\\t\\tbreak;\\n \\t\\t\\t\\t\\tdefault:\\n \\t\\t\\t\\t\\t\\tthrow new Error(\\\"Unexception type \\\" + result.type);\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (abortError) {\\n \\t\\t\\t\\t\\thotSetStatus(\\\"abort\\\");\\n \\t\\t\\t\\t\\treturn Promise.reject(abortError);\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (doApply) {\\n \\t\\t\\t\\t\\tappliedUpdate[moduleId] = hotUpdate[moduleId];\\n \\t\\t\\t\\t\\taddAllToSet(outdatedModules, result.outdatedModules);\\n \\t\\t\\t\\t\\tfor (moduleId in result.outdatedDependencies) {\\n \\t\\t\\t\\t\\t\\tif (\\n \\t\\t\\t\\t\\t\\t\\tObject.prototype.hasOwnProperty.call(\\n \\t\\t\\t\\t\\t\\t\\t\\tresult.outdatedDependencies,\\n \\t\\t\\t\\t\\t\\t\\t\\tmoduleId\\n \\t\\t\\t\\t\\t\\t\\t)\\n \\t\\t\\t\\t\\t\\t) {\\n \\t\\t\\t\\t\\t\\t\\tif (!outdatedDependencies[moduleId])\\n \\t\\t\\t\\t\\t\\t\\t\\toutdatedDependencies[moduleId] = [];\\n \\t\\t\\t\\t\\t\\t\\taddAllToSet(\\n \\t\\t\\t\\t\\t\\t\\t\\toutdatedDependencies[moduleId],\\n \\t\\t\\t\\t\\t\\t\\t\\tresult.outdatedDependencies[moduleId]\\n \\t\\t\\t\\t\\t\\t\\t);\\n \\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (doDispose) {\\n \\t\\t\\t\\t\\taddAllToSet(outdatedModules, [result.moduleId]);\\n \\t\\t\\t\\t\\tappliedUpdate[moduleId] = warnUnexpectedRequire;\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t}\\n\\n \\t\\t// Store self accepted outdated modules to require them later by the module system\\n \\t\\tvar outdatedSelfAcceptedModules = [];\\n \\t\\tfor (i = 0; i < outdatedModules.length; i++) {\\n \\t\\t\\tmoduleId = outdatedModules[i];\\n \\t\\t\\tif (\\n \\t\\t\\t\\tinstalledModules[moduleId] &&\\n \\t\\t\\t\\tinstalledModules[moduleId].hot._selfAccepted\\n \\t\\t\\t)\\n \\t\\t\\t\\toutdatedSelfAcceptedModules.push({\\n \\t\\t\\t\\t\\tmodule: moduleId,\\n \\t\\t\\t\\t\\terrorHandler: installedModules[moduleId].hot._selfAccepted\\n \\t\\t\\t\\t});\\n \\t\\t}\\n\\n \\t\\t// Now in \\\"dispose\\\" phase\\n \\t\\thotSetStatus(\\\"dispose\\\");\\n \\t\\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\\n \\t\\t\\tif (hotAvailableFilesMap[chunkId] === false) {\\n \\t\\t\\t\\thotDisposeChunk(chunkId);\\n \\t\\t\\t}\\n \\t\\t});\\n\\n \\t\\tvar idx;\\n \\t\\tvar queue = outdatedModules.slice();\\n \\t\\twhile (queue.length > 0) {\\n \\t\\t\\tmoduleId = queue.pop();\\n \\t\\t\\tmodule = installedModules[moduleId];\\n \\t\\t\\tif (!module) continue;\\n\\n \\t\\t\\tvar data = {};\\n\\n \\t\\t\\t// Call dispose handlers\\n \\t\\t\\tvar disposeHandlers = module.hot._disposeHandlers;\\n \\t\\t\\tfor (j = 0; j < disposeHandlers.length; j++) {\\n \\t\\t\\t\\tcb = disposeHandlers[j];\\n \\t\\t\\t\\tcb(data);\\n \\t\\t\\t}\\n \\t\\t\\thotCurrentModuleData[moduleId] = data;\\n\\n \\t\\t\\t// disable module (this disables requires from this module)\\n \\t\\t\\tmodule.hot.active = false;\\n\\n \\t\\t\\t// remove module from cache\\n \\t\\t\\tdelete installedModules[moduleId];\\n\\n \\t\\t\\t// when disposing there is no need to call dispose handler\\n \\t\\t\\tdelete outdatedDependencies[moduleId];\\n\\n \\t\\t\\t// remove \\\"parents\\\" references from all children\\n \\t\\t\\tfor (j = 0; j < module.children.length; j++) {\\n \\t\\t\\t\\tvar child = installedModules[module.children[j]];\\n \\t\\t\\t\\tif (!child) continue;\\n \\t\\t\\t\\tidx = child.parents.indexOf(moduleId);\\n \\t\\t\\t\\tif (idx >= 0) {\\n \\t\\t\\t\\t\\tchild.parents.splice(idx, 1);\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t}\\n\\n \\t\\t// remove outdated dependency from module children\\n \\t\\tvar dependency;\\n \\t\\tvar moduleOutdatedDependencies;\\n \\t\\tfor (moduleId in outdatedDependencies) {\\n \\t\\t\\tif (\\n \\t\\t\\t\\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\\n \\t\\t\\t) {\\n \\t\\t\\t\\tmodule = installedModules[moduleId];\\n \\t\\t\\t\\tif (module) {\\n \\t\\t\\t\\t\\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\\n \\t\\t\\t\\t\\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\\n \\t\\t\\t\\t\\t\\tdependency = moduleOutdatedDependencies[j];\\n \\t\\t\\t\\t\\t\\tidx = module.children.indexOf(dependency);\\n \\t\\t\\t\\t\\t\\tif (idx >= 0) module.children.splice(idx, 1);\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t}\\n\\n \\t\\t// Not in \\\"apply\\\" phase\\n \\t\\thotSetStatus(\\\"apply\\\");\\n\\n \\t\\thotCurrentHash = hotUpdateNewHash;\\n\\n \\t\\t// insert new code\\n \\t\\tfor (moduleId in appliedUpdate) {\\n \\t\\t\\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\\n \\t\\t\\t\\tmodules[moduleId] = appliedUpdate[moduleId];\\n \\t\\t\\t}\\n \\t\\t}\\n\\n \\t\\t// call accept handlers\\n \\t\\tvar error = null;\\n \\t\\tfor (moduleId in outdatedDependencies) {\\n \\t\\t\\tif (\\n \\t\\t\\t\\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\\n \\t\\t\\t) {\\n \\t\\t\\t\\tmodule = installedModules[moduleId];\\n \\t\\t\\t\\tif (module) {\\n \\t\\t\\t\\t\\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\\n \\t\\t\\t\\t\\tvar callbacks = [];\\n \\t\\t\\t\\t\\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\\n \\t\\t\\t\\t\\t\\tdependency = moduleOutdatedDependencies[i];\\n \\t\\t\\t\\t\\t\\tcb = module.hot._acceptedDependencies[dependency];\\n \\t\\t\\t\\t\\t\\tif (cb) {\\n \\t\\t\\t\\t\\t\\t\\tif (callbacks.includes(cb)) continue;\\n \\t\\t\\t\\t\\t\\t\\tcallbacks.push(cb);\\n \\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\tfor (i = 0; i < callbacks.length; i++) {\\n \\t\\t\\t\\t\\t\\tcb = callbacks[i];\\n \\t\\t\\t\\t\\t\\ttry {\\n \\t\\t\\t\\t\\t\\t\\tcb(moduleOutdatedDependencies);\\n \\t\\t\\t\\t\\t\\t} catch (err) {\\n \\t\\t\\t\\t\\t\\t\\tif (options.onErrored) {\\n \\t\\t\\t\\t\\t\\t\\t\\toptions.onErrored({\\n \\t\\t\\t\\t\\t\\t\\t\\t\\ttype: \\\"accept-errored\\\",\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tmoduleId: moduleId,\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tdependencyId: moduleOutdatedDependencies[i],\\n \\t\\t\\t\\t\\t\\t\\t\\t\\terror: err\\n \\t\\t\\t\\t\\t\\t\\t\\t});\\n \\t\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\t\\tif (!options.ignoreErrored) {\\n \\t\\t\\t\\t\\t\\t\\t\\tif (!error) error = err;\\n \\t\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t}\\n\\n \\t\\t// Load self accepted modules\\n \\t\\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\\n \\t\\t\\tvar item = outdatedSelfAcceptedModules[i];\\n \\t\\t\\tmoduleId = item.module;\\n \\t\\t\\thotCurrentParents = [moduleId];\\n \\t\\t\\ttry {\\n \\t\\t\\t\\t__webpack_require__(moduleId);\\n \\t\\t\\t} catch (err) {\\n \\t\\t\\t\\tif (typeof item.errorHandler === \\\"function\\\") {\\n \\t\\t\\t\\t\\ttry {\\n \\t\\t\\t\\t\\t\\titem.errorHandler(err);\\n \\t\\t\\t\\t\\t} catch (err2) {\\n \\t\\t\\t\\t\\t\\tif (options.onErrored) {\\n \\t\\t\\t\\t\\t\\t\\toptions.onErrored({\\n \\t\\t\\t\\t\\t\\t\\t\\ttype: \\\"self-accept-error-handler-errored\\\",\\n \\t\\t\\t\\t\\t\\t\\t\\tmoduleId: moduleId,\\n \\t\\t\\t\\t\\t\\t\\t\\terror: err2,\\n \\t\\t\\t\\t\\t\\t\\t\\toriginalError: err\\n \\t\\t\\t\\t\\t\\t\\t});\\n \\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\tif (!options.ignoreErrored) {\\n \\t\\t\\t\\t\\t\\t\\tif (!error) error = err2;\\n \\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\tif (!error) error = err;\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t} else {\\n \\t\\t\\t\\t\\tif (options.onErrored) {\\n \\t\\t\\t\\t\\t\\toptions.onErrored({\\n \\t\\t\\t\\t\\t\\t\\ttype: \\\"self-accept-errored\\\",\\n \\t\\t\\t\\t\\t\\t\\tmoduleId: moduleId,\\n \\t\\t\\t\\t\\t\\t\\terror: err\\n \\t\\t\\t\\t\\t\\t});\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\tif (!options.ignoreErrored) {\\n \\t\\t\\t\\t\\t\\tif (!error) error = err;\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t}\\n\\n \\t\\t// handle errors in accept handlers and self accepted module load\\n \\t\\tif (error) {\\n \\t\\t\\thotSetStatus(\\\"fail\\\");\\n \\t\\t\\treturn Promise.reject(error);\\n \\t\\t}\\n\\n \\t\\thotSetStatus(\\\"idle\\\");\\n \\t\\treturn new Promise(function(resolve) {\\n \\t\\t\\tresolve(outdatedModules);\\n \\t\\t});\\n \\t}\\n\\n \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {},\\n \\t\\t\\thot: hotCreateModule(moduleId),\\n \\t\\t\\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\\n \\t\\t\\tchildren: []\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n \\t// __webpack_hash__\\n \\t__webpack_require__.h = function() { return hotCurrentHash; };\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn hotCreateRequire(44)(__webpack_require__.s = 44);\\n\"]}","code":"!function(F){var U=window.webpackHotUpdate;window.webpackHotUpdate=function(F,B){!function(F,U){if(!C[F]||!L[F])return;for(var B in L[F]=!1,U)Object.prototype.hasOwnProperty.call(U,B)&&(i[B]=U[B]);0==--x&&0===V&&Z()}(F,B),U&&U(F,B)};var B,Q=!0,n=\"b79198715fb9ca747a7f\",s=1e4,c={},t=[],e=[];function l(F){var U=S[F];if(!U)return R;var Q=function(Q){return U.hot.active?(S[Q]?S[Q].parents.includes(F)||S[Q].parents.push(F):(t=[F],B=Q),U.children.includes(Q)||U.children.push(Q)):(console.warn(\"[HMR] unexpected require(\"+Q+\") from disposed module \"+F),t=[]),R(Q)},n=function(F){return{configurable:!0,enumerable:!0,get:function(){return R[F]},set:function(U){R[F]=U}}};for(var s in R)Object.prototype.hasOwnProperty.call(R,s)&&\"e\"!==s&&Object.defineProperty(Q,s,n(s));return Q.e=function(F){return\"ready\"===g&&d(\"prepare\"),V++,R.e(F).then(U,function(F){throw U(),F});function U(){V--,\"prepare\"===g&&(y[F]||r(F),0===V&&0===x&&Z())}},Q}var I=[],g=\"idle\";function d(F){g=F;for(var U=0;U<I.length;U++)I[U].call(null,F)}var b,i,a,x=0,V=0,y={},L={},C={};function o(F){return+F+\"\"===F?+F:F}function u(F){if(\"idle\"!==g)throw new Error(\"check() is only allowed in idle status\");return Q=F,d(\"check\"),(U=s,U=U||1e4,new Promise(function(F,B){if(\"undefined\"==typeof XMLHttpRequest)return B(new Error(\"No browser support\"));try{var Q=new XMLHttpRequest,s=R.p+\"\"+n+\".hot-update.json\";Q.open(\"GET\",s,!0),Q.timeout=U,Q.send(null)}catch(F){return B(F)}Q.onreadystatechange=function(){if(4===Q.readyState)if(0===Q.status)B(new Error(\"Manifest request to \"+s+\" timed out.\"));else if(404===Q.status)F();else if(200!==Q.status&&304!==Q.status)B(new Error(\"Manifest request to \"+s+\" failed.\"));else{try{var U=JSON.parse(Q.responseText)}catch(F){return void B(F)}F(U)}}})).then(function(F){if(!F)return d(\"idle\"),null;L={},y={},C=F.c,a=F.h,d(\"prepare\");var U=new Promise(function(F,U){b={resolve:F,reject:U}});i={};return r(0),\"prepare\"===g&&0===V&&0===x&&Z(),U});var U}function r(F){C[F]?(L[F]=!0,x++,function(F){var U=document.getElementsByTagName(\"head\")[0],B=document.createElement(\"script\");B.charset=\"utf-8\",B.src=R.p+\"\"+F+\".\"+n+\".hot-update.js\",U.appendChild(B)}(F)):y[F]=!0}function Z(){d(\"ready\");var F=b;if(b=null,F)if(Q)Promise.resolve().then(function(){return G(Q)}).then(function(U){F.resolve(U)},function(U){F.reject(U)});else{var U=[];for(var B in i)Object.prototype.hasOwnProperty.call(i,B)&&U.push(o(B));F.resolve(U)}}function G(U){if(\"ready\"!==g)throw new Error(\"apply() is only allowed in ready status\");var B,Q,s,e,l;function I(F){for(var U=[F],B={},Q=U.slice().map(function(F){return{chain:[F],id:F}});Q.length>0;){var n=Q.pop(),s=n.id,c=n.chain;if((e=S[s])&&!e.hot._selfAccepted){if(e.hot._selfDeclined)return{type:\"self-declined\",chain:c,moduleId:s};if(e.hot._main)return{type:\"unaccepted\",chain:c,moduleId:s};for(var t=0;t<e.parents.length;t++){var l=e.parents[t],I=S[l];if(I){if(I.hot._declinedDependencies[s])return{type:\"declined\",chain:c.concat([l]),moduleId:s,parentId:l};U.includes(l)||(I.hot._acceptedDependencies[s]?(B[l]||(B[l]=[]),b(B[l],[s])):(delete B[l],U.push(l),Q.push({chain:c.concat([l]),id:l})))}}}}return{type:\"accepted\",moduleId:F,outdatedModules:U,outdatedDependencies:B}}function b(F,U){for(var B=0;B<U.length;B++){var Q=U[B];F.includes(Q)||F.push(Q)}}U=U||{};var x={},V=[],y={},L=function(){console.warn(\"[HMR] unexpected require(\"+r.moduleId+\") to disposed module\")};for(var u in i)if(Object.prototype.hasOwnProperty.call(i,u)){var r;l=o(u);var Z=!1,G=!1,m=!1,X=\"\";switch((r=i[u]?I(l):{type:\"disposed\",moduleId:u}).chain&&(X=\"\\nUpdate propagation: \"+r.chain.join(\" -> \")),r.type){case\"self-declined\":U.onDeclined&&U.onDeclined(r),U.ignoreDeclined||(Z=new Error(\"Aborted because of self decline: \"+r.moduleId+X));break;case\"declined\":U.onDeclined&&U.onDeclined(r),U.ignoreDeclined||(Z=new Error(\"Aborted because of declined dependency: \"+r.moduleId+\" in \"+r.parentId+X));break;case\"unaccepted\":U.onUnaccepted&&U.onUnaccepted(r),U.ignoreUnaccepted||(Z=new Error(\"Aborted because \"+l+\" is not accepted\"+X));break;case\"accepted\":U.onAccepted&&U.onAccepted(r),G=!0;break;case\"disposed\":U.onDisposed&&U.onDisposed(r),m=!0;break;default:throw new Error(\"Unexception type \"+r.type)}if(Z)return d(\"abort\"),Promise.reject(Z);if(G)for(l in y[l]=i[l],b(V,r.outdatedModules),r.outdatedDependencies)Object.prototype.hasOwnProperty.call(r.outdatedDependencies,l)&&(x[l]||(x[l]=[]),b(x[l],r.outdatedDependencies[l]));m&&(b(V,[r.moduleId]),y[l]=L)}var W,h=[];for(Q=0;Q<V.length;Q++)l=V[Q],S[l]&&S[l].hot._selfAccepted&&h.push({module:l,errorHandler:S[l].hot._selfAccepted});d(\"dispose\"),Object.keys(C).forEach(function(F){!1===C[F]&&function(F){delete installedChunks[F]}(F)});for(var N,E,p=V.slice();p.length>0;)if(l=p.pop(),e=S[l]){var J={},A=e.hot._disposeHandlers;for(s=0;s<A.length;s++)(B=A[s])(J);for(c[l]=J,e.hot.active=!1,delete S[l],delete x[l],s=0;s<e.children.length;s++){var Y=S[e.children[s]];Y&&((W=Y.parents.indexOf(l))>=0&&Y.parents.splice(W,1))}}for(l in x)if(Object.prototype.hasOwnProperty.call(x,l)&&(e=S[l]))for(E=x[l],s=0;s<E.length;s++)N=E[s],(W=e.children.indexOf(N))>=0&&e.children.splice(W,1);for(l in d(\"apply\"),n=a,y)Object.prototype.hasOwnProperty.call(y,l)&&(F[l]=y[l]);var T=null;for(l in x)if(Object.prototype.hasOwnProperty.call(x,l)&&(e=S[l])){E=x[l];var H=[];for(Q=0;Q<E.length;Q++)if(N=E[Q],B=e.hot._acceptedDependencies[N]){if(H.includes(B))continue;H.push(B)}for(Q=0;Q<H.length;Q++){B=H[Q];try{B(E)}catch(F){U.onErrored&&U.onErrored({type:\"accept-errored\",moduleId:l,dependencyId:E[Q],error:F}),U.ignoreErrored||T||(T=F)}}}for(Q=0;Q<h.length;Q++){var D=h[Q];l=D.module,t=[l];try{R(l)}catch(F){if(\"function\"==typeof D.errorHandler)try{D.errorHandler(F)}catch(B){U.onErrored&&U.onErrored({type:\"self-accept-error-handler-errored\",moduleId:l,error:B,originalError:F}),U.ignoreErrored||T||(T=B),T||(T=F)}else U.onErrored&&U.onErrored({type:\"self-accept-errored\",moduleId:l,error:F}),U.ignoreErrored||T||(T=F)}}return T?(d(\"fail\"),Promise.reject(T)):(d(\"idle\"),new Promise(function(F){F(V)}))}var S={};function R(U){if(S[U])return S[U].exports;var Q=S[U]={i:U,l:!1,exports:{},hot:function(F){var U={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:B!==F,active:!0,accept:function(F,B){if(void 0===F)U._selfAccepted=!0;else if(\"function\"==typeof F)U._selfAccepted=F;else if(\"object\"==typeof F)for(var Q=0;Q<F.length;Q++)U._acceptedDependencies[F[Q]]=B||function(){};else U._acceptedDependencies[F]=B||function(){}},decline:function(F){if(void 0===F)U._selfDeclined=!0;else if(\"object\"==typeof F)for(var B=0;B<F.length;B++)U._declinedDependencies[F[B]]=!0;else U._declinedDependencies[F]=!0},dispose:function(F){U._disposeHandlers.push(F)},addDisposeHandler:function(F){U._disposeHandlers.push(F)},removeDisposeHandler:function(F){var B=U._disposeHandlers.indexOf(F);B>=0&&U._disposeHandlers.splice(B,1)},check:u,apply:G,status:function(F){if(!F)return g;I.push(F)},addStatusHandler:function(F){I.push(F)},removeStatusHandler:function(F){var U=I.indexOf(F);U>=0&&I.splice(U,1)},data:c[F]};return B=void 0,U}(U),parents:(e=t,t=[],e),children:[]};return F[U].call(Q.exports,Q,Q.exports,l(U)),Q.l=!0,Q.exports}R.m=F,R.c=S,R.d=function(F,U,B){R.o(F,U)||Object.defineProperty(F,U,{configurable:!1,enumerable:!0,get:B})},R.r=function(F){Object.defineProperty(F,\"__esModule\",{value:!0})},R.n=function(F){var U=F&&F.__esModule?function(){return F.default}:function(){return F};return R.d(U,\"a\",U),U},R.o=function(F,U){return Object.prototype.hasOwnProperty.call(F,U)},R.p=\"\",R.h=function(){return n},l(44)(R.s=44)}([function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * \\n */\\n\\nfunction makeEmptyFunction(arg) {\\n  return function () {\\n    return arg;\\n  };\\n}\\n\\n/**\\n * This function accepts and discards inputs; it has no side effects. This is\\n * primarily useful idiomatically for overridable function endpoints which\\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\\n */\\nvar emptyFunction = function emptyFunction() {};\\n\\nemptyFunction.thatReturns = makeEmptyFunction;\\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\\nemptyFunction.thatReturnsThis = function () {\\n  return this;\\n};\\nemptyFunction.thatReturnsArgument = function (arg) {\\n  return arg;\\n};\\n\\nmodule.exports = emptyFunction;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcz9hMjExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOzs7Ozs7Ozs7QUFTQSxTQUFTLGtCQUFrQixLQUN6QjtTQUFPLFlBQ0w7V0FDRDtBQUNGOzs7QUFFRDs7Ozs7QUFLQSxJQUFJLGdCQUFnQixTQUFTLGdCQUFrQixDQUEvQzs7QUFFQSxjQUFjLGNBQWM7QUFDNUIsY0FBYyxtQkFBbUIsa0JBQWtCO0FBQ25ELGNBQWMsa0JBQWtCLGtCQUFrQjtBQUNsRCxjQUFjLGtCQUFrQixrQkFBa0I7QUFDbEQsY0FBYyxrQkFBa0IsWUFDOUI7U0FDRDtBQUZEO0FBR0EsY0FBYyxzQkFBc0IsVUFBVSxLQUM1QztTQUNEO0FBRkQ7O0FBSUEsT0FBTyxVQUFVIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nif (true) {\\n  module.exports = __webpack_require__(/*! ./cjs/react.production.min.js */ 20);\\n} else {}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanM/YWI1YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJLElBQXlCLEVBQzNCO1NBQU8sVUFBVSxvQkFDbEI7QUFGRCxPQUdFIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///1\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar logLevel = \"info\";\\n\\nfunction dummy() {}\\n\\nfunction shouldLog(level) {\\n\\tvar shouldLog = logLevel === \"info\" && level === \"info\" || [\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\" || [\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\";\\n\\treturn shouldLog;\\n}\\n\\nfunction logGroup(logFn) {\\n\\treturn function (level, msg) {\\n\\t\\tif (shouldLog(level)) {\\n\\t\\t\\tlogFn(msg);\\n\\t\\t}\\n\\t};\\n}\\n\\nmodule.exports = function (level, msg) {\\n\\tif (shouldLog(level)) {\\n\\t\\tif (level === \"info\") {\\n\\t\\t\\tconsole.log(msg);\\n\\t\\t} else if (level === \"warning\") {\\n\\t\\t\\tconsole.warn(msg);\\n\\t\\t} else if (level === \"error\") {\\n\\t\\t\\tconsole.error(msg);\\n\\t\\t}\\n\\t}\\n};\\n\\nvar group = console.group || dummy;\\nvar groupCollapsed = console.groupCollapsed || dummy;\\nvar groupEnd = console.groupEnd || dummy;\\n\\nmodule.exports.group = logGroup(group);\\n\\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\\n\\nmodule.exports.groupEnd = logGroup(groupEnd);\\n\\nmodule.exports.setLogLevel = function (level) {\\n\\tlogLevel = level;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9sb2cuanM/MWFmZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksV0FBVzs7QUFFZixTQUFTLFFBQVU7O0FBRW5CLFNBQVMsVUFBVSxPQUNsQjtLQUFJLFlBQ0YsYUFBYSxVQUFVLFVBQVUsVUFDakMsQ0FBQyxRQUFRLFdBQVcsUUFBUSxhQUFhLEtBQUssVUFBVSxhQUN4RCxDQUFDLFFBQVEsV0FBVyxTQUFTLFFBQVEsYUFBYSxLQUFLLFVBQ3pEO1FBQ0E7OztBQUVELFNBQVMsU0FBUyxPQUNqQjtRQUFPLFVBQVMsT0FBTyxLQUN0QjtNQUFJLFVBQVUsUUFDYjtTQUNBO0FBQ0Q7QUFDRDs7O0FBRUQsT0FBTyxVQUFVLFVBQVMsT0FBTyxLQUNoQztLQUFJLFVBQVUsUUFDYjtNQUFJLFVBQVUsUUFDYjtXQUFRLElBQ1I7QUFGRCxhQUVXLFVBQVUsV0FDcEI7V0FBUSxLQUNSO0FBRk0sU0FFQSxJQUFJLFVBQVUsU0FDcEI7V0FBUSxNQUNSO0FBQ0Q7QUFDRDtBQVZEOztBQVlBLElBQUksUUFBUSxRQUFRLFNBQVM7QUFDN0IsSUFBSSxpQkFBaUIsUUFBUSxrQkFBa0I7QUFDL0MsSUFBSSxXQUFXLFFBQVEsWUFBWTs7QUFFbkMsT0FBTyxRQUFRLFFBQVEsU0FBUzs7QUFFaEMsT0FBTyxRQUFRLGlCQUFpQixTQUFTOztBQUV6QyxPQUFPLFFBQVEsV0FBVyxTQUFTOztBQUVuQyxPQUFPLFFBQVEsY0FBYyxVQUFTLE9BQ3JDO1lBQ0E7QUFGRCIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGxvZ0xldmVsID0gXCJpbmZvXCI7XHJcblxyXG5mdW5jdGlvbiBkdW1teSgpIHt9XHJcblxyXG5mdW5jdGlvbiBzaG91bGRMb2cobGV2ZWwpIHtcclxuXHR2YXIgc2hvdWxkTG9nID1cclxuXHRcdChsb2dMZXZlbCA9PT0gXCJpbmZvXCIgJiYgbGV2ZWwgPT09IFwiaW5mb1wiKSB8fFxyXG5cdFx0KFtcImluZm9cIiwgXCJ3YXJuaW5nXCJdLmluZGV4T2YobG9nTGV2ZWwpID49IDAgJiYgbGV2ZWwgPT09IFwid2FybmluZ1wiKSB8fFxyXG5cdFx0KFtcImluZm9cIiwgXCJ3YXJuaW5nXCIsIFwiZXJyb3JcIl0uaW5kZXhPZihsb2dMZXZlbCkgPj0gMCAmJiBsZXZlbCA9PT0gXCJlcnJvclwiKTtcclxuXHRyZXR1cm4gc2hvdWxkTG9nO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2dHcm91cChsb2dGbikge1xyXG5cdHJldHVybiBmdW5jdGlvbihsZXZlbCwgbXNnKSB7XHJcblx0XHRpZiAoc2hvdWxkTG9nKGxldmVsKSkge1xyXG5cdFx0XHRsb2dGbihtc2cpO1xyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGV2ZWwsIG1zZykge1xyXG5cdGlmIChzaG91bGRMb2cobGV2ZWwpKSB7XHJcblx0XHRpZiAobGV2ZWwgPT09IFwiaW5mb1wiKSB7XHJcblx0XHRcdGNvbnNvbGUubG9nKG1zZyk7XHJcblx0XHR9IGVsc2UgaWYgKGxldmVsID09PSBcIndhcm5pbmdcIikge1xyXG5cdFx0XHRjb25zb2xlLndhcm4obXNnKTtcclxuXHRcdH0gZWxzZSBpZiAobGV2ZWwgPT09IFwiZXJyb3JcIikge1xyXG5cdFx0XHRjb25zb2xlLmVycm9yKG1zZyk7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxudmFyIGdyb3VwID0gY29uc29sZS5ncm91cCB8fCBkdW1teTtcclxudmFyIGdyb3VwQ29sbGFwc2VkID0gY29uc29sZS5ncm91cENvbGxhcHNlZCB8fCBkdW1teTtcclxudmFyIGdyb3VwRW5kID0gY29uc29sZS5ncm91cEVuZCB8fCBkdW1teTtcclxuXHJcbm1vZHVsZS5leHBvcnRzLmdyb3VwID0gbG9nR3JvdXAoZ3JvdXApO1xyXG5cclxubW9kdWxlLmV4cG9ydHMuZ3JvdXBDb2xsYXBzZWQgPSBsb2dHcm91cChncm91cENvbGxhcHNlZCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cy5ncm91cEVuZCA9IGxvZ0dyb3VwKGdyb3VwRW5kKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzLnNldExvZ0xldmVsID0gZnVuY3Rpb24obGV2ZWwpIHtcclxuXHRsb2dMZXZlbCA9IGxldmVsO1xyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n */\\n\\n\\n\\nvar emptyObject = {};\\n\\nif (false) {}\\n\\nmodule.exports = emptyObject;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanM/Yjc3ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxJQUFJLGNBQWM7O0FBRWxCLElBQUksS0FBeUIsRUFDM0IsRTs7QUFHRixPQUFPLFVBQVUiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5T2JqZWN0ID0ge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIE9iamVjdC5mcmVlemUoZW1wdHlPYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5T2JqZWN0OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///3\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"/*\\nobject-assign\\n(c) Sindre Sorhus\\n@license MIT\\n*/\\n\\n\\n/* eslint-disable no-unused-vars */\\n\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\\n\\nfunction toObject(val) {\\n\\tif (val === null || val === undefined) {\\n\\t\\tthrow new TypeError('Object.assign cannot be called with null or undefined');\\n\\t}\\n\\n\\treturn Object(val);\\n}\\n\\nfunction shouldUseNative() {\\n\\ttry {\\n\\t\\tif (!Object.assign) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// Detect buggy property enumeration order in older V8 versions.\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\\n\\t\\tvar test1 = new String('abc'); // eslint-disable-line no-new-wrappers\\n\\t\\ttest1[5] = 'de';\\n\\t\\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test2 = {};\\n\\t\\tfor (var i = 0; i < 10; i++) {\\n\\t\\t\\ttest2['_' + String.fromCharCode(i)] = i;\\n\\t\\t}\\n\\t\\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\\n\\t\\t\\treturn test2[n];\\n\\t\\t});\\n\\t\\tif (order2.join('') !== '0123456789') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test3 = {};\\n\\t\\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\\n\\t\\t\\ttest3[letter] = letter;\\n\\t\\t});\\n\\t\\tif (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t} catch (err) {\\n\\t\\t// We don't expect any of the above to throw, but better to be safe.\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\\n\\tvar from;\\n\\tvar to = toObject(target);\\n\\tvar symbols;\\n\\n\\tfor (var s = 1; s < arguments.length; s++) {\\n\\t\\tfrom = Object(arguments[s]);\\n\\n\\t\\tfor (var key in from) {\\n\\t\\t\\tif (hasOwnProperty.call(from, key)) {\\n\\t\\t\\t\\tto[key] = from[key];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (getOwnPropertySymbols) {\\n\\t\\t\\tsymbols = getOwnPropertySymbols(from);\\n\\t\\t\\tfor (var i = 0; i < symbols.length; i++) {\\n\\t\\t\\t\\tif (propIsEnumerable.call(from, symbols[i])) {\\n\\t\\t\\t\\t\\tto[symbols[i]] = from[symbols[i]];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn to;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcz8zMjBjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFNQTtBQUNBOztBQUNBLElBQUksd0JBQXdCLE9BQU87QUFDbkMsSUFBSSxpQkFBaUIsT0FBTyxVQUFVO0FBQ3RDLElBQUksbUJBQW1CLE9BQU8sVUFBVTs7QUFFeEMsU0FBUyxTQUFTLEtBQ2pCO0tBQUksUUFBUSxRQUFRLFFBQVEsV0FDM0I7UUFBTSxJQUFJLFVBQ1Y7QUFFRDs7UUFBTyxPQUNQOzs7QUFFRCxTQUFTLGtCQUNSO0tBQ0M7TUFBSSxDQUFDLE9BQU8sUUFDWDtVQUNBO0FBRUQ7O0FBRUE7O0FBQ0E7TUFBSSxRQUFRLElBQUksT0FBTyxRQUN2QjtRQUFNLEtBQ047TUFBSSxPQUFPLG9CQUFvQixPQUFPLE9BQU8sS0FDNUM7VUFDQTtBQUVEOztBQUNBO01BQUksUUFDSjtPQUFLLElBQUksSUFBSSxHQUFHLElBQUksSUFBSSxLQUN2QjtTQUFNLE1BQU0sT0FBTyxhQUFhLE1BQ2hDO0FBQ0Q7TUFBSSxnQkFBZ0Isb0JBQW9CLE9BQU8sSUFBSSxVQUFVLEdBQzVEO1VBQU8sTUFDUDtBQUNELEdBSGE7TUFHVCxPQUFPLEtBQUssUUFBUSxjQUN2QjtVQUNBO0FBRUQ7O0FBQ0E7TUFBSSxRQUNKO3lCQUF1QixNQUFNLElBQUksUUFBUSxVQUFVLFFBQ2xEO1NBQU0sVUFDTjtBQUNEO01BQUksT0FBTyxLQUFLLE9BQU8sT0FBTyxJQUFJLFFBQVEsS0FBSyxRQUM3Qyx3QkFDRDtVQUNBO0FBRUQ7O1NBQ0E7QUFyQ0QsR0FxQ0UsT0FBTyxLQUNSO0FBQ0E7U0FDQTtBQUNEOzs7QUFFRCxPQUFPLFVBQVUsb0JBQW9CLE9BQU8sU0FBUyxVQUFVLFFBQVEsUUFDdEU7S0FDQTtLQUFJLEtBQUssU0FDVDtLQUVBOztNQUFLLElBQUksSUFBSSxHQUFHLElBQUksVUFBVSxRQUFRLEtBQ3JDO1NBQU8sT0FBTyxVQUVkOztPQUFLLElBQUksT0FBTyxNQUNmO09BQUksZUFBZSxLQUFLLE1BQU0sTUFDN0I7T0FBRyxPQUFPLEtBQ1Y7QUFDRDtBQUVEOztNQUFJLHVCQUNIO2FBQVUsc0JBQ1Y7UUFBSyxJQUFJLElBQUksR0FBRyxJQUFJLFFBQVEsUUFBUSxLQUNuQztRQUFJLGlCQUFpQixLQUFLLE1BQU0sUUFBUSxLQUN2QztRQUFHLFFBQVEsTUFBTSxLQUFLLFFBQ3RCO0FBQ0Q7QUFDRDtBQUNEO0FBRUQ7O1FBQ0E7QUF6QkQiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///4\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar EventEmitter = __webpack_require__(/*! events */ 24);\\nmodule.exports = new EventEmitter();//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9lbWl0dGVyLmpzP2E2YmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLGVBQWUsb0JBQVE7QUFDM0IsT0FBTyxVQUFVLElBQUkiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///5\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\\n\\nvar alphaIndex = {};\\nvar charIndex = {};\\n\\ncreateIndexes(alphaIndex, charIndex);\\n\\n/**\\n * @constructor\\n */\\nfunction Html5Entities() {}\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.prototype.decode = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    return str.replace(/&(#?[\\\\w\\\\d]+);?/g, function (s, entity) {\\n        var chr;\\n        if (entity.charAt(0) === \\\"#\\\") {\\n            var code = entity.charAt(1) === 'x' ? parseInt(entity.substr(2).toLowerCase(), 16) : parseInt(entity.substr(1));\\n\\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\\n                chr = String.fromCharCode(code);\\n            }\\n        } else {\\n            chr = alphaIndex[entity];\\n        }\\n        return chr || s;\\n    });\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.decode = function (str) {\\n    return new Html5Entities().decode(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.prototype.encode = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLength = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLength) {\\n        var charInfo = charIndex[str.charCodeAt(i)];\\n        if (charInfo) {\\n            var alpha = charInfo[str.charCodeAt(i + 1)];\\n            if (alpha) {\\n                i++;\\n            } else {\\n                alpha = charInfo[''];\\n            }\\n            if (alpha) {\\n                result += \\\"&\\\" + alpha + \\\";\\\";\\n                i++;\\n                continue;\\n            }\\n        }\\n        result += str.charAt(i);\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.encode = function (str) {\\n    return new Html5Entities().encode(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.prototype.encodeNonUTF = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLength = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLength) {\\n        var c = str.charCodeAt(i);\\n        var charInfo = charIndex[c];\\n        if (charInfo) {\\n            var alpha = charInfo[str.charCodeAt(i + 1)];\\n            if (alpha) {\\n                i++;\\n            } else {\\n                alpha = charInfo[''];\\n            }\\n            if (alpha) {\\n                result += \\\"&\\\" + alpha + \\\";\\\";\\n                i++;\\n                continue;\\n            }\\n        }\\n        if (c < 32 || c > 126) {\\n            result += '&#' + c + ';';\\n        } else {\\n            result += str.charAt(i);\\n        }\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.encodeNonUTF = function (str) {\\n    return new Html5Entities().encodeNonUTF(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.prototype.encodeNonASCII = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLength = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLength) {\\n        var c = str.charCodeAt(i);\\n        if (c <= 255) {\\n            result += str[i++];\\n            continue;\\n        }\\n        result += '&#' + c + ';';\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml5Entities.encodeNonASCII = function (str) {\\n    return new Html5Entities().encodeNonASCII(str);\\n};\\n\\n/**\\n * @param {Object} alphaIndex Passed by reference.\\n * @param {Object} charIndex Passed by reference.\\n */\\nfunction createIndexes(alphaIndex, charIndex) {\\n    var i = ENTITIES.length;\\n    var _results = [];\\n    while (i--) {\\n        var e = ENTITIES[i];\\n        var alpha = e[0];\\n        var chars = e[1];\\n        var chr = chars[0];\\n        var addChar = chr < 32 || chr > 126 || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\\n        var charInfo;\\n        if (addChar) {\\n            charInfo = charIndex[chr] = charIndex[chr] || {};\\n        }\\n        if (chars[1]) {\\n            var chr2 = chars[1];\\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\\n            _results.push(addChar && (charInfo[chr2] = alpha));\\n        } else {\\n            alphaIndex[alpha] = String.fromCharCode(chr);\\n            _results.push(addChar && (charInfo[''] = alpha));\\n        }\\n    }\\n}\\n\\nmodule.exports = Html5Entities;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///6\\n\")},function(module,exports){eval(\"/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\\r\\nmodule.exports = __webpack_amd_options__;\\r\\n\\n/* WEBPACK VAR INJECTION */}.call(this, {}))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanM/MDA4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fd2VicGFja19hbWRfb3B0aW9uc19fICovXHJcbm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX2FtZF9vcHRpb25zX187XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///7\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\\n\\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n} : function (obj) {\\n\\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n};\\n\\nvar g;\\n\\n// This works in non-strict mode\\ng = function () {\\n\\treturn this;\\n}();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it\\'s\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQUk7O0FBRUo7QUFDQSxnQkFDQztRQUNBO0FBRkcsQ0FBQzs7QUFJTCxJQUNDO0FBQ0E7S0FBSSxLQUFLLFNBQVMsb0JBQW9CLENBQUMsR0FBRyxNQUMxQztBQUhELEVBR0UsT0FBTyxHQUNSO0FBQ0E7S0FBSSxRQUFPLDREQUFXLFVBQVUsSUFDaEM7OztBQUVEO0FBQ0E7QUFDQTs7QUFFQSxPQUFPLFVBQVUiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLCBldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2ggKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///8\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\n\\nvar _react = __webpack_require__(/*! react */ 1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar App = _react2.default.createClass({\\n    displayName: 'App',\\n    render: function render() {\\n        return _react2.default.createElement('h1', null, 'Notes');\\n    }\\n});\\n\\nexports.default = App;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50cy9hcHAuanN4PzA5OWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBTSxzQkFBWTtpQkFDZDtBQUQwQiw4QkFFdEI7ZUFBTywwQ0FDVjtBQUh5QjtBQUFBLENBQWxCIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgQXBwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xyXG4gICAgcmVuZGVyKCl7XHJcbiAgICAgICAgcmV0dXJuIDxoMT5Ob3RlczwvaDE+O1xyXG4gICAgfVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFwcDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///9\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n */\\n\\n\\n\\n/**\\n * @param {DOMElement} node input/textarea to focus\\n */\\n\\nfunction focusNode(node) {\\n  // IE8 can throw \"Can\\'t move focus to the control because it is invisible,\\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\\n  // reasons that are too expensive and fragile to test.\\n  try {\\n    node.focus();\\n  } catch (e) {}\\n}\\n\\nmodule.exports = focusNode;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZm9jdXNOb2RlLmpzP2Y5MGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUE7Ozs7QUFJQSxTQUFTLFVBQVUsTUFDakI7QUFDQTtBQUNBO0FBQ0E7TUFDRTtTQUNEO0FBRkQsSUFFRSxPQUFPLEdBQUssQ0FDZjs7O0FBRUQsT0FBTyxVQUFVIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gbm9kZSBpbnB1dC90ZXh0YXJlYSB0byBmb2N1c1xuICovXG5cbmZ1bmN0aW9uIGZvY3VzTm9kZShub2RlKSB7XG4gIC8vIElFOCBjYW4gdGhyb3cgXCJDYW4ndCBtb3ZlIGZvY3VzIHRvIHRoZSBjb250cm9sIGJlY2F1c2UgaXQgaXMgaW52aXNpYmxlLFxuICAvLyBub3QgZW5hYmxlZCwgb3Igb2YgYSB0eXBlIHRoYXQgZG9lcyBub3QgYWNjZXB0IHRoZSBmb2N1cy5cIiBmb3IgYWxsIGtpbmRzIG9mXG4gIC8vIHJlYXNvbnMgdGhhdCBhcmUgdG9vIGV4cGVuc2l2ZSBhbmQgZnJhZ2lsZSB0byB0ZXN0LlxuICB0cnkge1xuICAgIG5vZGUuZm9jdXMoKTtcbiAgfSBjYXRjaCAoZSkge31cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmb2N1c05vZGU7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///10\\n')},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\n/**\\n * @param {*} object The object to check.\\n * @return {boolean} Whether or not the object is a DOM node.\\n */\\n\\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n};\\n\\nfunction isNode(object) {\\n  var doc = object ? object.ownerDocument || object : document;\\n  var defaultView = doc.defaultView || window;\\n  return !!(object && (typeof defaultView.Node === \\'function\\' ? object instanceof defaultView.Node : (typeof object === \\'undefined\\' ? \\'undefined\\' : _typeof(object)) === \\'object\\' && typeof object.nodeType === \\'number\\' && typeof object.nodeName === \\'string\\'));\\n}\\n\\nmodule.exports = isNode;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNOb2RlLmpzP2Y3ODYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7Ozs7O0FBSUEsU0FBUyxPQUFPLFFBQ2Q7TUFBSSxNQUFNLFNBQVMsT0FBTyxpQkFBaUIsU0FDM0M7TUFBSSxjQUFjLElBQUksZUFDdEI7U0FBTyxDQUFDLEVBQUUsV0FBVyxPQUFPLFlBQVksU0FBUyxhQUFhLGtCQUFrQixZQUFZLE9BQU8sUUFBTyw0REFBVyxZQUFZLE9BQU8sT0FBTyxhQUFhLFlBQVksT0FBTyxPQUFPLGFBQ3ZMOzs7QUFFRCxPQUFPLFVBQVUiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZShvYmplY3QpIHtcbiAgdmFyIGRvYyA9IG9iamVjdCA/IG9iamVjdC5vd25lckRvY3VtZW50IHx8IG9iamVjdCA6IGRvY3VtZW50O1xuICB2YXIgZGVmYXVsdFZpZXcgPSBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICByZXR1cm4gISEob2JqZWN0ICYmICh0eXBlb2YgZGVmYXVsdFZpZXcuTm9kZSA9PT0gJ2Z1bmN0aW9uJyA/IG9iamVjdCBpbnN0YW5jZW9mIGRlZmF1bHRWaWV3Lk5vZGUgOiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVOYW1lID09PSAnc3RyaW5nJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTm9kZTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///11\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\nvar isNode = __webpack_require__(/*! ./isNode */ 11);\\n\\n/**\\n * @param {*} object The object to check.\\n * @return {boolean} Whether or not the object is a DOM text node.\\n */\\nfunction isTextNode(object) {\\n  return isNode(object) && object.nodeType == 3;\\n}\\n\\nmodule.exports = isTextNode;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNUZXh0Tm9kZS5qcz80OTBkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOzs7Ozs7Ozs7QUFTQSxJQUFJLFNBQVMsb0JBQVE7O0FBRXJCOzs7O0FBSUEsU0FBUyxXQUFXLFFBQ2xCO1NBQU8sT0FBTyxXQUFXLE9BQU8sWUFDakM7OztBQUVELE9BQU8sVUFBVSIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL2lzTm9kZScpO1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIHRleHQgbm9kZS5cbiAqL1xuZnVuY3Rpb24gaXNUZXh0Tm9kZShvYmplY3QpIHtcbiAgcmV0dXJuIGlzTm9kZShvYmplY3QpICYmIG9iamVjdC5ub2RlVHlwZSA9PSAzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzVGV4dE5vZGU7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///12\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * \\n */\\n\\nvar isTextNode = __webpack_require__(/*! ./isTextNode */ 12);\\n\\n/*eslint-disable no-bitwise */\\n\\n/**\\n * Checks if a given DOM node contains or is another DOM node.\\n */\\nfunction containsNode(outerNode, innerNode) {\\n  if (!outerNode || !innerNode) {\\n    return false;\\n  } else if (outerNode === innerNode) {\\n    return true;\\n  } else if (isTextNode(outerNode)) {\\n    return false;\\n  } else if (isTextNode(innerNode)) {\\n    return containsNode(outerNode, innerNode.parentNode);\\n  } else if ('contains' in outerNode) {\\n    return outerNode.contains(innerNode);\\n  } else if (outerNode.compareDocumentPosition) {\\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\\n  } else {\\n    return false;\\n  }\\n}\\n\\nmodule.exports = containsNode;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvY29udGFpbnNOb2RlLmpzPzRkNmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7Ozs7Ozs7OztBQVNBLElBQUksYUFBYSxvQkFBUTs7QUFFekI7O0FBRUE7OztBQUdBLFNBQVMsYUFBYSxXQUFXLFdBQy9CO01BQUksQ0FBQyxhQUFhLENBQUMsV0FDakI7V0FDRDtBQUZELGFBRVcsY0FBYyxXQUN2QjtXQUNEO0FBRk0sYUFFSSxXQUFXLFlBQ3BCO1dBQ0Q7QUFGTSxhQUVJLFdBQVcsWUFDcEI7V0FBTyxhQUFhLFdBQVcsVUFDaEM7QUFGTSxhQUVJLGNBQWMsV0FDdkI7V0FBTyxVQUFVLFNBQ2xCO0FBRk0sYUFFSSxVQUFVLHlCQUNuQjtXQUFPLENBQUMsRUFBRSxVQUFVLHdCQUF3QixhQUM3QztBQUZNLFNBR0w7V0FDRDtBQUNGOzs7QUFFRCxPQUFPLFVBQVUiLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxudmFyIGlzVGV4dE5vZGUgPSByZXF1aXJlKCcuL2lzVGV4dE5vZGUnKTtcblxuLyplc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gRE9NIG5vZGUgY29udGFpbnMgb3IgaXMgYW5vdGhlciBET00gbm9kZS5cbiAqL1xuZnVuY3Rpb24gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlKSB7XG4gIGlmICghb3V0ZXJOb2RlIHx8ICFpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlID09PSBpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKG91dGVyTm9kZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShpbm5lck5vZGUpKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZS5wYXJlbnROb2RlKTtcbiAgfSBlbHNlIGlmICgnY29udGFpbnMnIGluIG91dGVyTm9kZSkge1xuICAgIHJldHVybiBvdXRlck5vZGUuY29udGFpbnMoaW5uZXJOb2RlKTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24pIHtcbiAgICByZXR1cm4gISEob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGlubmVyTm9kZSkgJiAxNik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGFpbnNOb2RlOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///13\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n * \\n */\\n\\n/*eslint-disable no-self-compare */\\n\\n\\n\\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n};\\n\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n/**\\n * inlined Object.is polyfill to avoid requiring consumers ship their own\\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\\n */\\nfunction is(x, y) {\\n  // SameValue algorithm\\n  if (x === y) {\\n    // Steps 1-5, 7-10\\n    // Steps 6.b-6.e: +0 != -0\\n    // Added the nonzero y check to make Flow happy, but it is redundant\\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\\n  } else {\\n    // Step 6.a: NaN == NaN\\n    return x !== x && y !== y;\\n  }\\n}\\n\\n/**\\n * Performs equality by iterating through keys on an object and returning false\\n * when any key has values which are not strictly equal between the arguments.\\n * Returns true when the values of all keys are strictly equal.\\n */\\nfunction shallowEqual(objA, objB) {\\n  if (is(objA, objB)) {\\n    return true;\\n  }\\n\\n  if ((typeof objA === \\'undefined\\' ? \\'undefined\\' : _typeof(objA)) !== \\'object\\' || objA === null || (typeof objB === \\'undefined\\' ? \\'undefined\\' : _typeof(objB)) !== \\'object\\' || objB === null) {\\n    return false;\\n  }\\n\\n  var keysA = Object.keys(objA);\\n  var keysB = Object.keys(objB);\\n\\n  if (keysA.length !== keysB.length) {\\n    return false;\\n  }\\n\\n  // Test for A\\'s keys different from B.\\n  for (var i = 0; i < keysA.length; i++) {\\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\\n      return false;\\n    }\\n  }\\n\\n  return true;\\n}\\n\\nmodule.exports = shallowEqual;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvc2hhbGxvd0VxdWFsLmpzP2FmMzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFVQTs7QUFFQTs7Ozs7Ozs7OztBQUVBLElBQUksaUJBQWlCLE9BQU8sVUFBVTs7QUFFdEM7Ozs7QUFJQSxTQUFTLEdBQUcsR0FBRyxHQUNiO0FBQ0E7TUFBSSxNQUFNLEdBQ1I7QUFDQTtBQUNBO0FBQ0E7V0FBTyxNQUFNLEtBQUssTUFBTSxLQUFLLElBQUksTUFBTSxJQUN4QztBQUxELFNBTUU7QUFDQTtXQUFPLE1BQU0sS0FBSyxNQUNuQjtBQUNGOzs7QUFFRDs7Ozs7QUFLQSxTQUFTLGFBQWEsTUFBTSxNQUMxQjtNQUFJLEdBQUcsTUFBTSxPQUNYO1dBQ0Q7QUFFRDs7TUFBSSxRQUFPLHdEQUFTLFlBQVksU0FBUyxRQUFRLFFBQU8sd0RBQVMsWUFBWSxTQUFTLE1BQ3BGO1dBQ0Q7QUFFRDs7TUFBSSxRQUFRLE9BQU8sS0FDbkI7TUFBSSxRQUFRLE9BQU8sS0FFbkI7O01BQUksTUFBTSxXQUFXLE1BQU0sUUFDekI7V0FDRDtBQUVEOztBQUNBO09BQUssSUFBSSxJQUFJLEdBQUcsSUFBSSxNQUFNLFFBQVEsS0FDaEM7UUFBSSxDQUFDLGVBQWUsS0FBSyxNQUFNLE1BQU0sT0FBTyxDQUFDLEdBQUcsS0FBSyxNQUFNLEtBQUssS0FBSyxNQUFNLE1BQ3pFO2FBQ0Q7QUFDRjtBQUVEOztTQUNEOzs7QUFFRCxPQUFPLFVBQVUiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG4gKi9cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgLy8gU2FtZVZhbHVlIGFsZ29yaXRobVxuICBpZiAoeCA9PT0geSkge1xuICAgIC8vIFN0ZXBzIDEtNSwgNy0xMFxuICAgIC8vIFN0ZXBzIDYuYi02LmU6ICswICE9IC0wXG4gICAgLy8gQWRkZWQgdGhlIG5vbnplcm8geSBjaGVjayB0byBtYWtlIEZsb3cgaGFwcHksIGJ1dCBpdCBpcyByZWR1bmRhbnRcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuLyoqXG4gKiBQZXJmb3JtcyBlcXVhbGl0eSBieSBpdGVyYXRpbmcgdGhyb3VnaCBrZXlzIG9uIGFuIG9iamVjdCBhbmQgcmV0dXJuaW5nIGZhbHNlXG4gKiB3aGVuIGFueSBrZXkgaGFzIHZhbHVlcyB3aGljaCBhcmUgbm90IHN0cmljdGx5IGVxdWFsIGJldHdlZW4gdGhlIGFyZ3VtZW50cy5cbiAqIFJldHVybnMgdHJ1ZSB3aGVuIHRoZSB2YWx1ZXMgb2YgYWxsIGtleXMgYXJlIHN0cmljdGx5IGVxdWFsLlxuICovXG5mdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICBpZiAoaXMob2JqQSwgb2JqQikpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gJ29iamVjdCcgfHwgb2JqQSA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHwgb2JqQiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBUZXN0IGZvciBBJ3Mga2V5cyBkaWZmZXJlbnQgZnJvbSBCLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNoYWxsb3dFcXVhbDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///14\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\n/* eslint-disable fb-www/typeof-undefined */\\n\\n/**\\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\\n * not safe to call document.activeElement if there is nothing focused.\\n *\\n * The activeElement will be null only if the document or document body is not\\n * yet defined.\\n *\\n * @param {?DOMDocument} doc Defaults to current document.\\n * @return {?DOMElement}\\n */\\n\\nfunction getActiveElement(doc) /*?DOMElement*/{\\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\\n  if (typeof doc === 'undefined') {\\n    return null;\\n  }\\n  try {\\n    return doc.activeElement || doc.body;\\n  } catch (e) {\\n    return doc.body;\\n  }\\n}\\n\\nmodule.exports = getActiveElement;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZ2V0QWN0aXZlRWxlbWVudC5qcz84ZTVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOzs7Ozs7Ozs7QUFTQTs7QUFFQTs7Ozs7Ozs7Ozs7QUFVQSxTQUFTLGlCQUFpQixLQUFLLGVBQzdCO1FBQU0sUUFBUSxPQUFPLGFBQWEsY0FBYyxXQUNoRDtNQUFJLE9BQU8sUUFBUSxhQUNqQjtXQUNEO0FBQ0Q7TUFDRTtXQUFPLElBQUksaUJBQWlCLElBQzdCO0FBRkQsSUFFRSxPQUFPLEdBQ1A7V0FBTyxJQUNSO0FBQ0Y7OztBQUVELE9BQU8sVUFBVSIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIGZiLXd3dy90eXBlb2YtdW5kZWZpbmVkICovXG5cbi8qKlxuICogU2FtZSBhcyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGJ1dCB3cmFwcyBpbiBhIHRyeS1jYXRjaCBibG9jay4gSW4gSUUgaXQgaXNcbiAqIG5vdCBzYWZlIHRvIGNhbGwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBpZiB0aGVyZSBpcyBub3RoaW5nIGZvY3VzZWQuXG4gKlxuICogVGhlIGFjdGl2ZUVsZW1lbnQgd2lsbCBiZSBudWxsIG9ubHkgaWYgdGhlIGRvY3VtZW50IG9yIGRvY3VtZW50IGJvZHkgaXMgbm90XG4gKiB5ZXQgZGVmaW5lZC5cbiAqXG4gKiBAcGFyYW0gez9ET01Eb2N1bWVudH0gZG9jIERlZmF1bHRzIHRvIGN1cnJlbnQgZG9jdW1lbnQuXG4gKiBAcmV0dXJuIHs/RE9NRWxlbWVudH1cbiAqL1xuZnVuY3Rpb24gZ2V0QWN0aXZlRWxlbWVudChkb2MpIC8qP0RPTUVsZW1lbnQqL3tcbiAgZG9jID0gZG9jIHx8ICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnID8gZG9jdW1lbnQgOiB1bmRlZmluZWQpO1xuICBpZiAodHlwZW9mIGRvYyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBkb2MuYWN0aXZlRWxlbWVudCB8fCBkb2MuYm9keTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBkb2MuYm9keTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEFjdGl2ZUVsZW1lbnQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///15\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\nvar emptyFunction = __webpack_require__(/*! ./emptyFunction */ 0);\\n\\n/**\\n * Upstream version of event listener. Does not take into account specific\\n * nature of platform.\\n */\\nvar EventListener = {\\n  /**\\n   * Listen to DOM events during the bubble phase.\\n   *\\n   * @param {DOMEventTarget} target DOM element to register listener on.\\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\\n   * @param {function} callback Callback function.\\n   * @return {object} Object with a `remove` method.\\n   */\\n  listen: function listen(target, eventType, callback) {\\n    if (target.addEventListener) {\\n      target.addEventListener(eventType, callback, false);\\n      return {\\n        remove: function remove() {\\n          target.removeEventListener(eventType, callback, false);\\n        }\\n      };\\n    } else if (target.attachEvent) {\\n      target.attachEvent('on' + eventType, callback);\\n      return {\\n        remove: function remove() {\\n          target.detachEvent('on' + eventType, callback);\\n        }\\n      };\\n    }\\n  },\\n\\n  /**\\n   * Listen to DOM events during the capture phase.\\n   *\\n   * @param {DOMEventTarget} target DOM element to register listener on.\\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\\n   * @param {function} callback Callback function.\\n   * @return {object} Object with a `remove` method.\\n   */\\n  capture: function capture(target, eventType, callback) {\\n    if (target.addEventListener) {\\n      target.addEventListener(eventType, callback, true);\\n      return {\\n        remove: function remove() {\\n          target.removeEventListener(eventType, callback, true);\\n        }\\n      };\\n    } else {\\n      if (false) {}\\n      return {\\n        remove: emptyFunction\\n      };\\n    }\\n  },\\n\\n  registerDefault: function registerDefault() {}\\n};\\n\\nmodule.exports = EventListener;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXZlbnRMaXN0ZW5lci5qcz81YjcxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOzs7Ozs7Ozs7QUFTQSxJQUFJLGdCQUFnQixvQkFBUTs7QUFFNUI7Ozs7QUFJQSxJQUFJO0FBU0Y7Ozs7Ozs7O1VBQVEsU0FBUyxPQUFPLFFBQVEsV0FBVyxVQUN6QztRQUFJLE9BQU8sa0JBQ1Q7YUFBTyxpQkFBaUIsV0FBVyxVQUNuQzs7Z0JBQ1UsU0FBUyxTQUNmO2lCQUFPLG9CQUFvQixXQUFXLFVBQ3ZDO0FBRUo7QUFKRztBQUhKLFdBT08sSUFBSSxPQUFPLGFBQ2hCO2FBQU8sWUFBWSxPQUFPLFdBQzFCOztnQkFDVSxTQUFTLFNBQ2Y7aUJBQU8sWUFBWSxPQUFPLFdBQzNCO0FBRUo7QUFKRztBQUtMO0FBRUQ7O0FBUUE7Ozs7Ozs7O1dBQVMsU0FBUyxRQUFRLFFBQVEsV0FBVyxVQUMzQztRQUFJLE9BQU8sa0JBQ1Q7YUFBTyxpQkFBaUIsV0FBVyxVQUNuQzs7Z0JBQ1UsU0FBUyxTQUNmO2lCQUFPLG9CQUFvQixXQUFXLFVBQ3ZDO0FBRUo7QUFKRztBQUhKLFdBUUU7VUFBSSxLQUF5QixFQUMzQixFQUVGOztnQkFHRDtBQUZHO0FBR0w7QUFFRDs7bUJBQWlCLFNBQVMsa0JBQW9CLENBckQ1QjtBQUNsQjs7QUF1REYsT0FBTyxVQUFVIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCcuL2VtcHR5RnVuY3Rpb24nKTtcblxuLyoqXG4gKiBVcHN0cmVhbSB2ZXJzaW9uIG9mIGV2ZW50IGxpc3RlbmVyLiBEb2VzIG5vdCB0YWtlIGludG8gYWNjb3VudCBzcGVjaWZpY1xuICogbmF0dXJlIG9mIHBsYXRmb3JtLlxuICovXG52YXIgRXZlbnRMaXN0ZW5lciA9IHtcbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgYnViYmxlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0LmF0dGFjaEV2ZW50KSB7XG4gICAgICB0YXJnZXQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LmRldGFjaEV2ZW50KCdvbicgKyBldmVudFR5cGUsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZS5cbiAgICpcbiAgICogQHBhcmFtIHtET01FdmVudFRhcmdldH0gdGFyZ2V0IERPTSBlbGVtZW50IHRvIHJlZ2lzdGVyIGxpc3RlbmVyIG9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlIEV2ZW50IHR5cGUsIGUuZy4gJ2NsaWNrJyBvciAnbW91c2VvdmVyJy5cbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24uXG4gICAqIEByZXR1cm4ge29iamVjdH0gT2JqZWN0IHdpdGggYSBgcmVtb3ZlYCBtZXRob2QuXG4gICAqL1xuICBjYXB0dXJlOiBmdW5jdGlvbiBjYXB0dXJlKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgdHJ1ZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignQXR0ZW1wdGVkIHRvIGxpc3RlbiB0byBldmVudHMgZHVyaW5nIHRoZSBjYXB0dXJlIHBoYXNlIG9uIGEgJyArICdicm93c2VyIHRoYXQgZG9lcyBub3Qgc3VwcG9ydCB0aGUgY2FwdHVyZSBwaGFzZS4gWW91ciBhcHBsaWNhdGlvbiAnICsgJ3dpbGwgbm90IHJlY2VpdmUgc29tZSBldmVudHMuJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGVtcHR5RnVuY3Rpb25cbiAgICAgIH07XG4gICAgfVxuICB9LFxuXG4gIHJlZ2lzdGVyRGVmYXVsdDogZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0KCkge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRMaXN0ZW5lcjsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///16\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n */\\n\\n\\n\\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\\n\\n/**\\n * Simple, lightweight module assisting with the detection and context of\\n * Worker. Helps avoid circular dependencies and allows code to reason about\\n * whether or not they are in a Worker, even if they never include the main\\n * `ReactWorker` dependency.\\n */\\nvar ExecutionEnvironment = {\\n\\n  canUseDOM: canUseDOM,\\n\\n  canUseWorkers: typeof Worker !== 'undefined',\\n\\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\\n\\n  canUseViewport: canUseDOM && !!window.screen,\\n\\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\\n\\n};\\n\\nmodule.exports = ExecutionEnvironment;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXhlY3V0aW9uRW52aXJvbm1lbnQuanM/YzRiMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxJQUFJLFlBQVksQ0FBQyxFQUFFLE9BQU8sV0FBVyxlQUFlLE9BQU8sWUFBWSxPQUFPLFNBQVM7O0FBRXZGOzs7Ozs7QUFNQSxJQUFJOzthQUlGOztpQkFBZSxPQUFPLFdBRXRCOzt3QkFBc0IsYUFBYSxDQUFDLEVBQUUsT0FBTyxvQkFBb0IsT0FFakU7O2tCQUFnQixhQUFhLENBQUMsQ0FBQyxPQUUvQjs7Y0FBWSxDQUFDLFVBQVU7O0FBUnZCOztBQVlGLE9BQU8sVUFBVSIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbi8qKlxuICogU2ltcGxlLCBsaWdodHdlaWdodCBtb2R1bGUgYXNzaXN0aW5nIHdpdGggdGhlIGRldGVjdGlvbiBhbmQgY29udGV4dCBvZlxuICogV29ya2VyLiBIZWxwcyBhdm9pZCBjaXJjdWxhciBkZXBlbmRlbmNpZXMgYW5kIGFsbG93cyBjb2RlIHRvIHJlYXNvbiBhYm91dFxuICogd2hldGhlciBvciBub3QgdGhleSBhcmUgaW4gYSBXb3JrZXIsIGV2ZW4gaWYgdGhleSBuZXZlciBpbmNsdWRlIHRoZSBtYWluXG4gKiBgUmVhY3RXb3JrZXJgIGRlcGVuZGVuY3kuXG4gKi9cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHtcblxuICBjYW5Vc2VET006IGNhblVzZURPTSxcblxuICBjYW5Vc2VXb3JrZXJzOiB0eXBlb2YgV29ya2VyICE9PSAndW5kZWZpbmVkJyxcblxuICBjYW5Vc2VFdmVudExpc3RlbmVyczogY2FuVXNlRE9NICYmICEhKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIHx8IHdpbmRvdy5hdHRhY2hFdmVudCksXG5cbiAgY2FuVXNlVmlld3BvcnQ6IGNhblVzZURPTSAmJiAhIXdpbmRvdy5zY3JlZW4sXG5cbiAgaXNJbldvcmtlcjogIWNhblVzZURPTSAvLyBGb3Igbm93LCB0aGlzIGlzIHRydWUgLSBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFeGVjdXRpb25FbnZpcm9ubWVudDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///17\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('/** @license React v16.2.0\\n * react-dom.production.min.js\\n *\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n/*\\n Modernizr 3.0.0pre (Custom Build) | MIT\\n*/\\n\\n\\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n};\\n\\nvar aa = __webpack_require__(/*! react */ 1),\\n    l = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 17),\\n    B = __webpack_require__(/*! object-assign */ 4),\\n    C = __webpack_require__(/*! fbjs/lib/emptyFunction */ 0),\\n    ba = __webpack_require__(/*! fbjs/lib/EventListener */ 16),\\n    da = __webpack_require__(/*! fbjs/lib/getActiveElement */ 15),\\n    ea = __webpack_require__(/*! fbjs/lib/shallowEqual */ 14),\\n    fa = __webpack_require__(/*! fbjs/lib/containsNode */ 13),\\n    ia = __webpack_require__(/*! fbjs/lib/focusNode */ 10),\\n    D = __webpack_require__(/*! fbjs/lib/emptyObject */ 3);\\nfunction E(a) {\\n  for (var b = arguments.length - 1, c = \"Minified React error #\" + a + \"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\\\x3d\" + a, d = 0; d < b; d++) {\\n    c += \"\\\\x26args[]\\\\x3d\" + encodeURIComponent(arguments[d + 1]);\\n  }b = Error(c + \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name = \"Invariant Violation\";b.framesToPop = 1;throw b;\\n}aa ? void 0 : E(\"227\");\\nvar oa = { children: !0, dangerouslySetInnerHTML: !0, defaultValue: !0, defaultChecked: !0, innerHTML: !0, suppressContentEditableWarning: !0, suppressHydrationWarning: !0, style: !0 };function pa(a, b) {\\n  return (a & b) === b;\\n}\\nvar ta = { MUST_USE_PROPERTY: 1, HAS_BOOLEAN_VALUE: 4, HAS_NUMERIC_VALUE: 8, HAS_POSITIVE_NUMERIC_VALUE: 24, HAS_OVERLOADED_BOOLEAN_VALUE: 32, HAS_STRING_BOOLEAN_VALUE: 64, injectDOMPropertyConfig: function injectDOMPropertyConfig(a) {\\n    var b = ta,\\n        c = a.Properties || {},\\n        d = a.DOMAttributeNamespaces || {},\\n        e = a.DOMAttributeNames || {};a = a.DOMMutationMethods || {};for (var f in c) {\\n      ua.hasOwnProperty(f) ? E(\"48\", f) : void 0;var g = f.toLowerCase(),\\n          h = c[f];g = { attributeName: g, attributeNamespace: null, propertyName: f, mutationMethod: null, mustUseProperty: pa(h, b.MUST_USE_PROPERTY),\\n        hasBooleanValue: pa(h, b.HAS_BOOLEAN_VALUE), hasNumericValue: pa(h, b.HAS_NUMERIC_VALUE), hasPositiveNumericValue: pa(h, b.HAS_POSITIVE_NUMERIC_VALUE), hasOverloadedBooleanValue: pa(h, b.HAS_OVERLOADED_BOOLEAN_VALUE), hasStringBooleanValue: pa(h, b.HAS_STRING_BOOLEAN_VALUE) };1 >= g.hasBooleanValue + g.hasNumericValue + g.hasOverloadedBooleanValue ? void 0 : E(\"50\", f);e.hasOwnProperty(f) && (g.attributeName = e[f]);d.hasOwnProperty(f) && (g.attributeNamespace = d[f]);a.hasOwnProperty(f) && (g.mutationMethod = a[f]);ua[f] = g;\\n    }\\n  } },\\n    ua = {};\\nfunction va(a, b) {\\n  if (oa.hasOwnProperty(a) || 2 < a.length && (\"o\" === a[0] || \"O\" === a[0]) && (\"n\" === a[1] || \"N\" === a[1])) return !1;if (null === b) return !0;switch (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) {case \"boolean\":\\n      return oa.hasOwnProperty(a) ? a = !0 : (b = wa(a)) ? a = b.hasBooleanValue || b.hasStringBooleanValue || b.hasOverloadedBooleanValue : (a = a.toLowerCase().slice(0, 5), a = \"data-\" === a || \"aria-\" === a), a;case \"undefined\":case \"number\":case \"string\":case \"object\":\\n      return !0;default:\\n      return !1;}\\n}function wa(a) {\\n  return ua.hasOwnProperty(a) ? ua[a] : null;\\n}\\nvar xa = ta,\\n    ya = xa.MUST_USE_PROPERTY,\\n    K = xa.HAS_BOOLEAN_VALUE,\\n    za = xa.HAS_NUMERIC_VALUE,\\n    Aa = xa.HAS_POSITIVE_NUMERIC_VALUE,\\n    Ba = xa.HAS_OVERLOADED_BOOLEAN_VALUE,\\n    Ca = xa.HAS_STRING_BOOLEAN_VALUE,\\n    Da = { Properties: { allowFullScreen: K, async: K, autoFocus: K, autoPlay: K, capture: Ba, checked: ya | K, cols: Aa, contentEditable: Ca, controls: K, \"default\": K, defer: K, disabled: K, download: Ba, draggable: Ca, formNoValidate: K, hidden: K, loop: K, multiple: ya | K, muted: ya | K, noValidate: K, open: K, playsInline: K, readOnly: K, required: K, reversed: K, rows: Aa, rowSpan: za,\\n    scoped: K, seamless: K, selected: ya | K, size: Aa, start: za, span: Aa, spellCheck: Ca, style: 0, tabIndex: 0, itemScope: K, acceptCharset: 0, className: 0, htmlFor: 0, httpEquiv: 0, value: Ca }, DOMAttributeNames: { acceptCharset: \"accept-charset\", className: \"class\", htmlFor: \"for\", httpEquiv: \"http-equiv\" }, DOMMutationMethods: { value: function value(a, b) {\\n      if (null == b) return a.removeAttribute(\"value\");\"number\" !== a.type || !1 === a.hasAttribute(\"value\") ? a.setAttribute(\"value\", \"\" + b) : a.validity && !a.validity.badInput && a.ownerDocument.activeElement !== a && a.setAttribute(\"value\", \"\" + b);\\n    } } },\\n    Ea = xa.HAS_STRING_BOOLEAN_VALUE,\\n    M = { xlink: \"http://www.w3.org/1999/xlink\", xml: \"http://www.w3.org/XML/1998/namespace\" },\\n    Ga = { Properties: { autoReverse: Ea, externalResourcesRequired: Ea, preserveAlpha: Ea }, DOMAttributeNames: { autoReverse: \"autoReverse\", externalResourcesRequired: \"externalResourcesRequired\", preserveAlpha: \"preserveAlpha\" }, DOMAttributeNamespaces: { xlinkActuate: M.xlink, xlinkArcrole: M.xlink, xlinkHref: M.xlink, xlinkRole: M.xlink, xlinkShow: M.xlink, xlinkTitle: M.xlink, xlinkType: M.xlink,\\n    xmlBase: M.xml, xmlLang: M.xml, xmlSpace: M.xml } },\\n    Ha = /[\\\\-\\\\:]([a-z])/g;function Ia(a) {\\n  return a[1].toUpperCase();\\n}\\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function (a) {\\n  var b = a.replace(Ha, Ia);Ga.Properties[b] = 0;Ga.DOMAttributeNames[b] = a;\\n});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);\\nvar P = { _caughtError: null, _hasCaughtError: !1, _rethrowError: null, _hasRethrowError: !1, injection: { injectErrorUtils: function injectErrorUtils(a) {\\n      \"function\" !== typeof a.invokeGuardedCallback ? E(\"197\") : void 0;Ja = a.invokeGuardedCallback;\\n    } }, invokeGuardedCallback: function invokeGuardedCallback(a, b, c, d, e, f, g, h, k) {\\n    Ja.apply(P, arguments);\\n  }, invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(a, b, c, d, e, f, g, h, k) {\\n    P.invokeGuardedCallback.apply(this, arguments);if (P.hasCaughtError()) {\\n      var q = P.clearCaughtError();P._hasRethrowError || (P._hasRethrowError = !0, P._rethrowError = q);\\n    }\\n  }, rethrowCaughtError: function rethrowCaughtError() {\\n    return Ka.apply(P, arguments);\\n  }, hasCaughtError: function hasCaughtError() {\\n    return P._hasCaughtError;\\n  }, clearCaughtError: function clearCaughtError() {\\n    if (P._hasCaughtError) {\\n      var a = P._caughtError;P._caughtError = null;P._hasCaughtError = !1;return a;\\n    }E(\"198\");\\n  } };function Ja(a, b, c, d, e, f, g, h, k) {\\n  P._hasCaughtError = !1;P._caughtError = null;var q = Array.prototype.slice.call(arguments, 3);try {\\n    b.apply(c, q);\\n  } catch (v) {\\n    P._caughtError = v, P._hasCaughtError = !0;\\n  }\\n}\\nfunction Ka() {\\n  if (P._hasRethrowError) {\\n    var a = P._rethrowError;P._rethrowError = null;P._hasRethrowError = !1;throw a;\\n  }\\n}var La = null,\\n    Ma = {};\\nfunction Na() {\\n  if (La) for (var a in Ma) {\\n    var b = Ma[a],\\n        c = La.indexOf(a);-1 < c ? void 0 : E(\"96\", a);if (!Oa[c]) {\\n      b.extractEvents ? void 0 : E(\"97\", a);Oa[c] = b;c = b.eventTypes;for (var d in c) {\\n        var e = void 0;var f = c[d],\\n            g = b,\\n            h = d;Pa.hasOwnProperty(h) ? E(\"99\", h) : void 0;Pa[h] = f;var k = f.phasedRegistrationNames;if (k) {\\n          for (e in k) {\\n            k.hasOwnProperty(e) && Qa(k[e], g, h);\\n          }e = !0;\\n        } else f.registrationName ? (Qa(f.registrationName, g, h), e = !0) : e = !1;e ? void 0 : E(\"98\", d, a);\\n      }\\n    }\\n  }\\n}\\nfunction Qa(a, b, c) {\\n  Ra[a] ? E(\"100\", a) : void 0;Ra[a] = b;Sa[a] = b.eventTypes[c].dependencies;\\n}var Oa = [],\\n    Pa = {},\\n    Ra = {},\\n    Sa = {};function Ta(a) {\\n  La ? E(\"101\") : void 0;La = Array.prototype.slice.call(a);Na();\\n}function Ua(a) {\\n  var b = !1,\\n      c;for (c in a) {\\n    if (a.hasOwnProperty(c)) {\\n      var d = a[c];Ma.hasOwnProperty(c) && Ma[c] === d || (Ma[c] ? E(\"102\", c) : void 0, Ma[c] = d, b = !0);\\n    }\\n  }b && Na();\\n}\\nvar Va = Object.freeze({ plugins: Oa, eventNameDispatchConfigs: Pa, registrationNameModules: Ra, registrationNameDependencies: Sa, possibleRegistrationNames: null, injectEventPluginOrder: Ta, injectEventPluginsByName: Ua }),\\n    Wa = null,\\n    Xa = null,\\n    Ya = null;function Za(a, b, c, d) {\\n  b = a.type || \"unknown-event\";a.currentTarget = Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b, c, void 0, a);a.currentTarget = null;\\n}\\nfunction $a(a, b) {\\n  null == b ? E(\"30\") : void 0;if (null == a) return b;if (Array.isArray(a)) {\\n    if (Array.isArray(b)) return a.push.apply(a, b), a;a.push(b);return a;\\n  }return Array.isArray(b) ? [a].concat(b) : [a, b];\\n}function ab(a, b, c) {\\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\\n}var bb = null;\\nfunction cb(a, b) {\\n  if (a) {\\n    var c = a._dispatchListeners,\\n        d = a._dispatchInstances;if (Array.isArray(c)) for (var e = 0; e < c.length && !a.isPropagationStopped(); e++) {\\n      Za(a, b, c[e], d[e]);\\n    } else c && Za(a, b, c, d);a._dispatchListeners = null;a._dispatchInstances = null;a.isPersistent() || a.constructor.release(a);\\n  }\\n}function db(a) {\\n  return cb(a, !0);\\n}function gb(a) {\\n  return cb(a, !1);\\n}var hb = { injectEventPluginOrder: Ta, injectEventPluginsByName: Ua };\\nfunction ib(a, b) {\\n  var c = a.stateNode;if (!c) return null;var d = Wa(c);if (!d) return null;c = d[b];a: switch (b) {case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":\\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));a = !d;break a;default:\\n      a = !1;}if (a) return null;c && \"function\" !== typeof c ? E(\"231\", b, typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) : void 0;\\n  return c;\\n}function jb(a, b, c, d) {\\n  for (var e, f = 0; f < Oa.length; f++) {\\n    var g = Oa[f];g && (g = g.extractEvents(a, b, c, d)) && (e = $a(e, g));\\n  }return e;\\n}function kb(a) {\\n  a && (bb = $a(bb, a));\\n}function lb(a) {\\n  var b = bb;bb = null;b && (a ? ab(b, db) : ab(b, gb), bb ? E(\"95\") : void 0, P.rethrowCaughtError());\\n}var mb = Object.freeze({ injection: hb, getListener: ib, extractEvents: jb, enqueueEvents: kb, processEventQueue: lb }),\\n    nb = Math.random().toString(36).slice(2),\\n    Q = \"__reactInternalInstance$\" + nb,\\n    ob = \"__reactEventHandlers$\" + nb;\\nfunction pb(a) {\\n  if (a[Q]) return a[Q];for (var b = []; !a[Q];) {\\n    if (b.push(a), a.parentNode) a = a.parentNode;else return null;\\n  }var c = void 0,\\n      d = a[Q];if (5 === d.tag || 6 === d.tag) return d;for (; a && (d = a[Q]); a = b.pop()) {\\n    c = d;\\n  }return c;\\n}function qb(a) {\\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;E(\"33\");\\n}function rb(a) {\\n  return a[ob] || null;\\n}\\nvar sb = Object.freeze({ precacheFiberNode: function precacheFiberNode(a, b) {\\n    b[Q] = a;\\n  }, getClosestInstanceFromNode: pb, getInstanceFromNode: function getInstanceFromNode(a) {\\n    a = a[Q];return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\\n  }, getNodeFromInstance: qb, getFiberCurrentPropsFromNode: rb, updateFiberProps: function updateFiberProps(a, b) {\\n    a[ob] = b;\\n  } });function tb(a) {\\n  do {\\n    a = a[\"return\"];\\n  } while (a && 5 !== a.tag);return a ? a : null;\\n}function ub(a, b, c) {\\n  for (var d = []; a;) {\\n    d.push(a), a = tb(a);\\n  }for (a = d.length; 0 < a--;) {\\n    b(d[a], \"captured\", c);\\n  }for (a = 0; a < d.length; a++) {\\n    b(d[a], \"bubbled\", c);\\n  }\\n}\\nfunction vb(a, b, c) {\\n  if (b = ib(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = $a(c._dispatchListeners, b), c._dispatchInstances = $a(c._dispatchInstances, a);\\n}function wb(a) {\\n  a && a.dispatchConfig.phasedRegistrationNames && ub(a._targetInst, vb, a);\\n}function xb(a) {\\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\\n    var b = a._targetInst;b = b ? tb(b) : null;ub(b, vb, a);\\n  }\\n}\\nfunction yb(a, b, c) {\\n  a && c && c.dispatchConfig.registrationName && (b = ib(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = $a(c._dispatchListeners, b), c._dispatchInstances = $a(c._dispatchInstances, a));\\n}function zb(a) {\\n  a && a.dispatchConfig.registrationName && yb(a._targetInst, null, a);\\n}function Ab(a) {\\n  ab(a, wb);\\n}\\nfunction Bb(a, b, c, d) {\\n  if (c && d) a: {\\n    var e = c;for (var f = d, g = 0, h = e; h; h = tb(h)) {\\n      g++;\\n    }h = 0;for (var k = f; k; k = tb(k)) {\\n      h++;\\n    }for (; 0 < g - h;) {\\n      e = tb(e), g--;\\n    }for (; 0 < h - g;) {\\n      f = tb(f), h--;\\n    }for (; g--;) {\\n      if (e === f || e === f.alternate) break a;e = tb(e);f = tb(f);\\n    }e = null;\\n  } else e = null;f = e;for (e = []; c && c !== f;) {\\n    g = c.alternate;if (null !== g && g === f) break;e.push(c);c = tb(c);\\n  }for (c = []; d && d !== f;) {\\n    g = d.alternate;if (null !== g && g === f) break;c.push(d);d = tb(d);\\n  }for (d = 0; d < e.length; d++) {\\n    yb(e[d], \"bubbled\", a);\\n  }for (a = c.length; 0 < a--;) {\\n    yb(c[a], \"captured\", b);\\n  }\\n}\\nvar Cb = Object.freeze({ accumulateTwoPhaseDispatches: Ab, accumulateTwoPhaseDispatchesSkipTarget: function accumulateTwoPhaseDispatchesSkipTarget(a) {\\n    ab(a, xb);\\n  }, accumulateEnterLeaveDispatches: Bb, accumulateDirectDispatches: function accumulateDirectDispatches(a) {\\n    ab(a, zb);\\n  } }),\\n    Db = null;function Eb() {\\n  !Db && l.canUseDOM && (Db = \"textContent\" in document.documentElement ? \"textContent\" : \"innerText\");return Db;\\n}var S = { _root: null, _startText: null, _fallbackText: null };\\nfunction Fb() {\\n  if (S._fallbackText) return S._fallbackText;var a,\\n      b = S._startText,\\n      c = b.length,\\n      d,\\n      e = Gb(),\\n      f = e.length;for (a = 0; a < c && b[a] === e[a]; a++) {}var g = c - a;for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {}S._fallbackText = e.slice(a, 1 < d ? 1 - d : void 0);return S._fallbackText;\\n}function Gb() {\\n  return \"value\" in S._root ? S._root.value : S._root[Eb()];\\n}\\nvar Hb = \"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),\\n    Ib = { type: null, target: null, currentTarget: C.thatReturnsNull, eventPhase: null, bubbles: null, cancelable: null, timeStamp: function timeStamp(a) {\\n    return a.timeStamp || Date.now();\\n  }, defaultPrevented: null, isTrusted: null };\\nfunction T(a, b, c, d) {\\n  this.dispatchConfig = a;this._targetInst = b;this.nativeEvent = c;a = this.constructor.Interface;for (var e in a) {\\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\\n  }this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? C.thatReturnsTrue : C.thatReturnsFalse;this.isPropagationStopped = C.thatReturnsFalse;return this;\\n}\\nB(T.prototype, { preventDefault: function preventDefault() {\\n    this.defaultPrevented = !0;var a = this.nativeEvent;a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = C.thatReturnsTrue);\\n  }, stopPropagation: function stopPropagation() {\\n    var a = this.nativeEvent;a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = C.thatReturnsTrue);\\n  }, persist: function persist() {\\n    this.isPersistent = C.thatReturnsTrue;\\n  }, isPersistent: C.thatReturnsFalse,\\n  destructor: function destructor() {\\n    var a = this.constructor.Interface,\\n        b;for (b in a) {\\n      this[b] = null;\\n    }for (a = 0; a < Hb.length; a++) {\\n      this[Hb[a]] = null;\\n    }\\n  } });T.Interface = Ib;T.augmentClass = function (a, b) {\\n  function c() {}c.prototype = this.prototype;var d = new c();B(d, a.prototype);a.prototype = d;a.prototype.constructor = a;a.Interface = B({}, this.Interface, b);a.augmentClass = this.augmentClass;Jb(a);\\n};Jb(T);function Kb(a, b, c, d) {\\n  if (this.eventPool.length) {\\n    var e = this.eventPool.pop();this.call(e, a, b, c, d);return e;\\n  }return new this(a, b, c, d);\\n}\\nfunction Lb(a) {\\n  a instanceof this ? void 0 : E(\"223\");a.destructor();10 > this.eventPool.length && this.eventPool.push(a);\\n}function Jb(a) {\\n  a.eventPool = [];a.getPooled = Kb;a.release = Lb;\\n}function Mb(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}T.augmentClass(Mb, { data: null });function Nb(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}T.augmentClass(Nb, { data: null });var Pb = [9, 13, 27, 32],\\n    Vb = l.canUseDOM && \"CompositionEvent\" in window,\\n    Wb = null;l.canUseDOM && \"documentMode\" in document && (Wb = document.documentMode);var Xb;\\nif (Xb = l.canUseDOM && \"TextEvent\" in window && !Wb) {\\n  var Yb = window.opera;Xb = !(\"object\" === (typeof Yb === \"undefined\" ? \"undefined\" : _typeof(Yb)) && \"function\" === typeof Yb.version && 12 >= parseInt(Yb.version(), 10));\\n}\\nvar Zb = Xb,\\n    $b = l.canUseDOM && (!Vb || Wb && 8 < Wb && 11 >= Wb),\\n    ac = String.fromCharCode(32),\\n    bc = { beforeInput: { phasedRegistrationNames: { bubbled: \"onBeforeInput\", captured: \"onBeforeInputCapture\" }, dependencies: [\"topCompositionEnd\", \"topKeyPress\", \"topTextInput\", \"topPaste\"] }, compositionEnd: { phasedRegistrationNames: { bubbled: \"onCompositionEnd\", captured: \"onCompositionEndCapture\" }, dependencies: \"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \") }, compositionStart: { phasedRegistrationNames: { bubbled: \"onCompositionStart\",\\n      captured: \"onCompositionStartCapture\" }, dependencies: \"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \") }, compositionUpdate: { phasedRegistrationNames: { bubbled: \"onCompositionUpdate\", captured: \"onCompositionUpdateCapture\" }, dependencies: \"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \") } },\\n    cc = !1;\\nfunction dc(a, b) {\\n  switch (a) {case \"topKeyUp\":\\n      return -1 !== Pb.indexOf(b.keyCode);case \"topKeyDown\":\\n      return 229 !== b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":\\n      return !0;default:\\n      return !1;}\\n}function ec(a) {\\n  a = a.detail;return \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && \"data\" in a ? a.data : null;\\n}var fc = !1;function gc(a, b) {\\n  switch (a) {case \"topCompositionEnd\":\\n      return ec(b);case \"topKeyPress\":\\n      if (32 !== b.which) return null;cc = !0;return ac;case \"topTextInput\":\\n      return a = b.data, a === ac && cc ? null : a;default:\\n      return null;}\\n}\\nfunction hc(a, b) {\\n  if (fc) return \"topCompositionEnd\" === a || !Vb && dc(a, b) ? (a = Fb(), S._root = null, S._startText = null, S._fallbackText = null, fc = !1, a) : null;switch (a) {case \"topPaste\":\\n      return null;case \"topKeyPress\":\\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\\n        if (b.char && 1 < b.char.length) return b.char;if (b.which) return String.fromCharCode(b.which);\\n      }return null;case \"topCompositionEnd\":\\n      return $b ? null : b.data;default:\\n      return null;}\\n}\\nvar ic = { eventTypes: bc, extractEvents: function extractEvents(a, b, c, d) {\\n    var e;if (Vb) b: {\\n      switch (a) {case \"topCompositionStart\":\\n          var f = bc.compositionStart;break b;case \"topCompositionEnd\":\\n          f = bc.compositionEnd;break b;case \"topCompositionUpdate\":\\n          f = bc.compositionUpdate;break b;}f = void 0;\\n    } else fc ? dc(a, c) && (f = bc.compositionEnd) : \"topKeyDown\" === a && 229 === c.keyCode && (f = bc.compositionStart);f ? ($b && (fc || f !== bc.compositionStart ? f === bc.compositionEnd && fc && (e = Fb()) : (S._root = d, S._startText = Gb(), fc = !0)), f = Mb.getPooled(f, b, c, d), e ? f.data = e : (e = ec(c), null !== e && (f.data = e)), Ab(f), e = f) : e = null;(a = Zb ? gc(a, c) : hc(a, c)) ? (b = Nb.getPooled(bc.beforeInput, b, c, d), b.data = a, Ab(b)) : b = null;return [e, b];\\n  } },\\n    jc = null,\\n    kc = null,\\n    lc = null;function mc(a) {\\n  if (a = Xa(a)) {\\n    jc && \"function\" === typeof jc.restoreControlledState ? void 0 : E(\"194\");var b = Wa(a.stateNode);jc.restoreControlledState(a.stateNode, a.type, b);\\n  }\\n}var nc = { injectFiberControlledHostComponent: function injectFiberControlledHostComponent(a) {\\n    jc = a;\\n  } };function oc(a) {\\n  kc ? lc ? lc.push(a) : lc = [a] : kc = a;\\n}\\nfunction pc() {\\n  if (kc) {\\n    var a = kc,\\n        b = lc;lc = kc = null;mc(a);if (b) for (a = 0; a < b.length; a++) {\\n      mc(b[a]);\\n    }\\n  }\\n}var qc = Object.freeze({ injection: nc, enqueueStateRestore: oc, restoreStateIfNeeded: pc });function rc(a, b) {\\n  return a(b);\\n}var sc = !1;function tc(a, b) {\\n  if (sc) return rc(a, b);sc = !0;try {\\n    return rc(a, b);\\n  } finally {\\n    sc = !1, pc();\\n  }\\n}var uc = { color: !0, date: !0, datetime: !0, \"datetime-local\": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };\\nfunction vc(a) {\\n  var b = a && a.nodeName && a.nodeName.toLowerCase();return \"input\" === b ? !!uc[a.type] : \"textarea\" === b ? !0 : !1;\\n}function wc(a) {\\n  a = a.target || a.srcElement || window;a.correspondingUseElement && (a = a.correspondingUseElement);return 3 === a.nodeType ? a.parentNode : a;\\n}var xc;l.canUseDOM && (xc = document.implementation && document.implementation.hasFeature && !0 !== document.implementation.hasFeature(\"\", \"\"));\\nfunction yc(a, b) {\\n  if (!l.canUseDOM || b && !(\"addEventListener\" in document)) return !1;b = \"on\" + a;var c = b in document;c || (c = document.createElement(\"div\"), c.setAttribute(b, \"return;\"), c = \"function\" === typeof c[b]);!c && xc && \"wheel\" === a && (c = document.implementation.hasFeature(\"Events.wheel\", \"3.0\"));return c;\\n}function zc(a) {\\n  var b = a.type;return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\\n}\\nfunction Ac(a) {\\n  var b = zc(a) ? \"checked\" : \"value\",\\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\\n      d = \"\" + a[b];if (!a.hasOwnProperty(b) && \"function\" === typeof c.get && \"function\" === typeof c.set) return Object.defineProperty(a, b, { enumerable: c.enumerable, configurable: !0, get: function get() {\\n      return c.get.call(this);\\n    }, set: function set(a) {\\n      d = \"\" + a;c.set.call(this, a);\\n    } }), { getValue: function getValue() {\\n      return d;\\n    }, setValue: function setValue(a) {\\n      d = \"\" + a;\\n    }, stopTracking: function stopTracking() {\\n      a._valueTracker = null;delete a[b];\\n    } };\\n}\\nfunction Bc(a) {\\n  a._valueTracker || (a._valueTracker = Ac(a));\\n}function Cc(a) {\\n  if (!a) return !1;var b = a._valueTracker;if (!b) return !0;var c = b.getValue();var d = \"\";a && (d = zc(a) ? a.checked ? \"true\" : \"false\" : a.value);a = d;return a !== c ? (b.setValue(a), !0) : !1;\\n}var Dc = { change: { phasedRegistrationNames: { bubbled: \"onChange\", captured: \"onChangeCapture\" }, dependencies: \"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \") } };\\nfunction Ec(a, b, c) {\\n  a = T.getPooled(Dc.change, a, b, c);a.type = \"change\";oc(c);Ab(a);return a;\\n}var Fc = null,\\n    Gc = null;function Hc(a) {\\n  kb(a);lb(!1);\\n}function Ic(a) {\\n  var b = qb(a);if (Cc(b)) return a;\\n}function Jc(a, b) {\\n  if (\"topChange\" === a) return b;\\n}var Kc = !1;l.canUseDOM && (Kc = yc(\"input\") && (!document.documentMode || 9 < document.documentMode));function Lc() {\\n  Fc && (Fc.detachEvent(\"onpropertychange\", Mc), Gc = Fc = null);\\n}function Mc(a) {\\n  \"value\" === a.propertyName && Ic(Gc) && (a = Ec(Gc, a, wc(a)), tc(Hc, a));\\n}\\nfunction Nc(a, b, c) {\\n  \"topFocus\" === a ? (Lc(), Fc = b, Gc = c, Fc.attachEvent(\"onpropertychange\", Mc)) : \"topBlur\" === a && Lc();\\n}function Oc(a) {\\n  if (\"topSelectionChange\" === a || \"topKeyUp\" === a || \"topKeyDown\" === a) return Ic(Gc);\\n}function Pc(a, b) {\\n  if (\"topClick\" === a) return Ic(b);\\n}function $c(a, b) {\\n  if (\"topInput\" === a || \"topChange\" === a) return Ic(b);\\n}\\nvar ad = { eventTypes: Dc, _isInputEventSupported: Kc, extractEvents: function extractEvents(a, b, c, d) {\\n    var e = b ? qb(b) : window,\\n        f = e.nodeName && e.nodeName.toLowerCase();if (\"select\" === f || \"input\" === f && \"file\" === e.type) var g = Jc;else if (vc(e)) {\\n      if (Kc) g = $c;else {\\n        g = Oc;var h = Nc;\\n      }\\n    } else f = e.nodeName, !f || \"input\" !== f.toLowerCase() || \"checkbox\" !== e.type && \"radio\" !== e.type || (g = Pc);if (g && (g = g(a, b))) return Ec(g, c, d);h && h(a, e, b);\"topBlur\" === a && null != b && (a = b._wrapperState || e._wrapperState) && a.controlled && \"number\" === e.type && (a = \"\" + e.value, e.getAttribute(\"value\") !== a && e.setAttribute(\"value\", a));\\n  } };function bd(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}T.augmentClass(bd, { view: null, detail: null });var cd = { Alt: \"altKey\", Control: \"ctrlKey\", Meta: \"metaKey\", Shift: \"shiftKey\" };function dd(a) {\\n  var b = this.nativeEvent;return b.getModifierState ? b.getModifierState(a) : (a = cd[a]) ? !!b[a] : !1;\\n}function ed() {\\n  return dd;\\n}function fd(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}\\nbd.augmentClass(fd, { screenX: null, screenY: null, clientX: null, clientY: null, pageX: null, pageY: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, getModifierState: ed, button: null, buttons: null, relatedTarget: function relatedTarget(a) {\\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\\n  } });\\nvar gd = { mouseEnter: { registrationName: \"onMouseEnter\", dependencies: [\"topMouseOut\", \"topMouseOver\"] }, mouseLeave: { registrationName: \"onMouseLeave\", dependencies: [\"topMouseOut\", \"topMouseOver\"] } },\\n    hd = { eventTypes: gd, extractEvents: function extractEvents(a, b, c, d) {\\n    if (\"topMouseOver\" === a && (c.relatedTarget || c.fromElement) || \"topMouseOut\" !== a && \"topMouseOver\" !== a) return null;var e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\"topMouseOut\" === a ? (a = b, b = (b = c.relatedTarget || c.toElement) ? pb(b) : null) : a = null;if (a === b) return null;var f = null == a ? e : qb(a);e = null == b ? e : qb(b);var g = fd.getPooled(gd.mouseLeave, a, c, d);g.type = \"mouseleave\";g.target = f;g.relatedTarget = e;c = fd.getPooled(gd.mouseEnter, b, c, d);c.type = \"mouseenter\";c.target = e;c.relatedTarget = f;Bb(g, c, a, b);return [g, c];\\n  } },\\n    id = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a) {\\n  a = a.type;return \"string\" === typeof a ? a : \"function\" === typeof a ? a.displayName || a.name : null;\\n}\\nfunction kd(a) {\\n  var b = a;if (a.alternate) for (; b[\"return\"];) {\\n    b = b[\"return\"];\\n  } else {\\n    if (0 !== (b.effectTag & 2)) return 1;for (; b[\"return\"];) {\\n      if (b = b[\"return\"], 0 !== (b.effectTag & 2)) return 1;\\n    }\\n  }return 3 === b.tag ? 2 : 3;\\n}function ld(a) {\\n  return (a = a._reactInternalFiber) ? 2 === kd(a) : !1;\\n}function md(a) {\\n  2 !== kd(a) ? E(\"188\") : void 0;\\n}\\nfunction nd(a) {\\n  var b = a.alternate;if (!b) return b = kd(a), 3 === b ? E(\"188\") : void 0, 1 === b ? null : a;for (var c = a, d = b;;) {\\n    var e = c[\"return\"],\\n        f = e ? e.alternate : null;if (!e || !f) break;if (e.child === f.child) {\\n      for (var g = e.child; g;) {\\n        if (g === c) return md(e), a;if (g === d) return md(e), b;g = g.sibling;\\n      }E(\"188\");\\n    }if (c[\"return\"] !== d[\"return\"]) c = e, d = f;else {\\n      g = !1;for (var h = e.child; h;) {\\n        if (h === c) {\\n          g = !0;c = e;d = f;break;\\n        }if (h === d) {\\n          g = !0;d = e;c = f;break;\\n        }h = h.sibling;\\n      }if (!g) {\\n        for (h = f.child; h;) {\\n          if (h === c) {\\n            g = !0;c = f;d = e;break;\\n          }if (h === d) {\\n            g = !0;d = f;c = e;break;\\n          }h = h.sibling;\\n        }g ? void 0 : E(\"189\");\\n      }\\n    }c.alternate !== d ? E(\"190\") : void 0;\\n  }3 !== c.tag ? E(\"188\") : void 0;return c.stateNode.current === c ? a : b;\\n}function od(a) {\\n  a = nd(a);if (!a) return null;for (var b = a;;) {\\n    if (5 === b.tag || 6 === b.tag) return b;if (b.child) b.child[\"return\"] = b, b = b.child;else {\\n      if (b === a) break;for (; !b.sibling;) {\\n        if (!b[\"return\"] || b[\"return\"] === a) return null;b = b[\"return\"];\\n      }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\\n    }\\n  }return null;\\n}\\nfunction pd(a) {\\n  a = nd(a);if (!a) return null;for (var b = a;;) {\\n    if (5 === b.tag || 6 === b.tag) return b;if (b.child && 4 !== b.tag) b.child[\"return\"] = b, b = b.child;else {\\n      if (b === a) break;for (; !b.sibling;) {\\n        if (!b[\"return\"] || b[\"return\"] === a) return null;b = b[\"return\"];\\n      }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\\n    }\\n  }return null;\\n}var qd = [];\\nfunction rd(a) {\\n  var b = a.targetInst;do {\\n    if (!b) {\\n      a.ancestors.push(b);break;\\n    }var c;for (c = b; c[\"return\"];) {\\n      c = c[\"return\"];\\n    }c = 3 !== c.tag ? null : c.stateNode.containerInfo;if (!c) break;a.ancestors.push(b);b = pb(c);\\n  } while (b);for (c = 0; c < a.ancestors.length; c++) {\\n    b = a.ancestors[c], sd(a.topLevelType, b, a.nativeEvent, wc(a.nativeEvent));\\n  }\\n}var td = !0,\\n    sd = void 0;function ud(a) {\\n  td = !!a;\\n}function U(a, b, c) {\\n  return c ? ba.listen(c, b, vd.bind(null, a)) : null;\\n}function wd(a, b, c) {\\n  return c ? ba.capture(c, b, vd.bind(null, a)) : null;\\n}\\nfunction vd(a, b) {\\n  if (td) {\\n    var c = wc(b);c = pb(c);null === c || \"number\" !== typeof c.tag || 2 === kd(c) || (c = null);if (qd.length) {\\n      var d = qd.pop();d.topLevelType = a;d.nativeEvent = b;d.targetInst = c;a = d;\\n    } else a = { topLevelType: a, nativeEvent: b, targetInst: c, ancestors: [] };try {\\n      tc(rd, a);\\n    } finally {\\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > qd.length && qd.push(a);\\n    }\\n  }\\n}\\nvar xd = Object.freeze({ get _enabled() {\\n    return td;\\n  }, get _handleTopLevel() {\\n    return sd;\\n  }, setHandleTopLevel: function setHandleTopLevel(a) {\\n    sd = a;\\n  }, setEnabled: ud, isEnabled: function isEnabled() {\\n    return td;\\n  }, trapBubbledEvent: U, trapCapturedEvent: wd, dispatchEvent: vd });function yd(a, b) {\\n  var c = {};c[a.toLowerCase()] = b.toLowerCase();c[\"Webkit\" + a] = \"webkit\" + b;c[\"Moz\" + a] = \"moz\" + b;c[\"ms\" + a] = \"MS\" + b;c[\"O\" + a] = \"o\" + b.toLowerCase();return c;\\n}\\nvar zd = { animationend: yd(\"Animation\", \"AnimationEnd\"), animationiteration: yd(\"Animation\", \"AnimationIteration\"), animationstart: yd(\"Animation\", \"AnimationStart\"), transitionend: yd(\"Transition\", \"TransitionEnd\") },\\n    Ad = {},\\n    Bd = {};l.canUseDOM && (Bd = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete zd.animationend.animation, delete zd.animationiteration.animation, delete zd.animationstart.animation), \"TransitionEvent\" in window || delete zd.transitionend.transition);\\nfunction Cd(a) {\\n  if (Ad[a]) return Ad[a];if (!zd[a]) return a;var b = zd[a],\\n      c;for (c in b) {\\n    if (b.hasOwnProperty(c) && c in Bd) return Ad[a] = b[c];\\n  }return \"\";\\n}\\nvar Dd = { topAbort: \"abort\", topAnimationEnd: Cd(\"animationend\") || \"animationend\", topAnimationIteration: Cd(\"animationiteration\") || \"animationiteration\", topAnimationStart: Cd(\"animationstart\") || \"animationstart\", topBlur: \"blur\", topCancel: \"cancel\", topCanPlay: \"canplay\", topCanPlayThrough: \"canplaythrough\", topChange: \"change\", topClick: \"click\", topClose: \"close\", topCompositionEnd: \"compositionend\", topCompositionStart: \"compositionstart\", topCompositionUpdate: \"compositionupdate\", topContextMenu: \"contextmenu\", topCopy: \"copy\",\\n  topCut: \"cut\", topDoubleClick: \"dblclick\", topDrag: \"drag\", topDragEnd: \"dragend\", topDragEnter: \"dragenter\", topDragExit: \"dragexit\", topDragLeave: \"dragleave\", topDragOver: \"dragover\", topDragStart: \"dragstart\", topDrop: \"drop\", topDurationChange: \"durationchange\", topEmptied: \"emptied\", topEncrypted: \"encrypted\", topEnded: \"ended\", topError: \"error\", topFocus: \"focus\", topInput: \"input\", topKeyDown: \"keydown\", topKeyPress: \"keypress\", topKeyUp: \"keyup\", topLoadedData: \"loadeddata\", topLoad: \"load\", topLoadedMetadata: \"loadedmetadata\", topLoadStart: \"loadstart\",\\n  topMouseDown: \"mousedown\", topMouseMove: \"mousemove\", topMouseOut: \"mouseout\", topMouseOver: \"mouseover\", topMouseUp: \"mouseup\", topPaste: \"paste\", topPause: \"pause\", topPlay: \"play\", topPlaying: \"playing\", topProgress: \"progress\", topRateChange: \"ratechange\", topScroll: \"scroll\", topSeeked: \"seeked\", topSeeking: \"seeking\", topSelectionChange: \"selectionchange\", topStalled: \"stalled\", topSuspend: \"suspend\", topTextInput: \"textInput\", topTimeUpdate: \"timeupdate\", topToggle: \"toggle\", topTouchCancel: \"touchcancel\", topTouchEnd: \"touchend\", topTouchMove: \"touchmove\",\\n  topTouchStart: \"touchstart\", topTransitionEnd: Cd(\"transitionend\") || \"transitionend\", topVolumeChange: \"volumechange\", topWaiting: \"waiting\", topWheel: \"wheel\" },\\n    Ed = {},\\n    Fd = 0,\\n    Gd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);function Hd(a) {\\n  Object.prototype.hasOwnProperty.call(a, Gd) || (a[Gd] = Fd++, Ed[a[Gd]] = {});return Ed[a[Gd]];\\n}function Id(a) {\\n  for (; a && a.firstChild;) {\\n    a = a.firstChild;\\n  }return a;\\n}\\nfunction Jd(a, b) {\\n  var c = Id(a);a = 0;for (var d; c;) {\\n    if (3 === c.nodeType) {\\n      d = a + c.textContent.length;if (a <= b && d >= b) return { node: c, offset: b - a };a = d;\\n    }a: {\\n      for (; c;) {\\n        if (c.nextSibling) {\\n          c = c.nextSibling;break a;\\n        }c = c.parentNode;\\n      }c = void 0;\\n    }c = Id(c);\\n  }\\n}function Kd(a) {\\n  var b = a && a.nodeName && a.nodeName.toLowerCase();return b && (\"input\" === b && \"text\" === a.type || \"textarea\" === b || \"true\" === a.contentEditable);\\n}\\nvar Ld = l.canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\\n    Md = { select: { phasedRegistrationNames: { bubbled: \"onSelect\", captured: \"onSelectCapture\" }, dependencies: \"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \") } },\\n    Nd = null,\\n    Od = null,\\n    Pd = null,\\n    Qd = !1;\\nfunction Rd(a, b) {\\n  if (Qd || null == Nd || Nd !== da()) return null;var c = Nd;\"selectionStart\" in c && Kd(c) ? c = { start: c.selectionStart, end: c.selectionEnd } : window.getSelection ? (c = window.getSelection(), c = { anchorNode: c.anchorNode, anchorOffset: c.anchorOffset, focusNode: c.focusNode, focusOffset: c.focusOffset }) : c = void 0;return Pd && ea(Pd, c) ? null : (Pd = c, a = T.getPooled(Md.select, Od, a, b), a.type = \"select\", a.target = Nd, Ab(a), a);\\n}\\nvar Sd = { eventTypes: Md, extractEvents: function extractEvents(a, b, c, d) {\\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\\n        f;if (!(f = !e)) {\\n      a: {\\n        e = Hd(e);f = Sa.onSelect;for (var g = 0; g < f.length; g++) {\\n          var h = f[g];if (!e.hasOwnProperty(h) || !e[h]) {\\n            e = !1;break a;\\n          }\\n        }e = !0;\\n      }f = !e;\\n    }if (f) return null;e = b ? qb(b) : window;switch (a) {case \"topFocus\":\\n        if (vc(e) || \"true\" === e.contentEditable) Nd = e, Od = b, Pd = null;break;case \"topBlur\":\\n        Pd = Od = Nd = null;break;case \"topMouseDown\":\\n        Qd = !0;break;case \"topContextMenu\":case \"topMouseUp\":\\n        return Qd = !1, Rd(c, d);case \"topSelectionChange\":\\n        if (Ld) break;\\n      case \"topKeyDown\":case \"topKeyUp\":\\n        return Rd(c, d);}return null;\\n  } };function Td(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}T.augmentClass(Td, { animationName: null, elapsedTime: null, pseudoElement: null });function Ud(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}T.augmentClass(Ud, { clipboardData: function clipboardData(a) {\\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\\n  } });function Vd(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}bd.augmentClass(Vd, { relatedTarget: null });\\nfunction Wd(a) {\\n  var b = a.keyCode;\"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;return 32 <= a || 13 === a ? a : 0;\\n}\\nvar Xd = { Esc: \"Escape\", Spacebar: \" \", Left: \"ArrowLeft\", Up: \"ArrowUp\", Right: \"ArrowRight\", Down: \"ArrowDown\", Del: \"Delete\", Win: \"OS\", Menu: \"ContextMenu\", Apps: \"ContextMenu\", Scroll: \"ScrollLock\", MozPrintableKey: \"Unidentified\" },\\n    Yd = { 8: \"Backspace\", 9: \"Tab\", 12: \"Clear\", 13: \"Enter\", 16: \"Shift\", 17: \"Control\", 18: \"Alt\", 19: \"Pause\", 20: \"CapsLock\", 27: \"Escape\", 32: \" \", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\", 37: \"ArrowLeft\", 38: \"ArrowUp\", 39: \"ArrowRight\", 40: \"ArrowDown\", 45: \"Insert\", 46: \"Delete\", 112: \"F1\", 113: \"F2\", 114: \"F3\", 115: \"F4\",\\n  116: \"F5\", 117: \"F6\", 118: \"F7\", 119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"NumLock\", 145: \"ScrollLock\", 224: \"Meta\" };function Zd(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}\\nbd.augmentClass(Zd, { key: function key(a) {\\n    if (a.key) {\\n      var b = Xd[a.key] || a.key;if (\"Unidentified\" !== b) return b;\\n    }return \"keypress\" === a.type ? (a = Wd(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? Yd[a.keyCode] || \"Unidentified\" : \"\";\\n  }, location: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, repeat: null, locale: null, getModifierState: ed, charCode: function charCode(a) {\\n    return \"keypress\" === a.type ? Wd(a) : 0;\\n  }, keyCode: function keyCode(a) {\\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\\n  }, which: function which(a) {\\n    return \"keypress\" === a.type ? Wd(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\\n  } });function $d(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}fd.augmentClass($d, { dataTransfer: null });function ae(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}bd.augmentClass(ae, { touches: null, targetTouches: null, changedTouches: null, altKey: null, metaKey: null, ctrlKey: null, shiftKey: null, getModifierState: ed });function be(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}T.augmentClass(be, { propertyName: null, elapsedTime: null, pseudoElement: null });\\nfunction ce(a, b, c, d) {\\n  return T.call(this, a, b, c, d);\\n}fd.augmentClass(ce, { deltaX: function deltaX(a) {\\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\\n  }, deltaY: function deltaY(a) {\\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\\n  }, deltaZ: null, deltaMode: null });var de = {},\\n    ee = {};\\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function (a) {\\n  var b = a[0].toUpperCase() + a.slice(1),\\n      c = \"on\" + b;b = \"top\" + b;c = { phasedRegistrationNames: { bubbled: c, captured: c + \"Capture\" }, dependencies: [b] };de[a] = c;ee[b] = c;\\n});\\nvar fe = { eventTypes: de, extractEvents: function extractEvents(a, b, c, d) {\\n    var e = ee[a];if (!e) return null;switch (a) {case \"topKeyPress\":\\n        if (0 === Wd(c)) return null;case \"topKeyDown\":case \"topKeyUp\":\\n        a = Zd;break;case \"topBlur\":case \"topFocus\":\\n        a = Vd;break;case \"topClick\":\\n        if (2 === c.button) return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":\\n        a = fd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":\\n        a = $d;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":\\n        a = ae;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":\\n        a = Td;break;case \"topTransitionEnd\":\\n        a = be;break;case \"topScroll\":\\n        a = bd;break;case \"topWheel\":\\n        a = ce;break;case \"topCopy\":case \"topCut\":case \"topPaste\":\\n        a = Ud;break;default:\\n        a = T;}b = a.getPooled(e, b, c, d);Ab(b);return b;\\n  } };sd = function sd(a, b, c, d) {\\n  a = jb(a, b, c, d);kb(a);lb(!1);\\n};hb.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\\nWa = sb.getFiberCurrentPropsFromNode;Xa = sb.getInstanceFromNode;Ya = sb.getNodeFromInstance;hb.injectEventPluginsByName({ SimpleEventPlugin: fe, EnterLeaveEventPlugin: hd, ChangeEventPlugin: ad, SelectEventPlugin: Sd, BeforeInputEventPlugin: ic });var ge = [],\\n    he = -1;function V(a) {\\n  0 > he || (a.current = ge[he], ge[he] = null, he--);\\n}function W(a, b) {\\n  he++;ge[he] = a.current;a.current = b;\\n}new Set();var ie = { current: D },\\n    X = { current: !1 },\\n    je = D;function ke(a) {\\n  return le(a) ? je : ie.current;\\n}\\nfunction me(a, b) {\\n  var c = a.type.contextTypes;if (!c) return D;var d = a.stateNode;if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;var e = {},\\n      f;for (f in c) {\\n    e[f] = b[f];\\n  }d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);return e;\\n}function le(a) {\\n  return 2 === a.tag && null != a.type.childContextTypes;\\n}function ne(a) {\\n  le(a) && (V(X, a), V(ie, a));\\n}\\nfunction oe(a, b, c) {\\n  null != ie.cursor ? E(\"168\") : void 0;W(ie, b, a);W(X, c, a);\\n}function pe(a, b) {\\n  var c = a.stateNode,\\n      d = a.type.childContextTypes;if (\"function\" !== typeof c.getChildContext) return b;c = c.getChildContext();for (var e in c) {\\n    e in d ? void 0 : E(\"108\", jd(a) || \"Unknown\", e);\\n  }return B({}, b, c);\\n}function qe(a) {\\n  if (!le(a)) return !1;var b = a.stateNode;b = b && b.__reactInternalMemoizedMergedChildContext || D;je = ie.current;W(ie, b, a);W(X, X.current, a);return !0;\\n}\\nfunction re(a, b) {\\n  var c = a.stateNode;c ? void 0 : E(\"169\");if (b) {\\n    var d = pe(a, je);c.__reactInternalMemoizedMergedChildContext = d;V(X, a);V(ie, a);W(ie, d, a);\\n  } else V(X, a);W(X, b, a);\\n}\\nfunction Y(a, b, c) {\\n  this.tag = a;this.key = b;this.stateNode = this.type = null;this.sibling = this.child = this[\"return\"] = null;this.index = 0;this.memoizedState = this.updateQueue = this.memoizedProps = this.pendingProps = this.ref = null;this.internalContextTag = c;this.effectTag = 0;this.lastEffect = this.firstEffect = this.nextEffect = null;this.expirationTime = 0;this.alternate = null;\\n}\\nfunction se(a, b, c) {\\n  var d = a.alternate;null === d ? (d = new Y(a.tag, a.key, a.internalContextTag), d.type = a.type, d.stateNode = a.stateNode, d.alternate = a, a.alternate = d) : (d.effectTag = 0, d.nextEffect = null, d.firstEffect = null, d.lastEffect = null);d.expirationTime = c;d.pendingProps = b;d.child = a.child;d.memoizedProps = a.memoizedProps;d.memoizedState = a.memoizedState;d.updateQueue = a.updateQueue;d.sibling = a.sibling;d.index = a.index;d.ref = a.ref;return d;\\n}\\nfunction te(a, b, c) {\\n  var d = void 0,\\n      e = a.type,\\n      f = a.key;\"function\" === typeof e ? (d = e.prototype && e.prototype.isReactComponent ? new Y(2, f, b) : new Y(0, f, b), d.type = e, d.pendingProps = a.props) : \"string\" === typeof e ? (d = new Y(5, f, b), d.type = e, d.pendingProps = a.props) : \"object\" === (typeof e === \"undefined\" ? \"undefined\" : _typeof(e)) && null !== e && \"number\" === typeof e.tag ? (d = e, d.pendingProps = a.props) : E(\"130\", null == e ? e : typeof e === \"undefined\" ? \"undefined\" : _typeof(e), \"\");d.expirationTime = c;return d;\\n}function ue(a, b, c, d) {\\n  b = new Y(10, d, b);b.pendingProps = a;b.expirationTime = c;return b;\\n}\\nfunction ve(a, b, c) {\\n  b = new Y(6, null, b);b.pendingProps = a;b.expirationTime = c;return b;\\n}function we(a, b, c) {\\n  b = new Y(7, a.key, b);b.type = a.handler;b.pendingProps = a;b.expirationTime = c;return b;\\n}function xe(a, b, c) {\\n  a = new Y(9, null, b);a.expirationTime = c;return a;\\n}function ye(a, b, c) {\\n  b = new Y(4, a.key, b);b.pendingProps = a.children || [];b.expirationTime = c;b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };return b;\\n}var ze = null,\\n    Ae = null;\\nfunction Be(a) {\\n  return function (b) {\\n    try {\\n      return a(b);\\n    } catch (c) {}\\n  };\\n}function Ce(a) {\\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;if (b.isDisabled || !b.supportsFiber) return !0;try {\\n    var c = b.inject(a);ze = Be(function (a) {\\n      return b.onCommitFiberRoot(c, a);\\n    });Ae = Be(function (a) {\\n      return b.onCommitFiberUnmount(c, a);\\n    });\\n  } catch (d) {}return !0;\\n}function De(a) {\\n  \"function\" === typeof ze && ze(a);\\n}function Ee(a) {\\n  \"function\" === typeof Ae && Ae(a);\\n}\\nfunction Fe(a) {\\n  return { baseState: a, expirationTime: 0, first: null, last: null, callbackList: null, hasForceUpdate: !1, isInitialized: !1 };\\n}function Ge(a, b) {\\n  null === a.last ? a.first = a.last = b : (a.last.next = b, a.last = b);if (0 === a.expirationTime || a.expirationTime > b.expirationTime) a.expirationTime = b.expirationTime;\\n}\\nfunction He(a, b) {\\n  var c = a.alternate,\\n      d = a.updateQueue;null === d && (d = a.updateQueue = Fe(null));null !== c ? (a = c.updateQueue, null === a && (a = c.updateQueue = Fe(null))) : a = null;a = a !== d ? a : null;null === a ? Ge(d, b) : null === d.last || null === a.last ? (Ge(d, b), Ge(a, b)) : (Ge(d, b), a.last = b);\\n}function Ie(a, b, c, d) {\\n  a = a.partialState;return \"function\" === typeof a ? a.call(b, c, d) : a;\\n}\\nfunction Je(a, b, c, d, e, f) {\\n  null !== a && a.updateQueue === c && (c = b.updateQueue = { baseState: c.baseState, expirationTime: c.expirationTime, first: c.first, last: c.last, isInitialized: c.isInitialized, callbackList: null, hasForceUpdate: !1 });c.expirationTime = 0;c.isInitialized ? a = c.baseState : (a = c.baseState = b.memoizedState, c.isInitialized = !0);for (var g = !0, h = c.first, k = !1; null !== h;) {\\n    var q = h.expirationTime;if (q > f) {\\n      var v = c.expirationTime;if (0 === v || v > q) c.expirationTime = q;k || (k = !0, c.baseState = a);\\n    } else {\\n      k || (c.first = h.next, null === c.first && (c.last = null));if (h.isReplace) a = Ie(h, d, a, e), g = !0;else if (q = Ie(h, d, a, e)) a = g ? B({}, a, q) : B(a, q), g = !1;h.isForced && (c.hasForceUpdate = !0);null !== h.callback && (q = c.callbackList, null === q && (q = c.callbackList = []), q.push(h));\\n    }h = h.next;\\n  }null !== c.callbackList ? b.effectTag |= 32 : null !== c.first || c.hasForceUpdate || (b.updateQueue = null);k || (c.baseState = a);return a;\\n}\\nfunction Ke(a, b) {\\n  var c = a.callbackList;if (null !== c) for (a.callbackList = null, a = 0; a < c.length; a++) {\\n    var d = c[a],\\n        e = d.callback;d.callback = null;\"function\" !== typeof e ? E(\"191\", e) : void 0;e.call(b);\\n  }\\n}\\nfunction Le(a, b, c, d) {\\n  function e(a, b) {\\n    b.updater = f;a.stateNode = b;b._reactInternalFiber = a;\\n  }var f = { isMounted: ld, enqueueSetState: function enqueueSetState(c, d, e) {\\n      c = c._reactInternalFiber;e = void 0 === e ? null : e;var g = b(c);He(c, { expirationTime: g, partialState: d, callback: e, isReplace: !1, isForced: !1, nextCallback: null, next: null });a(c, g);\\n    }, enqueueReplaceState: function enqueueReplaceState(c, d, e) {\\n      c = c._reactInternalFiber;e = void 0 === e ? null : e;var g = b(c);He(c, { expirationTime: g, partialState: d, callback: e, isReplace: !0, isForced: !1, nextCallback: null, next: null });\\n      a(c, g);\\n    }, enqueueForceUpdate: function enqueueForceUpdate(c, d) {\\n      c = c._reactInternalFiber;d = void 0 === d ? null : d;var e = b(c);He(c, { expirationTime: e, partialState: null, callback: d, isReplace: !1, isForced: !0, nextCallback: null, next: null });a(c, e);\\n    } };return { adoptClassInstance: e, constructClassInstance: function constructClassInstance(a, b) {\\n      var c = a.type,\\n          d = ke(a),\\n          f = 2 === a.tag && null != a.type.contextTypes,\\n          g = f ? me(a, d) : D;b = new c(b, g);e(a, b);f && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = d, a.__reactInternalMemoizedMaskedChildContext = g);return b;\\n    }, mountClassInstance: function mountClassInstance(a, b) {\\n      var c = a.alternate,\\n          d = a.stateNode,\\n          e = d.state || null,\\n          g = a.pendingProps;g ? void 0 : E(\"158\");var h = ke(a);d.props = g;d.state = a.memoizedState = e;d.refs = D;d.context = me(a, h);null != a.type && null != a.type.prototype && !0 === a.type.prototype.unstable_isAsyncReactComponent && (a.internalContextTag |= 1);\"function\" === typeof d.componentWillMount && (e = d.state, d.componentWillMount(), e !== d.state && f.enqueueReplaceState(d, d.state, null), e = a.updateQueue, null !== e && (d.state = Je(c, a, e, d, g, b)));\"function\" === typeof d.componentDidMount && (a.effectTag |= 4);\\n    }, updateClassInstance: function updateClassInstance(a, b, e) {\\n      var g = b.stateNode;g.props = b.memoizedProps;g.state = b.memoizedState;var h = b.memoizedProps,\\n          k = b.pendingProps;k || (k = h, null == k ? E(\"159\") : void 0);var u = g.context,\\n          z = ke(b);z = me(b, z);\"function\" !== typeof g.componentWillReceiveProps || h === k && u === z || (u = g.state, g.componentWillReceiveProps(k, z), g.state !== u && f.enqueueReplaceState(g, g.state, null));u = b.memoizedState;e = null !== b.updateQueue ? Je(a, b, b.updateQueue, g, k, e) : u;if (!(h !== k || u !== e || X.current || null !== b.updateQueue && b.updateQueue.hasForceUpdate)) return \"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && u === a.memoizedState || (b.effectTag |= 4), !1;var G = k;if (null === h || null !== b.updateQueue && b.updateQueue.hasForceUpdate) G = !0;else {\\n        var I = b.stateNode,\\n            L = b.type;G = \"function\" === typeof I.shouldComponentUpdate ? I.shouldComponentUpdate(G, e, z) : L.prototype && L.prototype.isPureReactComponent ? !ea(h, G) || !ea(u, e) : !0;\\n      }G ? (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(k, e, z), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && u === a.memoizedState || (b.effectTag |= 4), c(b, k), d(b, e));g.props = k;g.state = e;g.context = z;return G;\\n    } };\\n}var Qe = \"function\" === typeof Symbol && Symbol[\"for\"],\\n    Re = Qe ? Symbol[\"for\"](\"react.element\") : 60103,\\n    Se = Qe ? Symbol[\"for\"](\"react.call\") : 60104,\\n    Te = Qe ? Symbol[\"for\"](\"react.return\") : 60105,\\n    Ue = Qe ? Symbol[\"for\"](\"react.portal\") : 60106,\\n    Ve = Qe ? Symbol[\"for\"](\"react.fragment\") : 60107,\\n    We = \"function\" === typeof Symbol && Symbol.iterator;\\nfunction Xe(a) {\\n  if (null === a || \"undefined\" === typeof a) return null;a = We && a[We] || a[\"@@iterator\"];return \"function\" === typeof a ? a : null;\\n}var Ye = Array.isArray;\\nfunction Ze(a, b) {\\n  var c = b.ref;if (null !== c && \"function\" !== typeof c) {\\n    if (b._owner) {\\n      b = b._owner;var d = void 0;b && (2 !== b.tag ? E(\"110\") : void 0, d = b.stateNode);d ? void 0 : E(\"147\", c);var e = \"\" + c;if (null !== a && null !== a.ref && a.ref._stringRef === e) return a.ref;a = function a(_a) {\\n        var b = d.refs === D ? d.refs = {} : d.refs;null === _a ? delete b[e] : b[e] = _a;\\n      };a._stringRef = e;return a;\\n    }\"string\" !== typeof c ? E(\"148\") : void 0;b._owner ? void 0 : E(\"149\", c);\\n  }return c;\\n}\\nfunction $e(a, b) {\\n  \"textarea\" !== a.type && E(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\\n}\\nfunction af(a) {\\n  function b(b, c) {\\n    if (a) {\\n      var d = b.lastEffect;null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;c.nextEffect = null;c.effectTag = 8;\\n    }\\n  }function c(c, d) {\\n    if (!a) return null;for (; null !== d;) {\\n      b(c, d), d = d.sibling;\\n    }return null;\\n  }function d(a, b) {\\n    for (a = new Map(); null !== b;) {\\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\\n    }return a;\\n  }function e(a, b, c) {\\n    a = se(a, b, c);a.index = 0;a.sibling = null;return a;\\n  }function f(b, c, d) {\\n    b.index = d;if (!a) return c;d = b.alternate;if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;b.effectTag = 2;return c;\\n  }function g(b) {\\n    a && null === b.alternate && (b.effectTag = 2);return b;\\n  }function h(a, b, c, d) {\\n    if (null === b || 6 !== b.tag) return b = ve(c, a.internalContextTag, d), b[\"return\"] = a, b;b = e(b, c, d);b[\"return\"] = a;return b;\\n  }function k(a, b, c, d) {\\n    if (null !== b && b.type === c.type) return d = e(b, c.props, d), d.ref = Ze(b, c), d[\"return\"] = a, d;d = te(c, a.internalContextTag, d);d.ref = Ze(b, c);d[\"return\"] = a;return d;\\n  }function q(a, b, c, d) {\\n    if (null === b || 7 !== b.tag) return b = we(c, a.internalContextTag, d), b[\"return\"] = a, b;b = e(b, c, d);\\n    b[\"return\"] = a;return b;\\n  }function v(a, b, c, d) {\\n    if (null === b || 9 !== b.tag) return b = xe(c, a.internalContextTag, d), b.type = c.value, b[\"return\"] = a, b;b = e(b, null, d);b.type = c.value;b[\"return\"] = a;return b;\\n  }function y(a, b, c, d) {\\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = ye(c, a.internalContextTag, d), b[\"return\"] = a, b;b = e(b, c.children || [], d);b[\"return\"] = a;return b;\\n  }function u(a, b, c, d, f) {\\n    if (null === b || 10 !== b.tag) return b = ue(c, a.internalContextTag, d, f), b[\"return\"] = a, b;b = e(b, c, d);b[\"return\"] = a;return b;\\n  }function z(a, b, c) {\\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = ve(\"\" + b, a.internalContextTag, c), b[\"return\"] = a, b;if (\"object\" === (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && null !== b) {\\n      switch (b.$$typeof) {case Re:\\n          if (b.type === Ve) return b = ue(b.props.children, a.internalContextTag, c, b.key), b[\"return\"] = a, b;c = te(b, a.internalContextTag, c);c.ref = Ze(null, b);c[\"return\"] = a;return c;case Se:\\n          return b = we(b, a.internalContextTag, c), b[\"return\"] = a, b;case Te:\\n          return c = xe(b, a.internalContextTag, c), c.type = b.value, c[\"return\"] = a, c;case Ue:\\n          return b = ye(b, a.internalContextTag, c), b[\"return\"] = a, b;}if (Ye(b) || Xe(b)) return b = ue(b, a.internalContextTag, c, null), b[\"return\"] = a, b;$e(a, b);\\n    }return null;\\n  }function G(a, b, c, d) {\\n    var e = null !== b ? b.key : null;if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);if (\"object\" === (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) && null !== c) {\\n      switch (c.$$typeof) {case Re:\\n          return c.key === e ? c.type === Ve ? u(a, b, c.props.children, d, e) : k(a, b, c, d) : null;case Se:\\n          return c.key === e ? q(a, b, c, d) : null;case Te:\\n          return null === e ? v(a, b, c, d) : null;case Ue:\\n          return c.key === e ? y(a, b, c, d) : null;}if (Ye(c) || Xe(c)) return null !== e ? null : u(a, b, c, d, null);$e(a, c);\\n    }return null;\\n  }function I(a, b, c, d, e) {\\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);if (\"object\" === (typeof d === \"undefined\" ? \"undefined\" : _typeof(d)) && null !== d) {\\n      switch (d.$$typeof) {case Re:\\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Ve ? u(b, a, d.props.children, e, d.key) : k(b, a, d, e);case Se:\\n          return a = a.get(null === d.key ? c : d.key) || null, q(b, a, d, e);case Te:\\n          return a = a.get(c) || null, v(b, a, d, e);case Ue:\\n          return a = a.get(null === d.key ? c : d.key) || null, y(b, a, d, e);}if (Ye(d) || Xe(d)) return a = a.get(c) || null, u(b, a, d, e, null);$e(b, d);\\n    }return null;\\n  }function L(e, g, m, A) {\\n    for (var h = null, r = null, n = g, w = g = 0, k = null; null !== n && w < m.length; w++) {\\n      n.index > w ? (k = n, n = null) : k = n.sibling;var x = G(e, n, m[w], A);if (null === x) {\\n        null === n && (n = k);break;\\n      }a && n && null === x.alternate && b(e, n);g = f(x, g, w);null === r ? h = x : r.sibling = x;r = x;n = k;\\n    }if (w === m.length) return c(e, n), h;if (null === n) {\\n      for (; w < m.length; w++) {\\n        if (n = z(e, m[w], A)) g = f(n, g, w), null === r ? h = n : r.sibling = n, r = n;\\n      }return h;\\n    }for (n = d(e, n); w < m.length; w++) {\\n      if (k = I(n, e, w, m[w], A)) {\\n        if (a && null !== k.alternate) n[\"delete\"](null === k.key ? w : k.key);g = f(k, g, w);null === r ? h = k : r.sibling = k;r = k;\\n      }\\n    }a && n.forEach(function (a) {\\n      return b(e, a);\\n    });return h;\\n  }function N(e, g, m, A) {\\n    var h = Xe(m);\"function\" !== typeof h ? E(\"150\") : void 0;m = h.call(m);null == m ? E(\"151\") : void 0;for (var r = h = null, n = g, w = g = 0, k = null, x = m.next(); null !== n && !x.done; w++, x = m.next()) {\\n      n.index > w ? (k = n, n = null) : k = n.sibling;var J = G(e, n, x.value, A);if (null === J) {\\n        n || (n = k);break;\\n      }a && n && null === J.alternate && b(e, n);g = f(J, g, w);null === r ? h = J : r.sibling = J;r = J;n = k;\\n    }if (x.done) return c(e, n), h;if (null === n) {\\n      for (; !x.done; w++, x = m.next()) {\\n        x = z(e, x.value, A), null !== x && (g = f(x, g, w), null === r ? h = x : r.sibling = x, r = x);\\n      }return h;\\n    }for (n = d(e, n); !x.done; w++, x = m.next()) {\\n      if (x = I(n, e, w, x.value, A), null !== x) {\\n        if (a && null !== x.alternate) n[\"delete\"](null === x.key ? w : x.key);g = f(x, g, w);null === r ? h = x : r.sibling = x;r = x;\\n      }\\n    }a && n.forEach(function (a) {\\n      return b(e, a);\\n    });return h;\\n  }return function (a, d, f, h) {\\n    \"object\" === (typeof f === \"undefined\" ? \"undefined\" : _typeof(f)) && null !== f && f.type === Ve && null === f.key && (f = f.props.children);\\n    var m = \"object\" === (typeof f === \"undefined\" ? \"undefined\" : _typeof(f)) && null !== f;if (m) switch (f.$$typeof) {case Re:\\n        a: {\\n          var r = f.key;for (m = d; null !== m;) {\\n            if (m.key === r) {\\n              if (10 === m.tag ? f.type === Ve : m.type === f.type) {\\n                c(a, m.sibling);d = e(m, f.type === Ve ? f.props.children : f.props, h);d.ref = Ze(m, f);d[\"return\"] = a;a = d;break a;\\n              } else {\\n                c(a, m);break;\\n              }\\n            } else b(a, m);m = m.sibling;\\n          }f.type === Ve ? (d = ue(f.props.children, a.internalContextTag, h, f.key), d[\"return\"] = a, a = d) : (h = te(f, a.internalContextTag, h), h.ref = Ze(d, f), h[\"return\"] = a, a = h);\\n        }return g(a);case Se:\\n        a: {\\n          for (m = f.key; null !== d;) {\\n            if (d.key === m) {\\n              if (7 === d.tag) {\\n                c(a, d.sibling);d = e(d, f, h);d[\"return\"] = a;a = d;break a;\\n              } else {\\n                c(a, d);break;\\n              }\\n            } else b(a, d);d = d.sibling;\\n          }d = we(f, a.internalContextTag, h);d[\"return\"] = a;a = d;\\n        }return g(a);case Te:\\n        a: {\\n          if (null !== d) if (9 === d.tag) {\\n            c(a, d.sibling);d = e(d, null, h);d.type = f.value;d[\"return\"] = a;a = d;break a;\\n          } else c(a, d);d = xe(f, a.internalContextTag, h);d.type = f.value;d[\"return\"] = a;a = d;\\n        }return g(a);case Ue:\\n        a: {\\n          for (m = f.key; null !== d;) {\\n            if (d.key === m) {\\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\\n                c(a, d.sibling);d = e(d, f.children || [], h);d[\"return\"] = a;a = d;break a;\\n              } else {\\n                c(a, d);break;\\n              }\\n            } else b(a, d);d = d.sibling;\\n          }d = ye(f, a.internalContextTag, h);d[\"return\"] = a;a = d;\\n        }return g(a);}if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h)) : (c(a, d), d = ve(f, a.internalContextTag, h)), d[\"return\"] = a, a = d, g(a);if (Ye(f)) return L(a, d, f, h);if (Xe(f)) return N(a, d, f, h);m && $e(a, f);if (\"undefined\" === typeof f) switch (a.tag) {case 2:case 1:\\n        h = a.type, E(\"152\", h.displayName || h.name || \"Component\");}return c(a, d);\\n  };\\n}var bf = af(!0),\\n    cf = af(!1);\\nfunction df(a, b, c, d, e) {\\n  function f(a, b, c) {\\n    var d = b.expirationTime;b.child = null === a ? cf(b, null, c, d) : bf(b, a.child, c, d);\\n  }function g(a, b) {\\n    var c = b.ref;null === c || a && a.ref === c || (b.effectTag |= 128);\\n  }function h(a, b, c, d) {\\n    g(a, b);if (!c) return d && re(b, !1), q(a, b);c = b.stateNode;id.current = b;var e = c.render();b.effectTag |= 1;f(a, b, e);b.memoizedState = c.state;b.memoizedProps = c.props;d && re(b, !0);return b.child;\\n  }function k(a) {\\n    var b = a.stateNode;b.pendingContext ? oe(a, b.pendingContext, b.pendingContext !== b.context) : b.context && oe(a, b.context, !1);I(a, b.containerInfo);\\n  }function q(a, b) {\\n    null !== a && b.child !== a.child ? E(\"153\") : void 0;if (null !== b.child) {\\n      a = b.child;var c = se(a, a.pendingProps, a.expirationTime);b.child = c;for (c[\"return\"] = b; null !== a.sibling;) {\\n        a = a.sibling, c = c.sibling = se(a, a.pendingProps, a.expirationTime), c[\"return\"] = b;\\n      }c.sibling = null;\\n    }return b.child;\\n  }function v(a, b) {\\n    switch (b.tag) {case 3:\\n        k(b);break;case 2:\\n        qe(b);break;case 4:\\n        I(b, b.stateNode.containerInfo);}return null;\\n  }var y = a.shouldSetTextContent,\\n      u = a.useSyncScheduling,\\n      z = a.shouldDeprioritizeSubtree,\\n      G = b.pushHostContext,\\n      I = b.pushHostContainer,\\n      L = c.enterHydrationState,\\n      N = c.resetHydrationState,\\n      J = c.tryToClaimNextHydratableInstance;a = Le(d, e, function (a, b) {\\n    a.memoizedProps = b;\\n  }, function (a, b) {\\n    a.memoizedState = b;\\n  });var w = a.adoptClassInstance,\\n      m = a.constructClassInstance,\\n      A = a.mountClassInstance,\\n      Ob = a.updateClassInstance;return { beginWork: function beginWork(a, b, c) {\\n      if (0 === b.expirationTime || b.expirationTime > c) return v(a, b);switch (b.tag) {case 0:\\n          null !== a ? E(\"155\") : void 0;var d = b.type,\\n              e = b.pendingProps,\\n              r = ke(b);r = me(b, r);d = d(e, r);b.effectTag |= 1;\"object\" === (typeof d === \"undefined\" ? \"undefined\" : _typeof(d)) && null !== d && \"function\" === typeof d.render ? (b.tag = 2, e = qe(b), w(b, d), A(b, c), b = h(a, b, !0, e)) : (b.tag = 1, f(a, b, d), b.memoizedProps = e, b = b.child);return b;case 1:\\n          a: {\\n            e = b.type;c = b.pendingProps;d = b.memoizedProps;if (X.current) null === c && (c = d);else if (null === c || d === c) {\\n              b = q(a, b);break a;\\n            }d = ke(b);d = me(b, d);e = e(c, d);b.effectTag |= 1;f(a, b, e);b.memoizedProps = c;b = b.child;\\n          }return b;case 2:\\n          return e = qe(b), d = void 0, null === a ? b.stateNode ? E(\"153\") : (m(b, b.pendingProps), A(b, c), d = !0) : d = Ob(a, b, c), h(a, b, d, e);case 3:\\n          return k(b), e = b.updateQueue, null !== e ? (d = b.memoizedState, e = Je(a, b, e, null, null, c), d === e ? (N(), b = q(a, b)) : (d = e.element, r = b.stateNode, (null === a || null === a.child) && r.hydrate && L(b) ? (b.effectTag |= 2, b.child = cf(b, null, d, c)) : (N(), f(a, b, d)), b.memoizedState = e, b = b.child)) : (N(), b = q(a, b)), b;case 5:\\n          G(b);null === a && J(b);e = b.type;var n = b.memoizedProps;d = b.pendingProps;null === d && (d = n, null === d ? E(\"154\") : void 0);r = null !== a ? a.memoizedProps : null;X.current || null !== d && n !== d ? (n = d.children, y(e, d) ? n = null : r && y(e, r) && (b.effectTag |= 16), g(a, b), 2147483647 !== c && !u && z(e, d) ? (b.expirationTime = 2147483647, b = null) : (f(a, b, n), b.memoizedProps = d, b = b.child)) : b = q(a, b);return b;case 6:\\n          return null === a && J(b), a = b.pendingProps, null === a && (a = b.memoizedProps), b.memoizedProps = a, null;case 8:\\n          b.tag = 7;case 7:\\n          e = b.pendingProps;if (X.current) null === e && (e = a && a.memoizedProps, null === e ? E(\"154\") : void 0);else if (null === e || b.memoizedProps === e) e = b.memoizedProps;d = e.children;b.stateNode = null === a ? cf(b, b.stateNode, d, c) : bf(b, b.stateNode, d, c);b.memoizedProps = e;return b.stateNode;\\n        case 9:\\n          return null;case 4:\\n          a: {\\n            I(b, b.stateNode.containerInfo);e = b.pendingProps;if (X.current) null === e && (e = a && a.memoizedProps, null == e ? E(\"154\") : void 0);else if (null === e || b.memoizedProps === e) {\\n              b = q(a, b);break a;\\n            }null === a ? b.child = bf(b, null, e, c) : f(a, b, e);b.memoizedProps = e;b = b.child;\\n          }return b;case 10:\\n          a: {\\n            c = b.pendingProps;if (X.current) null === c && (c = b.memoizedProps);else if (null === c || b.memoizedProps === c) {\\n              b = q(a, b);break a;\\n            }f(a, b, c);b.memoizedProps = c;b = b.child;\\n          }return b;default:\\n          E(\"156\");}\\n    }, beginFailedWork: function beginFailedWork(a, b, c) {\\n      switch (b.tag) {case 2:\\n          qe(b);break;case 3:\\n          k(b);break;default:\\n          E(\"157\");}b.effectTag |= 64;null === a ? b.child = null : b.child !== a.child && (b.child = a.child);if (0 === b.expirationTime || b.expirationTime > c) return v(a, b);b.firstEffect = null;b.lastEffect = null;b.child = null === a ? cf(b, null, null, c) : bf(b, a.child, null, c);2 === b.tag && (a = b.stateNode, b.memoizedProps = a.props, b.memoizedState = a.state);return b.child;\\n    } };\\n}\\nfunction ef(a, b, c) {\\n  function d(a) {\\n    a.effectTag |= 4;\\n  }var e = a.createInstance,\\n      f = a.createTextInstance,\\n      g = a.appendInitialChild,\\n      h = a.finalizeInitialChildren,\\n      k = a.prepareUpdate,\\n      q = a.persistence,\\n      v = b.getRootHostContainer,\\n      y = b.popHostContext,\\n      u = b.getHostContext,\\n      z = b.popHostContainer,\\n      G = c.prepareToHydrateHostInstance,\\n      I = c.prepareToHydrateHostTextInstance,\\n      L = c.popHydrationState,\\n      N = void 0,\\n      J = void 0,\\n      w = void 0;a.mutation ? (N = function N() {}, J = function J(a, b, c) {\\n    (b.updateQueue = c) && d(b);\\n  }, w = function w(a, b, c, e) {\\n    c !== e && d(b);\\n  }) : q ? E(\"235\") : E(\"236\");\\n  return { completeWork: function completeWork(a, b, c) {\\n      var m = b.pendingProps;if (null === m) m = b.memoizedProps;else if (2147483647 !== b.expirationTime || 2147483647 === c) b.pendingProps = null;switch (b.tag) {case 1:\\n          return null;case 2:\\n          return ne(b), null;case 3:\\n          z(b);V(X, b);V(ie, b);m = b.stateNode;m.pendingContext && (m.context = m.pendingContext, m.pendingContext = null);if (null === a || null === a.child) L(b), b.effectTag &= -3;N(b);return null;case 5:\\n          y(b);c = v();var A = b.type;if (null !== a && null != b.stateNode) {\\n            var p = a.memoizedProps,\\n                q = b.stateNode,\\n                x = u();q = k(q, A, p, m, c, x);J(a, b, q, A, p, m, c);a.ref !== b.ref && (b.effectTag |= 128);\\n          } else {\\n            if (!m) return null === b.stateNode ? E(\"166\") : void 0, null;a = u();if (L(b)) G(b, c, a) && d(b);else {\\n              a = e(A, m, c, a, b);a: for (p = b.child; null !== p;) {\\n                if (5 === p.tag || 6 === p.tag) g(a, p.stateNode);else if (4 !== p.tag && null !== p.child) {\\n                  p.child[\"return\"] = p;p = p.child;continue;\\n                }if (p === b) break;for (; null === p.sibling;) {\\n                  if (null === p[\"return\"] || p[\"return\"] === b) break a;p = p[\"return\"];\\n                }p.sibling[\"return\"] = p[\"return\"];p = p.sibling;\\n              }h(a, A, m, c) && d(b);b.stateNode = a;\\n            }null !== b.ref && (b.effectTag |= 128);\\n          }return null;case 6:\\n          if (a && null != b.stateNode) w(a, b, a.memoizedProps, m);else {\\n            if (\"string\" !== typeof m) return null === b.stateNode ? E(\"166\") : void 0, null;a = v();c = u();L(b) ? I(b) && d(b) : b.stateNode = f(m, a, c, b);\\n          }return null;case 7:\\n          (m = b.memoizedProps) ? void 0 : E(\"165\");b.tag = 8;A = [];a: for ((p = b.stateNode) && (p[\"return\"] = b); null !== p;) {\\n            if (5 === p.tag || 6 === p.tag || 4 === p.tag) E(\"247\");else if (9 === p.tag) A.push(p.type);else if (null !== p.child) {\\n              p.child[\"return\"] = p;p = p.child;continue;\\n            }for (; null === p.sibling;) {\\n              if (null === p[\"return\"] || p[\"return\"] === b) break a;p = p[\"return\"];\\n            }p.sibling[\"return\"] = p[\"return\"];p = p.sibling;\\n          }p = m.handler;m = p(m.props, A);b.child = bf(b, null !== a ? a.child : null, m, c);return b.child;case 8:\\n          return b.tag = 7, null;case 9:\\n          return null;case 10:\\n          return null;case 4:\\n          return z(b), N(b), null;case 0:\\n          E(\"167\");default:\\n          E(\"156\");}\\n    } };\\n}\\nfunction ff(a, b) {\\n  function c(a) {\\n    var c = a.ref;if (null !== c) try {\\n      c(null);\\n    } catch (A) {\\n      b(a, A);\\n    }\\n  }function d(a) {\\n    \"function\" === typeof Ee && Ee(a);switch (a.tag) {case 2:\\n        c(a);var d = a.stateNode;if (\"function\" === typeof d.componentWillUnmount) try {\\n          d.props = a.memoizedProps, d.state = a.memoizedState, d.componentWillUnmount();\\n        } catch (A) {\\n          b(a, A);\\n        }break;case 5:\\n        c(a);break;case 7:\\n        e(a.stateNode);break;case 4:\\n        k && g(a);}\\n  }function e(a) {\\n    for (var b = a;;) {\\n      if (d(b), null === b.child || k && 4 === b.tag) {\\n        if (b === a) break;for (; null === b.sibling;) {\\n          if (null === b[\"return\"] || b[\"return\"] === a) return;b = b[\"return\"];\\n        }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\\n      } else b.child[\"return\"] = b, b = b.child;\\n    }\\n  }function f(a) {\\n    return 5 === a.tag || 3 === a.tag || 4 === a.tag;\\n  }function g(a) {\\n    for (var b = a, c = !1, f = void 0, g = void 0;;) {\\n      if (!c) {\\n        c = b[\"return\"];a: for (;;) {\\n          null === c ? E(\"160\") : void 0;switch (c.tag) {case 5:\\n              f = c.stateNode;g = !1;break a;case 3:\\n              f = c.stateNode.containerInfo;g = !0;break a;case 4:\\n              f = c.stateNode.containerInfo;g = !0;break a;}c = c[\"return\"];\\n        }c = !0;\\n      }if (5 === b.tag || 6 === b.tag) e(b), g ? J(f, b.stateNode) : N(f, b.stateNode);else if (4 === b.tag ? f = b.stateNode.containerInfo : d(b), null !== b.child) {\\n        b.child[\"return\"] = b;b = b.child;continue;\\n      }if (b === a) break;for (; null === b.sibling;) {\\n        if (null === b[\"return\"] || b[\"return\"] === a) return;b = b[\"return\"];4 === b.tag && (c = !1);\\n      }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\\n    }\\n  }var h = a.getPublicInstance,\\n      k = a.mutation;a = a.persistence;k || (a ? E(\"235\") : E(\"236\"));var q = k.commitMount,\\n      v = k.commitUpdate,\\n      y = k.resetTextContent,\\n      u = k.commitTextUpdate,\\n      z = k.appendChild,\\n      G = k.appendChildToContainer,\\n      I = k.insertBefore,\\n      L = k.insertInContainerBefore,\\n      N = k.removeChild,\\n      J = k.removeChildFromContainer;return { commitResetTextContent: function commitResetTextContent(a) {\\n      y(a.stateNode);\\n    }, commitPlacement: function commitPlacement(a) {\\n      a: {\\n        for (var b = a[\"return\"]; null !== b;) {\\n          if (f(b)) {\\n            var c = b;break a;\\n          }b = b[\"return\"];\\n        }E(\"160\");c = void 0;\\n      }var d = b = void 0;switch (c.tag) {case 5:\\n          b = c.stateNode;d = !1;break;case 3:\\n          b = c.stateNode.containerInfo;d = !0;break;case 4:\\n          b = c.stateNode.containerInfo;d = !0;break;default:\\n          E(\"161\");}c.effectTag & 16 && (y(b), c.effectTag &= -17);a: b: for (c = a;;) {\\n        for (; null === c.sibling;) {\\n          if (null === c[\"return\"] || f(c[\"return\"])) {\\n            c = null;break a;\\n          }c = c[\"return\"];\\n        }c.sibling[\"return\"] = c[\"return\"];for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {\\n          if (c.effectTag & 2) continue b;if (null === c.child || 4 === c.tag) continue b;else c.child[\"return\"] = c, c = c.child;\\n        }if (!(c.effectTag & 2)) {\\n          c = c.stateNode;break a;\\n        }\\n      }for (var e = a;;) {\\n        if (5 === e.tag || 6 === e.tag) c ? d ? L(b, e.stateNode, c) : I(b, e.stateNode, c) : d ? G(b, e.stateNode) : z(b, e.stateNode);else if (4 !== e.tag && null !== e.child) {\\n          e.child[\"return\"] = e;e = e.child;continue;\\n        }if (e === a) break;for (; null === e.sibling;) {\\n          if (null === e[\"return\"] || e[\"return\"] === a) return;e = e[\"return\"];\\n        }e.sibling[\"return\"] = e[\"return\"];e = e.sibling;\\n      }\\n    }, commitDeletion: function commitDeletion(a) {\\n      g(a);a[\"return\"] = null;a.child = null;a.alternate && (a.alternate.child = null, a.alternate[\"return\"] = null);\\n    }, commitWork: function commitWork(a, b) {\\n      switch (b.tag) {case 2:\\n          break;case 5:\\n          var c = b.stateNode;if (null != c) {\\n            var d = b.memoizedProps;a = null !== a ? a.memoizedProps : d;var e = b.type,\\n                f = b.updateQueue;b.updateQueue = null;null !== f && v(c, f, e, a, d, b);\\n          }break;case 6:\\n          null === b.stateNode ? E(\"162\") : void 0;c = b.memoizedProps;u(b.stateNode, null !== a ? a.memoizedProps : c, c);break;case 3:\\n          break;default:\\n          E(\"163\");}\\n    }, commitLifeCycles: function commitLifeCycles(a, b) {\\n      switch (b.tag) {case 2:\\n          var c = b.stateNode;if (b.effectTag & 4) if (null === a) c.props = b.memoizedProps, c.state = b.memoizedState, c.componentDidMount();else {\\n            var d = a.memoizedProps;a = a.memoizedState;c.props = b.memoizedProps;c.state = b.memoizedState;c.componentDidUpdate(d, a);\\n          }b = b.updateQueue;null !== b && Ke(b, c);break;case 3:\\n          c = b.updateQueue;null !== c && Ke(c, null !== b.child ? b.child.stateNode : null);break;case 5:\\n          c = b.stateNode;null === a && b.effectTag & 4 && q(c, b.type, b.memoizedProps, b);break;case 6:\\n          break;case 4:\\n          break;default:\\n          E(\"163\");}\\n    }, commitAttachRef: function commitAttachRef(a) {\\n      var b = a.ref;if (null !== b) {\\n        var c = a.stateNode;switch (a.tag) {case 5:\\n            b(h(c));break;default:\\n            b(c);}\\n      }\\n    }, commitDetachRef: function commitDetachRef(a) {\\n      a = a.ref;null !== a && a(null);\\n    } };\\n}var gf = {};\\nfunction hf(a) {\\n  function b(a) {\\n    a === gf ? E(\"174\") : void 0;return a;\\n  }var c = a.getChildHostContext,\\n      d = a.getRootHostContext,\\n      e = { current: gf },\\n      f = { current: gf },\\n      g = { current: gf };return { getHostContext: function getHostContext() {\\n      return b(e.current);\\n    }, getRootHostContainer: function getRootHostContainer() {\\n      return b(g.current);\\n    }, popHostContainer: function popHostContainer(a) {\\n      V(e, a);V(f, a);V(g, a);\\n    }, popHostContext: function popHostContext(a) {\\n      f.current === a && (V(e, a), V(f, a));\\n    }, pushHostContainer: function pushHostContainer(a, b) {\\n      W(g, b, a);b = d(b);W(f, a, a);W(e, b, a);\\n    }, pushHostContext: function pushHostContext(a) {\\n      var d = b(g.current),\\n          h = b(e.current);\\n      d = c(h, a.type, d);h !== d && (W(f, a, a), W(e, d, a));\\n    }, resetHostContainer: function resetHostContainer() {\\n      e.current = gf;g.current = gf;\\n    } };\\n}\\nfunction jf(a) {\\n  function b(a, b) {\\n    var c = new Y(5, null, 0);c.type = \"DELETED\";c.stateNode = b;c[\"return\"] = a;c.effectTag = 8;null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\\n  }function c(a, b) {\\n    switch (a.tag) {case 5:\\n        return b = f(b, a.type, a.pendingProps), null !== b ? (a.stateNode = b, !0) : !1;case 6:\\n        return b = g(b, a.pendingProps), null !== b ? (a.stateNode = b, !0) : !1;default:\\n        return !1;}\\n  }function d(a) {\\n    for (a = a[\"return\"]; null !== a && 5 !== a.tag && 3 !== a.tag;) {\\n      a = a[\"return\"];\\n    }y = a;\\n  }var e = a.shouldSetTextContent;\\n  a = a.hydration;if (!a) return { enterHydrationState: function enterHydrationState() {\\n      return !1;\\n    }, resetHydrationState: function resetHydrationState() {}, tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {}, prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {\\n      E(\"175\");\\n    }, prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {\\n      E(\"176\");\\n    }, popHydrationState: function popHydrationState() {\\n      return !1;\\n    } };var f = a.canHydrateInstance,\\n      g = a.canHydrateTextInstance,\\n      h = a.getNextHydratableSibling,\\n      k = a.getFirstHydratableChild,\\n      q = a.hydrateInstance,\\n      v = a.hydrateTextInstance,\\n      y = null,\\n      u = null,\\n      z = !1;return { enterHydrationState: function enterHydrationState(a) {\\n      u = k(a.stateNode.containerInfo);y = a;return z = !0;\\n    }, resetHydrationState: function resetHydrationState() {\\n      u = y = null;z = !1;\\n    }, tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance(a) {\\n      if (z) {\\n        var d = u;if (d) {\\n          if (!c(a, d)) {\\n            d = h(d);if (!d || !c(a, d)) {\\n              a.effectTag |= 2;z = !1;y = a;return;\\n            }b(y, u);\\n          }y = a;u = k(d);\\n        } else a.effectTag |= 2, z = !1, y = a;\\n      }\\n    }, prepareToHydrateHostInstance: function prepareToHydrateHostInstance(a, b, c) {\\n      b = q(a.stateNode, a.type, a.memoizedProps, b, c, a);a.updateQueue = b;return null !== b ? !0 : !1;\\n    }, prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance(a) {\\n      return v(a.stateNode, a.memoizedProps, a);\\n    }, popHydrationState: function popHydrationState(a) {\\n      if (a !== y) return !1;if (!z) return d(a), z = !0, !1;var c = a.type;if (5 !== a.tag || \"head\" !== c && \"body\" !== c && !e(c, a.memoizedProps)) for (c = u; c;) {\\n        b(a, c), c = h(c);\\n      }d(a);u = y ? h(a.stateNode) : null;return !0;\\n    } };\\n}\\nfunction kf(a) {\\n  function b(a) {\\n    Qb = ja = !0;var b = a.stateNode;b.current === a ? E(\"177\") : void 0;b.isReadyForCommit = !1;id.current = null;if (1 < a.effectTag) {\\n      if (null !== a.lastEffect) {\\n        a.lastEffect.nextEffect = a;var c = a.firstEffect;\\n      } else c = a;\\n    } else c = a.firstEffect;yg();for (t = c; null !== t;) {\\n      var d = !1,\\n          e = void 0;try {\\n        for (; null !== t;) {\\n          var f = t.effectTag;f & 16 && zg(t);if (f & 128) {\\n            var g = t.alternate;null !== g && Ag(g);\\n          }switch (f & -242) {case 2:\\n              Ne(t);t.effectTag &= -3;break;case 6:\\n              Ne(t);t.effectTag &= -3;Oe(t.alternate, t);break;case 4:\\n              Oe(t.alternate, t);break;case 8:\\n              Sc = !0, Bg(t), Sc = !1;}t = t.nextEffect;\\n        }\\n      } catch (Tc) {\\n        d = !0, e = Tc;\\n      }d && (null === t ? E(\"178\") : void 0, h(t, e), null !== t && (t = t.nextEffect));\\n    }Cg();b.current = a;for (t = c; null !== t;) {\\n      c = !1;d = void 0;try {\\n        for (; null !== t;) {\\n          var k = t.effectTag;k & 36 && Dg(t.alternate, t);k & 128 && Eg(t);if (k & 64) switch (e = t, f = void 0, null !== R && (f = R.get(e), R[\"delete\"](e), null == f && null !== e.alternate && (e = e.alternate, f = R.get(e), R[\"delete\"](e))), null == f ? E(\"184\") : void 0, e.tag) {case 2:\\n              e.stateNode.componentDidCatch(f.error, { componentStack: f.componentStack });\\n              break;case 3:\\n              null === ca && (ca = f.error);break;default:\\n              E(\"157\");}var Qc = t.nextEffect;t.nextEffect = null;t = Qc;\\n        }\\n      } catch (Tc) {\\n        c = !0, d = Tc;\\n      }c && (null === t ? E(\"178\") : void 0, h(t, d), null !== t && (t = t.nextEffect));\\n    }ja = Qb = !1;\"function\" === typeof De && De(a.stateNode);ha && (ha.forEach(G), ha = null);null !== ca && (a = ca, ca = null, Ob(a));b = b.current.expirationTime;0 === b && (qa = R = null);return b;\\n  }function c(a) {\\n    for (;;) {\\n      var b = Fg(a.alternate, a, H),\\n          c = a[\"return\"],\\n          d = a.sibling;var e = a;if (2147483647 === H || 2147483647 !== e.expirationTime) {\\n        if (2 !== e.tag && 3 !== e.tag) var f = 0;else f = e.updateQueue, f = null === f ? 0 : f.expirationTime;for (var g = e.child; null !== g;) {\\n          0 !== g.expirationTime && (0 === f || f > g.expirationTime) && (f = g.expirationTime), g = g.sibling;\\n        }e.expirationTime = f;\\n      }if (null !== b) return b;null !== c && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));if (null !== d) return d;\\n      if (null !== c) a = c;else {\\n        a.stateNode.isReadyForCommit = !0;break;\\n      }\\n    }return null;\\n  }function d(a) {\\n    var b = rg(a.alternate, a, H);null === b && (b = c(a));id.current = null;return b;\\n  }function e(a) {\\n    var b = Gg(a.alternate, a, H);null === b && (b = c(a));id.current = null;return b;\\n  }function f(a) {\\n    if (null !== R) {\\n      if (!(0 === H || H > a)) if (H <= Uc) for (; null !== F;) {\\n        F = k(F) ? e(F) : d(F);\\n      } else for (; null !== F && !A();) {\\n        F = k(F) ? e(F) : d(F);\\n      }\\n    } else if (!(0 === H || H > a)) if (H <= Uc) for (; null !== F;) {\\n      F = d(F);\\n    } else for (; null !== F && !A();) {\\n      F = d(F);\\n    }\\n  }function g(a, b) {\\n    ja ? E(\"243\") : void 0;ja = !0;a.isReadyForCommit = !1;if (a !== ra || b !== H || null === F) {\\n      for (; -1 < he;) {\\n        ge[he] = null, he--;\\n      }je = D;ie.current = D;X.current = !1;x();ra = a;H = b;F = se(ra.current, null, b);\\n    }var c = !1,\\n        d = null;try {\\n      f(b);\\n    } catch (Rc) {\\n      c = !0, d = Rc;\\n    }for (; c;) {\\n      if (eb) {\\n        ca = d;break;\\n      }var g = F;if (null === g) eb = !0;else {\\n        var k = h(g, d);null === k ? E(\"183\") : void 0;if (!eb) {\\n          try {\\n            c = k;d = b;for (k = c; null !== g;) {\\n              switch (g.tag) {case 2:\\n                  ne(g);break;case 5:\\n                  qg(g);break;case 3:\\n                  p(g);break;case 4:\\n                  p(g);}if (g === k || g.alternate === k) break;g = g[\"return\"];\\n            }F = e(c);f(d);\\n          } catch (Rc) {\\n            c = !0;d = Rc;continue;\\n          }break;\\n        }\\n      }\\n    }b = ca;eb = ja = !1;ca = null;null !== b && Ob(b);return a.isReadyForCommit ? a.current.alternate : null;\\n  }function h(a, b) {\\n    var c = id.current = null,\\n        d = !1,\\n        e = !1,\\n        f = null;if (3 === a.tag) c = a, q(a) && (eb = !0);else for (var g = a[\"return\"]; null !== g && null === c;) {\\n      2 === g.tag ? \"function\" === typeof g.stateNode.componentDidCatch && (d = !0, f = jd(g), c = g, e = !0) : 3 === g.tag && (c = g);if (q(g)) {\\n        if (Sc || null !== ha && (ha.has(g) || null !== g.alternate && ha.has(g.alternate))) return null;c = null;e = !1;\\n      }g = g[\"return\"];\\n    }if (null !== c) {\\n      null === qa && (qa = new Set());qa.add(c);var h = \"\";g = a;do {\\n        a: switch (g.tag) {case 0:case 1:case 2:case 5:\\n            var k = g._debugOwner,\\n                Qc = g._debugSource;var m = jd(g);var n = null;k && (n = jd(k));k = Qc;m = \"\\\\n    in \" + (m || \"Unknown\") + (k ? \" (at \" + k.fileName.replace(/^.*[\\\\\\\\\\\\/]/, \"\") + \":\" + k.lineNumber + \")\" : n ? \" (created by \" + n + \")\" : \"\");break a;default:\\n            m = \"\";}h += m;g = g[\"return\"];\\n      } while (g);g = h;a = jd(a);null === R && (R = new Map());b = { componentName: a, componentStack: g, error: b, errorBoundary: d ? c.stateNode : null, errorBoundaryFound: d, errorBoundaryName: f, willRetry: e };R.set(c, b);try {\\n        var p = b.error;p && p.suppressReactErrorLogging || console.error(p);\\n      } catch (Vc) {\\n        Vc && Vc.suppressReactErrorLogging || console.error(Vc);\\n      }Qb ? (null === ha && (ha = new Set()), ha.add(c)) : G(c);return c;\\n    }null === ca && (ca = b);return null;\\n  }function k(a) {\\n    return null !== R && (R.has(a) || null !== a.alternate && R.has(a.alternate));\\n  }function q(a) {\\n    return null !== qa && (qa.has(a) || null !== a.alternate && qa.has(a.alternate));\\n  }function v() {\\n    return 20 * (((I() + 100) / 20 | 0) + 1);\\n  }function y(a) {\\n    return 0 !== ka ? ka : ja ? Qb ? 1 : H : !Hg || a.internalContextTag & 1 ? v() : 1;\\n  }function u(a, b) {\\n    return z(a, b, !1);\\n  }function z(a, b) {\\n    for (; null !== a;) {\\n      if (0 === a.expirationTime || a.expirationTime > b) a.expirationTime = b;null !== a.alternate && (0 === a.alternate.expirationTime || a.alternate.expirationTime > b) && (a.alternate.expirationTime = b);if (null === a[\"return\"]) if (3 === a.tag) {\\n        var c = a.stateNode;!ja && c === ra && b < H && (F = ra = null, H = 0);var d = c,\\n            e = b;Rb > Ig && E(\"185\");if (null === d.nextScheduledRoot) d.remainingExpirationTime = e, null === O ? (sa = O = d, d.nextScheduledRoot = d) : (O = O.nextScheduledRoot = d, O.nextScheduledRoot = sa);else {\\n          var f = d.remainingExpirationTime;if (0 === f || e < f) d.remainingExpirationTime = e;\\n        }Fa || (la ? Sb && (ma = d, na = 1, m(ma, na)) : 1 === e ? w(1, null) : L(e));!ja && c === ra && b < H && (F = ra = null, H = 0);\\n      } else break;a = a[\"return\"];\\n    }\\n  }function G(a) {\\n    z(a, 1, !0);\\n  }function I() {\\n    return Uc = ((Wc() - Pe) / 10 | 0) + 2;\\n  }function L(a) {\\n    if (0 !== Tb) {\\n      if (a > Tb) return;Jg(Xc);\\n    }var b = Wc() - Pe;Tb = a;Xc = Kg(J, { timeout: 10 * (a - 2) - b });\\n  }function N() {\\n    var a = 0,\\n        b = null;if (null !== O) for (var c = O, d = sa; null !== d;) {\\n      var e = d.remainingExpirationTime;if (0 === e) {\\n        null === c || null === O ? E(\"244\") : void 0;if (d === d.nextScheduledRoot) {\\n          sa = O = d.nextScheduledRoot = null;break;\\n        } else if (d === sa) sa = e = d.nextScheduledRoot, O.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === O) {\\n          O = c;O.nextScheduledRoot = sa;d.nextScheduledRoot = null;break;\\n        } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;d = c.nextScheduledRoot;\\n      } else {\\n        if (0 === a || e < a) a = e, b = d;if (d === O) break;c = d;d = d.nextScheduledRoot;\\n      }\\n    }c = ma;null !== c && c === b ? Rb++ : Rb = 0;ma = b;na = a;\\n  }function J(a) {\\n    w(0, a);\\n  }function w(a, b) {\\n    fb = b;for (N(); null !== ma && 0 !== na && (0 === a || na <= a) && !Yc;) {\\n      m(ma, na), N();\\n    }null !== fb && (Tb = 0, Xc = -1);0 !== na && L(na);fb = null;Yc = !1;Rb = 0;if (Ub) throw a = Zc, Zc = null, Ub = !1, a;\\n  }function m(a, c) {\\n    Fa ? E(\"245\") : void 0;Fa = !0;if (c <= I()) {\\n      var d = a.finishedWork;null !== d ? (a.finishedWork = null, a.remainingExpirationTime = b(d)) : (a.finishedWork = null, d = g(a, c), null !== d && (a.remainingExpirationTime = b(d)));\\n    } else d = a.finishedWork, null !== d ? (a.finishedWork = null, a.remainingExpirationTime = b(d)) : (a.finishedWork = null, d = g(a, c), null !== d && (A() ? a.finishedWork = d : a.remainingExpirationTime = b(d)));Fa = !1;\\n  }function A() {\\n    return null === fb || fb.timeRemaining() > Lg ? !1 : Yc = !0;\\n  }function Ob(a) {\\n    null === ma ? E(\"246\") : void 0;ma.remainingExpirationTime = 0;Ub || (Ub = !0, Zc = a);\\n  }var r = hf(a),\\n      n = jf(a),\\n      p = r.popHostContainer,\\n      qg = r.popHostContext,\\n      x = r.resetHostContainer,\\n      Me = df(a, r, n, u, y),\\n      rg = Me.beginWork,\\n      Gg = Me.beginFailedWork,\\n      Fg = ef(a, r, n).completeWork;r = ff(a, h);var zg = r.commitResetTextContent,\\n      Ne = r.commitPlacement,\\n      Bg = r.commitDeletion,\\n      Oe = r.commitWork,\\n      Dg = r.commitLifeCycles,\\n      Eg = r.commitAttachRef,\\n      Ag = r.commitDetachRef,\\n      Wc = a.now,\\n      Kg = a.scheduleDeferredCallback,\\n      Jg = a.cancelDeferredCallback,\\n      Hg = a.useSyncScheduling,\\n      yg = a.prepareForCommit,\\n      Cg = a.resetAfterCommit,\\n      Pe = Wc(),\\n      Uc = 2,\\n      ka = 0,\\n      ja = !1,\\n      F = null,\\n      ra = null,\\n      H = 0,\\n      t = null,\\n      R = null,\\n      qa = null,\\n      ha = null,\\n      ca = null,\\n      eb = !1,\\n      Qb = !1,\\n      Sc = !1,\\n      sa = null,\\n      O = null,\\n      Tb = 0,\\n      Xc = -1,\\n      Fa = !1,\\n      ma = null,\\n      na = 0,\\n      Yc = !1,\\n      Ub = !1,\\n      Zc = null,\\n      fb = null,\\n      la = !1,\\n      Sb = !1,\\n      Ig = 1E3,\\n      Rb = 0,\\n      Lg = 1;return { computeAsyncExpiration: v, computeExpirationForFiber: y, scheduleWork: u, batchedUpdates: function batchedUpdates(a, b) {\\n      var c = la;la = !0;try {\\n        return a(b);\\n      } finally {\\n        (la = c) || Fa || w(1, null);\\n      }\\n    }, unbatchedUpdates: function unbatchedUpdates(a) {\\n      if (la && !Sb) {\\n        Sb = !0;try {\\n          return a();\\n        } finally {\\n          Sb = !1;\\n        }\\n      }return a();\\n    }, flushSync: function flushSync(a) {\\n      var b = la;la = !0;try {\\n        a: {\\n          var c = ka;ka = 1;try {\\n            var d = a();break a;\\n          } finally {\\n            ka = c;\\n          }d = void 0;\\n        }return d;\\n      } finally {\\n        la = b, Fa ? E(\"187\") : void 0, w(1, null);\\n      }\\n    }, deferredUpdates: function deferredUpdates(a) {\\n      var b = ka;ka = v();try {\\n        return a();\\n      } finally {\\n        ka = b;\\n      }\\n    } };\\n}\\nfunction lf(a) {\\n  function b(a) {\\n    a = od(a);return null === a ? null : a.stateNode;\\n  }var c = a.getPublicInstance;a = kf(a);var d = a.computeAsyncExpiration,\\n      e = a.computeExpirationForFiber,\\n      f = a.scheduleWork;return { createContainer: function createContainer(a, b) {\\n      var c = new Y(3, null, 0);a = { current: c, containerInfo: a, pendingChildren: null, remainingExpirationTime: 0, isReadyForCommit: !1, finishedWork: null, context: null, pendingContext: null, hydrate: b, nextScheduledRoot: null };return c.stateNode = a;\\n    }, updateContainer: function updateContainer(a, b, c, q) {\\n      var g = b.current;if (c) {\\n        c = c._reactInternalFiber;var h;b: {\\n          2 === kd(c) && 2 === c.tag ? void 0 : E(\"170\");for (h = c; 3 !== h.tag;) {\\n            if (le(h)) {\\n              h = h.stateNode.__reactInternalMemoizedMergedChildContext;break b;\\n            }(h = h[\"return\"]) ? void 0 : E(\"171\");\\n          }h = h.stateNode.context;\\n        }c = le(c) ? pe(c, h) : h;\\n      } else c = D;null === b.context ? b.context = c : b.pendingContext = c;b = q;b = void 0 === b ? null : b;q = null != a && null != a.type && null != a.type.prototype && !0 === a.type.prototype.unstable_isAsyncReactComponent ? d() : e(g);He(g, { expirationTime: q, partialState: { element: a }, callback: b, isReplace: !1, isForced: !1,\\n        nextCallback: null, next: null });f(g, q);\\n    }, batchedUpdates: a.batchedUpdates, unbatchedUpdates: a.unbatchedUpdates, deferredUpdates: a.deferredUpdates, flushSync: a.flushSync, getPublicRootInstance: function getPublicRootInstance(a) {\\n      a = a.current;if (!a.child) return null;switch (a.child.tag) {case 5:\\n          return c(a.child.stateNode);default:\\n          return a.child.stateNode;}\\n    }, findHostInstance: b, findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(a) {\\n      a = pd(a);return null === a ? null : a.stateNode;\\n    }, injectIntoDevTools: function injectIntoDevTools(a) {\\n      var c = a.findFiberByHostInstance;return Ce(B({}, a, { findHostInstanceByFiber: function findHostInstanceByFiber(a) {\\n          return b(a);\\n        }, findFiberByHostInstance: function findFiberByHostInstance(a) {\\n          return c ? c(a) : null;\\n        } }));\\n    } };\\n}var mf = Object.freeze({ default: lf }),\\n    nf = mf && lf || mf,\\n    of = nf[\"default\"] ? nf[\"default\"] : nf;function pf(a, b, c) {\\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;return { $$typeof: Ue, key: null == d ? null : \"\" + d, children: a, containerInfo: b, implementation: c };\\n}var qf = \"object\" === (typeof performance === \"undefined\" ? \"undefined\" : _typeof(performance)) && \"function\" === typeof performance.now,\\n    rf = void 0;rf = qf ? function () {\\n  return performance.now();\\n} : function () {\\n  return Date.now();\\n};\\nvar sf = void 0,\\n    tf = void 0;\\nif (l.canUseDOM) {\\n  if (\"function\" !== typeof requestIdleCallback || \"function\" !== typeof cancelIdleCallback) {\\n    var uf = null,\\n        vf = !1,\\n        wf = -1,\\n        xf = !1,\\n        yf = 0,\\n        zf = 33,\\n        Af = 33,\\n        Bf;Bf = qf ? { didTimeout: !1, timeRemaining: function timeRemaining() {\\n        var a = yf - performance.now();return 0 < a ? a : 0;\\n      } } : { didTimeout: !1, timeRemaining: function timeRemaining() {\\n        var a = yf - Date.now();return 0 < a ? a : 0;\\n      } };var Cf = \"__reactIdleCallback$\" + Math.random().toString(36).slice(2);window.addEventListener(\"message\", function (a) {\\n      if (a.source === window && a.data === Cf) {\\n        vf = !1;a = rf();if (0 >= yf - a) {\\n          if (-1 !== wf && wf <= a) Bf.didTimeout = !0;else {\\n            xf || (xf = !0, requestAnimationFrame(Df));return;\\n          }\\n        } else Bf.didTimeout = !1;wf = -1;a = uf;uf = null;null !== a && a(Bf);\\n      }\\n    }, !1);var Df = function Df(a) {\\n      xf = !1;var b = a - yf + Af;b < Af && zf < Af ? (8 > b && (b = 8), Af = b < zf ? zf : b) : zf = b;yf = a + Af;vf || (vf = !0, window.postMessage(Cf, \"*\"));\\n    };sf = function sf(a, b) {\\n      uf = a;null != b && \"number\" === typeof b.timeout && (wf = rf() + b.timeout);xf || (xf = !0, requestAnimationFrame(Df));return 0;\\n    };tf = function tf() {\\n      uf = null;vf = !1;wf = -1;\\n    };\\n  } else sf = window.requestIdleCallback, tf = window.cancelIdleCallback;\\n} else sf = function sf(a) {\\n  return setTimeout(function () {\\n    a({ timeRemaining: function timeRemaining() {\\n        return Infinity;\\n      } });\\n  });\\n}, tf = function tf(a) {\\n  clearTimeout(a);\\n};var Ef = /^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$/,\\n    Ff = {},\\n    Gf = {};\\nfunction Hf(a) {\\n  if (Gf.hasOwnProperty(a)) return !0;if (Ff.hasOwnProperty(a)) return !1;if (Ef.test(a)) return Gf[a] = !0;Ff[a] = !0;return !1;\\n}\\nfunction If(a, b, c) {\\n  var d = wa(b);if (d && va(b, c)) {\\n    var e = d.mutationMethod;e ? e(a, c) : null == c || d.hasBooleanValue && !c || d.hasNumericValue && isNaN(c) || d.hasPositiveNumericValue && 1 > c || d.hasOverloadedBooleanValue && !1 === c ? Jf(a, b) : d.mustUseProperty ? a[d.propertyName] = c : (b = d.attributeName, (e = d.attributeNamespace) ? a.setAttributeNS(e, b, \"\" + c) : d.hasBooleanValue || d.hasOverloadedBooleanValue && !0 === c ? a.setAttribute(b, \"\") : a.setAttribute(b, \"\" + c));\\n  } else Kf(a, b, va(b, c) ? c : null);\\n}\\nfunction Kf(a, b, c) {\\n  Hf(b) && (null == c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c));\\n}function Jf(a, b) {\\n  var c = wa(b);c ? (b = c.mutationMethod) ? b(a, void 0) : c.mustUseProperty ? a[c.propertyName] = c.hasBooleanValue ? !1 : \"\" : a.removeAttribute(c.attributeName) : a.removeAttribute(b);\\n}\\nfunction Lf(a, b) {\\n  var c = b.value,\\n      d = b.checked;return B({ type: void 0, step: void 0, min: void 0, max: void 0 }, b, { defaultChecked: void 0, defaultValue: void 0, value: null != c ? c : a._wrapperState.initialValue, checked: null != d ? d : a._wrapperState.initialChecked });\\n}function Mf(a, b) {\\n  var c = b.defaultValue;a._wrapperState = { initialChecked: null != b.checked ? b.checked : b.defaultChecked, initialValue: null != b.value ? b.value : c, controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value };\\n}\\nfunction Nf(a, b) {\\n  b = b.checked;null != b && If(a, \"checked\", b);\\n}function Of(a, b) {\\n  Nf(a, b);var c = b.value;if (null != c) {\\n    if (0 === c && \"\" === a.value) a.value = \"0\";else if (\"number\" === b.type) {\\n      if (b = parseFloat(a.value) || 0, c != b || c == b && a.value != c) a.value = \"\" + c;\\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\\n  } else null == b.value && null != b.defaultValue && a.defaultValue !== \"\" + b.defaultValue && (a.defaultValue = \"\" + b.defaultValue), null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\\n}\\nfunction Pf(a, b) {\\n  switch (b.type) {case \"submit\":case \"reset\":\\n      break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":\\n      a.value = \"\";a.value = a.defaultValue;break;default:\\n      a.value = a.value;}b = a.name;\"\" !== b && (a.name = \"\");a.defaultChecked = !a.defaultChecked;a.defaultChecked = !a.defaultChecked;\"\" !== b && (a.name = b);\\n}function Qf(a) {\\n  var b = \"\";aa.Children.forEach(a, function (a) {\\n    null == a || \"string\" !== typeof a && \"number\" !== typeof a || (b += a);\\n  });return b;\\n}\\nfunction Rf(a, b) {\\n  a = B({ children: void 0 }, b);if (b = Qf(b.children)) a.children = b;return a;\\n}function Sf(a, b, c, d) {\\n  a = a.options;if (b) {\\n    b = {};for (var e = 0; e < c.length; e++) {\\n      b[\"$\" + c[e]] = !0;\\n    }for (c = 0; c < a.length; c++) {\\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\\n    }\\n  } else {\\n    c = \"\" + c;b = null;for (e = 0; e < a.length; e++) {\\n      if (a[e].value === c) {\\n        a[e].selected = !0;d && (a[e].defaultSelected = !0);return;\\n      }null !== b || a[e].disabled || (b = a[e]);\\n    }null !== b && (b.selected = !0);\\n  }\\n}\\nfunction Tf(a, b) {\\n  var c = b.value;a._wrapperState = { initialValue: null != c ? c : b.defaultValue, wasMultiple: !!b.multiple };\\n}function Uf(a, b) {\\n  null != b.dangerouslySetInnerHTML ? E(\"91\") : void 0;return B({}, b, { value: void 0, defaultValue: void 0, children: \"\" + a._wrapperState.initialValue });\\n}function Vf(a, b) {\\n  var c = b.value;null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? E(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : E(\"93\"), b = b[0]), c = \"\" + b), null == c && (c = \"\"));a._wrapperState = { initialValue: \"\" + c };\\n}\\nfunction Wf(a, b) {\\n  var c = b.value;null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && (a.defaultValue = c));null != b.defaultValue && (a.defaultValue = b.defaultValue);\\n}function Xf(a) {\\n  var b = a.textContent;b === a._wrapperState.initialValue && (a.value = b);\\n}var Yf = { html: \"http://www.w3.org/1999/xhtml\", mathml: \"http://www.w3.org/1998/Math/MathML\", svg: \"http://www.w3.org/2000/svg\" };\\nfunction Zf(a) {\\n  switch (a) {case \"svg\":\\n      return \"http://www.w3.org/2000/svg\";case \"math\":\\n      return \"http://www.w3.org/1998/Math/MathML\";default:\\n      return \"http://www.w3.org/1999/xhtml\";}\\n}function $f(a, b) {\\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? Zf(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\\n}\\nvar ag = void 0,\\n    bg = function (a) {\\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\\n    MSApp.execUnsafeLocalFunction(function () {\\n      return a(b, c, d, e);\\n    });\\n  } : a;\\n}(function (a, b) {\\n  if (a.namespaceURI !== Yf.svg || \"innerHTML\" in a) a.innerHTML = b;else {\\n    ag = ag || document.createElement(\"div\");ag.innerHTML = \"\\\\x3csvg\\\\x3e\" + b + \"\\\\x3c/svg\\\\x3e\";for (b = ag.firstChild; a.firstChild;) {\\n      a.removeChild(a.firstChild);\\n    }for (; b.firstChild;) {\\n      a.appendChild(b.firstChild);\\n    }\\n  }\\n});\\nfunction cg(a, b) {\\n  if (b) {\\n    var c = a.firstChild;if (c && c === a.lastChild && 3 === c.nodeType) {\\n      c.nodeValue = b;return;\\n    }\\n  }a.textContent = b;\\n}\\nvar dg = { animationIterationCount: !0, borderImageOutset: !0, borderImageSlice: !0, borderImageWidth: !0, boxFlex: !0, boxFlexGroup: !0, boxOrdinalGroup: !0, columnCount: !0, columns: !0, flex: !0, flexGrow: !0, flexPositive: !0, flexShrink: !0, flexNegative: !0, flexOrder: !0, gridRow: !0, gridRowEnd: !0, gridRowSpan: !0, gridRowStart: !0, gridColumn: !0, gridColumnEnd: !0, gridColumnSpan: !0, gridColumnStart: !0, fontWeight: !0, lineClamp: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, tabSize: !0, widows: !0, zIndex: !0, zoom: !0, fillOpacity: !0, floodOpacity: !0,\\n  stopOpacity: !0, strokeDasharray: !0, strokeDashoffset: !0, strokeMiterlimit: !0, strokeOpacity: !0, strokeWidth: !0 },\\n    eg = [\"Webkit\", \"ms\", \"Moz\", \"O\"];Object.keys(dg).forEach(function (a) {\\n  eg.forEach(function (b) {\\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);dg[b] = dg[a];\\n  });\\n});\\nfunction fg(a, b) {\\n  a = a.style;for (var c in b) {\\n    if (b.hasOwnProperty(c)) {\\n      var d = 0 === c.indexOf(\"--\");var e = c;var f = b[c];e = null == f || \"boolean\" === typeof f || \"\" === f ? \"\" : d || \"number\" !== typeof f || 0 === f || dg.hasOwnProperty(e) && dg[e] ? (\"\" + f).trim() : f + \"px\";\"float\" === c && (c = \"cssFloat\");d ? a.setProperty(c, e) : a[c] = e;\\n    }\\n  }\\n}var gg = B({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });\\nfunction hg(a, b, c) {\\n  b && (gg[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? E(\"137\", a, c()) : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? E(\"60\") : void 0, \"object\" === _typeof(b.dangerouslySetInnerHTML) && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : E(\"61\")), null != b.style && \"object\" !== _typeof(b.style) ? E(\"62\", c()) : void 0);\\n}\\nfunction ig(a, b) {\\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;switch (a) {case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":\\n      return !1;default:\\n      return !0;}\\n}var jg = Yf.html,\\n    kg = C.thatReturns(\"\");\\nfunction lg(a, b) {\\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;var c = Hd(a);b = Sa[b];for (var d = 0; d < b.length; d++) {\\n    var e = b[d];c.hasOwnProperty(e) && c[e] || (\"topScroll\" === e ? wd(\"topScroll\", \"scroll\", a) : \"topFocus\" === e || \"topBlur\" === e ? (wd(\"topFocus\", \"focus\", a), wd(\"topBlur\", \"blur\", a), c.topBlur = !0, c.topFocus = !0) : \"topCancel\" === e ? (yc(\"cancel\", !0) && wd(\"topCancel\", \"cancel\", a), c.topCancel = !0) : \"topClose\" === e ? (yc(\"close\", !0) && wd(\"topClose\", \"close\", a), c.topClose = !0) : Dd.hasOwnProperty(e) && U(e, Dd[e], a), c[e] = !0);\\n  }\\n}\\nvar mg = { topAbort: \"abort\", topCanPlay: \"canplay\", topCanPlayThrough: \"canplaythrough\", topDurationChange: \"durationchange\", topEmptied: \"emptied\", topEncrypted: \"encrypted\", topEnded: \"ended\", topError: \"error\", topLoadedData: \"loadeddata\", topLoadedMetadata: \"loadedmetadata\", topLoadStart: \"loadstart\", topPause: \"pause\", topPlay: \"play\", topPlaying: \"playing\", topProgress: \"progress\", topRateChange: \"ratechange\", topSeeked: \"seeked\", topSeeking: \"seeking\", topStalled: \"stalled\", topSuspend: \"suspend\", topTimeUpdate: \"timeupdate\", topVolumeChange: \"volumechange\",\\n  topWaiting: \"waiting\" };function ng(a, b, c, d) {\\n  c = 9 === c.nodeType ? c : c.ownerDocument;d === jg && (d = Zf(a));d === jg ? \"script\" === a ? (a = c.createElement(\"div\"), a.innerHTML = \"\\\\x3cscript\\\\x3e\\\\x3c/script\\\\x3e\", a = a.removeChild(a.firstChild)) : a = \"string\" === typeof b.is ? c.createElement(a, { is: b.is }) : c.createElement(a) : a = c.createElementNS(d, a);return a;\\n}function og(a, b) {\\n  return (9 === b.nodeType ? b : b.ownerDocument).createTextNode(a);\\n}\\nfunction pg(a, b, c, d) {\\n  var e = ig(b, c);switch (b) {case \"iframe\":case \"object\":\\n      U(\"topLoad\", \"load\", a);var f = c;break;case \"video\":case \"audio\":\\n      for (f in mg) {\\n        mg.hasOwnProperty(f) && U(f, mg[f], a);\\n      }f = c;break;case \"source\":\\n      U(\"topError\", \"error\", a);f = c;break;case \"img\":case \"image\":\\n      U(\"topError\", \"error\", a);U(\"topLoad\", \"load\", a);f = c;break;case \"form\":\\n      U(\"topReset\", \"reset\", a);U(\"topSubmit\", \"submit\", a);f = c;break;case \"details\":\\n      U(\"topToggle\", \"toggle\", a);f = c;break;case \"input\":\\n      Mf(a, c);f = Lf(a, c);U(\"topInvalid\", \"invalid\", a);\\n      lg(d, \"onChange\");break;case \"option\":\\n      f = Rf(a, c);break;case \"select\":\\n      Tf(a, c);f = B({}, c, { value: void 0 });U(\"topInvalid\", \"invalid\", a);lg(d, \"onChange\");break;case \"textarea\":\\n      Vf(a, c);f = Uf(a, c);U(\"topInvalid\", \"invalid\", a);lg(d, \"onChange\");break;default:\\n      f = c;}hg(b, f, kg);var g = f,\\n      h;for (h in g) {\\n    if (g.hasOwnProperty(h)) {\\n      var k = g[h];\"style\" === h ? fg(a, k, kg) : \"dangerouslySetInnerHTML\" === h ? (k = k ? k.__html : void 0, null != k && bg(a, k)) : \"children\" === h ? \"string\" === typeof k ? (\"textarea\" !== b || \"\" !== k) && cg(a, k) : \"number\" === typeof k && cg(a, \"\" + k) : \"suppressContentEditableWarning\" !== h && \"suppressHydrationWarning\" !== h && \"autoFocus\" !== h && (Ra.hasOwnProperty(h) ? null != k && lg(d, h) : e ? Kf(a, h, k) : null != k && If(a, h, k));\\n    }\\n  }switch (b) {case \"input\":\\n      Bc(a);Pf(a, c);break;case \"textarea\":\\n      Bc(a);Xf(a, c);break;case \"option\":\\n      null != c.value && a.setAttribute(\"value\", c.value);break;case \"select\":\\n      a.multiple = !!c.multiple;b = c.value;null != b ? Sf(a, !!c.multiple, b, !1) : null != c.defaultValue && Sf(a, !!c.multiple, c.defaultValue, !0);break;default:\\n      \"function\" === typeof f.onClick && (a.onclick = C);}\\n}\\nfunction sg(a, b, c, d, e) {\\n  var f = null;switch (b) {case \"input\":\\n      c = Lf(a, c);d = Lf(a, d);f = [];break;case \"option\":\\n      c = Rf(a, c);d = Rf(a, d);f = [];break;case \"select\":\\n      c = B({}, c, { value: void 0 });d = B({}, d, { value: void 0 });f = [];break;case \"textarea\":\\n      c = Uf(a, c);d = Uf(a, d);f = [];break;default:\\n      \"function\" !== typeof c.onClick && \"function\" === typeof d.onClick && (a.onclick = C);}hg(b, d, kg);var g, h;a = null;for (g in c) {\\n    if (!d.hasOwnProperty(g) && c.hasOwnProperty(g) && null != c[g]) if (\"style\" === g) for (h in b = c[g], b) {\\n      b.hasOwnProperty(h) && (a || (a = {}), a[h] = \"\");\\n    } else \"dangerouslySetInnerHTML\" !== g && \"children\" !== g && \"suppressContentEditableWarning\" !== g && \"suppressHydrationWarning\" !== g && \"autoFocus\" !== g && (Ra.hasOwnProperty(g) ? f || (f = []) : (f = f || []).push(g, null));\\n  }for (g in d) {\\n    var k = d[g];b = null != c ? c[g] : void 0;if (d.hasOwnProperty(g) && k !== b && (null != k || null != b)) if (\"style\" === g) {\\n      if (b) {\\n        for (h in b) {\\n          !b.hasOwnProperty(h) || k && k.hasOwnProperty(h) || (a || (a = {}), a[h] = \"\");\\n        }for (h in k) {\\n          k.hasOwnProperty(h) && b[h] !== k[h] && (a || (a = {}), a[h] = k[h]);\\n        }\\n      } else a || (f || (f = []), f.push(g, a)), a = k;\\n    } else \"dangerouslySetInnerHTML\" === g ? (k = k ? k.__html : void 0, b = b ? b.__html : void 0, null != k && b !== k && (f = f || []).push(g, \"\" + k)) : \"children\" === g ? b === k || \"string\" !== typeof k && \"number\" !== typeof k || (f = f || []).push(g, \"\" + k) : \"suppressContentEditableWarning\" !== g && \"suppressHydrationWarning\" !== g && (Ra.hasOwnProperty(g) ? (null != k && lg(e, g), f || b === k || (f = [])) : (f = f || []).push(g, k));\\n  }a && (f = f || []).push(\"style\", a);return f;\\n}\\nfunction tg(a, b, c, d, e) {\\n  \"input\" === c && \"radio\" === e.type && null != e.name && Nf(a, e);ig(c, d);d = ig(c, e);for (var f = 0; f < b.length; f += 2) {\\n    var g = b[f],\\n        h = b[f + 1];\"style\" === g ? fg(a, h, kg) : \"dangerouslySetInnerHTML\" === g ? bg(a, h) : \"children\" === g ? cg(a, h) : d ? null != h ? Kf(a, g, h) : a.removeAttribute(g) : null != h ? If(a, g, h) : Jf(a, g);\\n  }switch (c) {case \"input\":\\n      Of(a, e);break;case \"textarea\":\\n      Wf(a, e);break;case \"select\":\\n      a._wrapperState.initialValue = void 0, b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? Sf(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? Sf(a, !!e.multiple, e.defaultValue, !0) : Sf(a, !!e.multiple, e.multiple ? [] : \"\", !1));}\\n}\\nfunction ug(a, b, c, d, e) {\\n  switch (b) {case \"iframe\":case \"object\":\\n      U(\"topLoad\", \"load\", a);break;case \"video\":case \"audio\":\\n      for (var f in mg) {\\n        mg.hasOwnProperty(f) && U(f, mg[f], a);\\n      }break;case \"source\":\\n      U(\"topError\", \"error\", a);break;case \"img\":case \"image\":\\n      U(\"topError\", \"error\", a);U(\"topLoad\", \"load\", a);break;case \"form\":\\n      U(\"topReset\", \"reset\", a);U(\"topSubmit\", \"submit\", a);break;case \"details\":\\n      U(\"topToggle\", \"toggle\", a);break;case \"input\":\\n      Mf(a, c);U(\"topInvalid\", \"invalid\", a);lg(e, \"onChange\");break;case \"select\":\\n      Tf(a, c);\\n      U(\"topInvalid\", \"invalid\", a);lg(e, \"onChange\");break;case \"textarea\":\\n      Vf(a, c), U(\"topInvalid\", \"invalid\", a), lg(e, \"onChange\");}hg(b, c, kg);d = null;for (var g in c) {\\n    c.hasOwnProperty(g) && (f = c[g], \"children\" === g ? \"string\" === typeof f ? a.textContent !== f && (d = [\"children\", f]) : \"number\" === typeof f && a.textContent !== \"\" + f && (d = [\"children\", \"\" + f]) : Ra.hasOwnProperty(g) && null != f && lg(e, g));\\n  }switch (b) {case \"input\":\\n      Bc(a);Pf(a, c);break;case \"textarea\":\\n      Bc(a);Xf(a, c);break;case \"select\":case \"option\":\\n      break;default:\\n      \"function\" === typeof c.onClick && (a.onclick = C);}return d;\\n}function vg(a, b) {\\n  return a.nodeValue !== b;\\n}\\nvar wg = Object.freeze({ createElement: ng, createTextNode: og, setInitialProperties: pg, diffProperties: sg, updateProperties: tg, diffHydratedProperties: ug, diffHydratedText: vg, warnForUnmatchedText: function warnForUnmatchedText() {}, warnForDeletedHydratableElement: function warnForDeletedHydratableElement() {}, warnForDeletedHydratableText: function warnForDeletedHydratableText() {}, warnForInsertedHydratedElement: function warnForInsertedHydratedElement() {}, warnForInsertedHydratedText: function warnForInsertedHydratedText() {}, restoreControlledState: function restoreControlledState(a, b, c) {\\n    switch (b) {case \"input\":\\n        Of(a, c);b = c.name;if (\"radio\" === c.type && null != b) {\\n          for (c = a; c.parentNode;) {\\n            c = c.parentNode;\\n          }c = c.querySelectorAll(\"input[name\\\\x3d\" + JSON.stringify(\"\" + b) + \\'][type\\\\x3d\"radio\"]\\');for (b = 0; b < c.length; b++) {\\n            var d = c[b];if (d !== a && d.form === a.form) {\\n              var e = rb(d);e ? void 0 : E(\"90\");Cc(d);Of(d, e);\\n            }\\n          }\\n        }break;case \"textarea\":\\n        Wf(a, c);break;case \"select\":\\n        b = c.value, null != b && Sf(a, !!c.multiple, b, !1);}\\n  } });nc.injectFiberControlledHostComponent(wg);var xg = null,\\n    Mg = null;function Ng(a) {\\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\\n}\\nfunction Og(a) {\\n  a = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null;return !(!a || 1 !== a.nodeType || !a.hasAttribute(\"data-reactroot\"));\\n}\\nvar Z = of({ getRootHostContext: function getRootHostContext(a) {\\n    var b = a.nodeType;switch (b) {case 9:case 11:\\n        a = (a = a.documentElement) ? a.namespaceURI : $f(null, \"\");break;default:\\n        b = 8 === b ? a.parentNode : a, a = b.namespaceURI || null, b = b.tagName, a = $f(a, b);}return a;\\n  }, getChildHostContext: function getChildHostContext(a, b) {\\n    return $f(a, b);\\n  }, getPublicInstance: function getPublicInstance(a) {\\n    return a;\\n  }, prepareForCommit: function prepareForCommit() {\\n    xg = td;var a = da();if (Kd(a)) {\\n      if (\"selectionStart\" in a) var b = { start: a.selectionStart, end: a.selectionEnd };else a: {\\n        var c = window.getSelection && window.getSelection();\\n        if (c && 0 !== c.rangeCount) {\\n          b = c.anchorNode;var d = c.anchorOffset,\\n              e = c.focusNode;c = c.focusOffset;try {\\n            b.nodeType, e.nodeType;\\n          } catch (z) {\\n            b = null;break a;\\n          }var f = 0,\\n              g = -1,\\n              h = -1,\\n              k = 0,\\n              q = 0,\\n              v = a,\\n              y = null;b: for (;;) {\\n            for (var u;;) {\\n              v !== b || 0 !== d && 3 !== v.nodeType || (g = f + d);v !== e || 0 !== c && 3 !== v.nodeType || (h = f + c);3 === v.nodeType && (f += v.nodeValue.length);if (null === (u = v.firstChild)) break;y = v;v = u;\\n            }for (;;) {\\n              if (v === a) break b;y === b && ++k === d && (g = f);y === e && ++q === c && (h = f);if (null !== (u = v.nextSibling)) break;v = y;y = v.parentNode;\\n            }v = u;\\n          }b = -1 === g || -1 === h ? null : { start: g, end: h };\\n        } else b = null;\\n      }b = b || { start: 0, end: 0 };\\n    } else b = null;Mg = { focusedElem: a, selectionRange: b };ud(!1);\\n  }, resetAfterCommit: function resetAfterCommit() {\\n    var a = Mg,\\n        b = da(),\\n        c = a.focusedElem,\\n        d = a.selectionRange;if (b !== c && fa(document.documentElement, c)) {\\n      if (Kd(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (window.getSelection) {\\n        b = window.getSelection();var e = c[Eb()].length;a = Math.min(d.start, e);d = void 0 === d.end ? a : Math.min(d.end, e);!b.extend && a > d && (e = d, d = a, a = e);e = Jd(c, a);var f = Jd(c, d);if (e && f && (1 !== b.rangeCount || b.anchorNode !== e.node || b.anchorOffset !== e.offset || b.focusNode !== f.node || b.focusOffset !== f.offset)) {\\n          var g = document.createRange();g.setStart(e.node, e.offset);b.removeAllRanges();a > d ? (b.addRange(g), b.extend(f.node, f.offset)) : (g.setEnd(f.node, f.offset), b.addRange(g));\\n        }\\n      }b = [];for (a = c; a = a.parentNode;) {\\n        1 === a.nodeType && b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });\\n      }ia(c);for (c = 0; c < b.length; c++) {\\n        a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\\n      }\\n    }Mg = null;ud(xg);xg = null;\\n  }, createInstance: function createInstance(a, b, c, d, e) {\\n    a = ng(a, b, c, d);a[Q] = e;a[ob] = b;return a;\\n  }, appendInitialChild: function appendInitialChild(a, b) {\\n    a.appendChild(b);\\n  }, finalizeInitialChildren: function finalizeInitialChildren(a, b, c, d) {\\n    pg(a, b, c, d);a: {\\n      switch (b) {case \"button\":case \"input\":case \"select\":case \"textarea\":\\n          a = !!c.autoFocus;break a;}a = !1;\\n    }return a;\\n  }, prepareUpdate: function prepareUpdate(a, b, c, d, e) {\\n    return sg(a, b, c, d, e);\\n  }, shouldSetTextContent: function shouldSetTextContent(a, b) {\\n    return \"textarea\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === _typeof(b.dangerouslySetInnerHTML) && null !== b.dangerouslySetInnerHTML && \"string\" === typeof b.dangerouslySetInnerHTML.__html;\\n  }, shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(a, b) {\\n    return !!b.hidden;\\n  }, createTextInstance: function createTextInstance(a, b, c, d) {\\n    a = og(a, b);a[Q] = d;return a;\\n  }, now: rf, mutation: { commitMount: function commitMount(a) {\\n      a.focus();\\n    }, commitUpdate: function commitUpdate(a, b, c, d, e) {\\n      a[ob] = e;tg(a, b, c, d, e);\\n    }, resetTextContent: function resetTextContent(a) {\\n      a.textContent = \"\";\\n    }, commitTextUpdate: function commitTextUpdate(a, b, c) {\\n      a.nodeValue = c;\\n    }, appendChild: function appendChild(a, b) {\\n      a.appendChild(b);\\n    }, appendChildToContainer: function appendChildToContainer(a, b) {\\n      8 === a.nodeType ? a.parentNode.insertBefore(b, a) : a.appendChild(b);\\n    }, insertBefore: function insertBefore(a, b, c) {\\n      a.insertBefore(b, c);\\n    }, insertInContainerBefore: function insertInContainerBefore(a, b, c) {\\n      8 === a.nodeType ? a.parentNode.insertBefore(b, c) : a.insertBefore(b, c);\\n    }, removeChild: function removeChild(a, b) {\\n      a.removeChild(b);\\n    }, removeChildFromContainer: function removeChildFromContainer(a, b) {\\n      8 === a.nodeType ? a.parentNode.removeChild(b) : a.removeChild(b);\\n    } }, hydration: { canHydrateInstance: function canHydrateInstance(a, b) {\\n      return 1 !== a.nodeType || b.toLowerCase() !== a.nodeName.toLowerCase() ? null : a;\\n    }, canHydrateTextInstance: function canHydrateTextInstance(a, b) {\\n      return \"\" === b || 3 !== a.nodeType ? null : a;\\n    }, getNextHydratableSibling: function getNextHydratableSibling(a) {\\n      for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\\n        a = a.nextSibling;\\n      }return a;\\n    }, getFirstHydratableChild: function getFirstHydratableChild(a) {\\n      for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\\n        a = a.nextSibling;\\n      }return a;\\n    }, hydrateInstance: function hydrateInstance(a, b, c, d, e, f) {\\n      a[Q] = f;a[ob] = c;return ug(a, b, c, e, d);\\n    }, hydrateTextInstance: function hydrateTextInstance(a, b, c) {\\n      a[Q] = c;return vg(a, b);\\n    }, didNotMatchHydratedContainerTextInstance: function didNotMatchHydratedContainerTextInstance() {}, didNotMatchHydratedTextInstance: function didNotMatchHydratedTextInstance() {},\\n    didNotHydrateContainerInstance: function didNotHydrateContainerInstance() {}, didNotHydrateInstance: function didNotHydrateInstance() {}, didNotFindHydratableContainerInstance: function didNotFindHydratableContainerInstance() {}, didNotFindHydratableContainerTextInstance: function didNotFindHydratableContainerTextInstance() {}, didNotFindHydratableInstance: function didNotFindHydratableInstance() {}, didNotFindHydratableTextInstance: function didNotFindHydratableTextInstance() {} }, scheduleDeferredCallback: sf, cancelDeferredCallback: tf, useSyncScheduling: !0 });rc = Z.batchedUpdates;\\nfunction Pg(a, b, c, d, e) {\\n  Ng(c) ? void 0 : E(\"200\");var f = c._reactRootContainer;if (f) Z.updateContainer(b, f, a, e);else {\\n    d = d || Og(c);if (!d) for (f = void 0; f = c.lastChild;) {\\n      c.removeChild(f);\\n    }var g = Z.createContainer(c, d);f = c._reactRootContainer = g;Z.unbatchedUpdates(function () {\\n      Z.updateContainer(b, g, a, e);\\n    });\\n  }return Z.getPublicRootInstance(f);\\n}function Qg(a, b) {\\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;Ng(b) ? void 0 : E(\"200\");return pf(a, b, null, c);\\n}\\nfunction Rg(a, b) {\\n  this._reactRootContainer = Z.createContainer(a, b);\\n}Rg.prototype.render = function (a, b) {\\n  Z.updateContainer(a, this._reactRootContainer, null, b);\\n};Rg.prototype.unmount = function (a) {\\n  Z.updateContainer(null, this._reactRootContainer, null, a);\\n};\\nvar Sg = { createPortal: Qg, findDOMNode: function findDOMNode(a) {\\n    if (null == a) return null;if (1 === a.nodeType) return a;var b = a._reactInternalFiber;if (b) return Z.findHostInstance(b);\"function\" === typeof a.render ? E(\"188\") : E(\"213\", Object.keys(a));\\n  }, hydrate: function hydrate(a, b, c) {\\n    return Pg(null, a, b, !0, c);\\n  }, render: function render(a, b, c) {\\n    return Pg(null, a, b, !1, c);\\n  }, unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\\n    null == a || void 0 === a._reactInternalFiber ? E(\"38\") : void 0;return Pg(a, b, c, !1, d);\\n  }, unmountComponentAtNode: function unmountComponentAtNode(a) {\\n    Ng(a) ? void 0 : E(\"40\");return a._reactRootContainer ? (Z.unbatchedUpdates(function () {\\n      Pg(null, null, a, !1, function () {\\n        a._reactRootContainer = null;\\n      });\\n    }), !0) : !1;\\n  }, unstable_createPortal: Qg, unstable_batchedUpdates: tc, unstable_deferredUpdates: Z.deferredUpdates, flushSync: Z.flushSync, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { EventPluginHub: mb, EventPluginRegistry: Va, EventPropagators: Cb, ReactControlledComponent: qc, ReactDOMComponentTree: sb, ReactDOMEventListener: xd } };\\nZ.injectIntoDevTools({ findFiberByHostInstance: pb, bundleType: 0, version: \"16.2.0\", rendererPackageName: \"react-dom\" });var Tg = Object.freeze({ default: Sg }),\\n    Ug = Tg && Sg || Tg;module.exports = Ug[\"default\"] ? Ug[\"default\"] : Ug;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///18\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nfunction checkDCE() {\\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\\n    return;\\n  }\\n  if (false) {}\\n  try {\\n    // Verify that the code above has been dead code eliminated (DCE'd).\\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\\n  } catch (err) {\\n    // DevTools shouldn't crash React, no matter what.\\n    // We should still report in case we break this code.\\n    console.error(err);\\n  }\\n}\\n\\nif (true) {\\n  // DCE check should happen before ReactDOM bundle executes so that\\n  // DevTools can report bad minification during injection.\\n  checkDCE();\\n  module.exports = __webpack_require__(/*! ./cjs/react-dom.production.min.js */ 18);\\n} else {}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzPzhiYzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBUyxXQUNQO0FBQ0E7TUFDRSxPQUFPLG1DQUFtQyxlQUMxQyxPQUFPLCtCQUErQixhQUFhLFlBRW5EO0FBQ0Q7QUFDRDtNQUFJLEtBQXlCLEVBQzNCLEVBU0Y7TUFDRTtBQUNBO21DQUErQixTQUNoQztBQUhELElBR0UsT0FBTyxLQUNQO0FBQ0E7QUFDQTtZQUFRLE1BQ1Q7QUFDRjs7O0FBRUQsSUFBSSxJQUF5QixFQUMzQjtBQUNBO0FBQ0E7QUFDQTtTQUFPLFVBQVUsb0JBQ2xCO0FBTEQsT0FNRSIsImZpbGUiOiIxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///19\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('/** @license React v16.2.0\\n * react.production.min.js\\n *\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\n\\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n};\\n\\nvar m = __webpack_require__(/*! object-assign */ 4),\\n    n = __webpack_require__(/*! fbjs/lib/emptyObject */ 3),\\n    p = __webpack_require__(/*! fbjs/lib/emptyFunction */ 0),\\n    q = \"function\" === typeof Symbol && Symbol[\"for\"],\\n    r = q ? Symbol[\"for\"](\"react.element\") : 60103,\\n    t = q ? Symbol[\"for\"](\"react.call\") : 60104,\\n    u = q ? Symbol[\"for\"](\"react.return\") : 60105,\\n    v = q ? Symbol[\"for\"](\"react.portal\") : 60106,\\n    w = q ? Symbol[\"for\"](\"react.fragment\") : 60107,\\n    x = \"function\" === typeof Symbol && Symbol.iterator;\\nfunction y(a) {\\n  for (var b = arguments.length - 1, e = \"Minified React error #\" + a + \"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\\\x3d\" + a, c = 0; c < b; c++) {\\n    e += \"\\\\x26args[]\\\\x3d\" + encodeURIComponent(arguments[c + 1]);\\n  }b = Error(e + \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name = \"Invariant Violation\";b.framesToPop = 1;throw b;\\n}\\nvar z = { isMounted: function isMounted() {\\n    return !1;\\n  }, enqueueForceUpdate: function enqueueForceUpdate() {}, enqueueReplaceState: function enqueueReplaceState() {}, enqueueSetState: function enqueueSetState() {} };function A(a, b, e) {\\n  this.props = a;this.context = b;this.refs = n;this.updater = e || z;\\n}A.prototype.isReactComponent = {};A.prototype.setState = function (a, b) {\\n  \"object\" !== (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && \"function\" !== typeof a && null != a ? y(\"85\") : void 0;this.updater.enqueueSetState(this, a, b, \"setState\");\\n};A.prototype.forceUpdate = function (a) {\\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\\n};\\nfunction B(a, b, e) {\\n  this.props = a;this.context = b;this.refs = n;this.updater = e || z;\\n}function C() {}C.prototype = A.prototype;var D = B.prototype = new C();D.constructor = B;m(D, A.prototype);D.isPureReactComponent = !0;function E(a, b, e) {\\n  this.props = a;this.context = b;this.refs = n;this.updater = e || z;\\n}var F = E.prototype = new C();F.constructor = E;m(F, A.prototype);F.unstable_isAsyncReactComponent = !0;F.render = function () {\\n  return this.props.children;\\n};var G = { current: null },\\n    H = Object.prototype.hasOwnProperty,\\n    I = { key: !0, ref: !0, __self: !0, __source: !0 };\\nfunction J(a, b, e) {\\n  var c,\\n      d = {},\\n      g = null,\\n      k = null;if (null != b) for (c in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\\n    H.call(b, c) && !I.hasOwnProperty(c) && (d[c] = b[c]);\\n  }var f = arguments.length - 2;if (1 === f) d.children = e;else if (1 < f) {\\n    for (var h = Array(f), l = 0; l < f; l++) {\\n      h[l] = arguments[l + 2];\\n    }d.children = h;\\n  }if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\\n    void 0 === d[c] && (d[c] = f[c]);\\n  }return { $$typeof: r, type: a, key: g, ref: k, props: d, _owner: G.current };\\n}function K(a) {\\n  return \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && null !== a && a.$$typeof === r;\\n}\\nfunction escape(a) {\\n  var b = { \"\\\\x3d\": \"\\\\x3d0\", \":\": \"\\\\x3d2\" };return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\\n    return b[a];\\n  });\\n}var L = /\\\\/+/g,\\n    M = [];function N(a, b, e, c) {\\n  if (M.length) {\\n    var d = M.pop();d.result = a;d.keyPrefix = b;d.func = e;d.context = c;d.count = 0;return d;\\n  }return { result: a, keyPrefix: b, func: e, context: c, count: 0 };\\n}function O(a) {\\n  a.result = null;a.keyPrefix = null;a.func = null;a.context = null;a.count = 0;10 > M.length && M.push(a);\\n}\\nfunction P(a, b, e, c) {\\n  var d = typeof a === \"undefined\" ? \"undefined\" : _typeof(a);if (\"undefined\" === d || \"boolean\" === d) a = null;var g = !1;if (null === a) g = !0;else switch (d) {case \"string\":case \"number\":\\n      g = !0;break;case \"object\":\\n      switch (a.$$typeof) {case r:case t:case u:case v:\\n          g = !0;}}if (g) return e(c, a, \"\" === b ? \".\" + Q(a, 0) : b), 1;g = 0;b = \"\" === b ? \".\" : b + \":\";if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {\\n    d = a[k];var f = b + Q(d, k);g += P(d, f, e, c);\\n  } else if (null === a || \"undefined\" === typeof a ? f = null : (f = x && a[x] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), k = 0; !(d = a.next()).done;) {\\n    d = d.value, f = b + Q(d, k++), g += P(d, f, e, c);\\n  } else \"object\" === d && (e = \"\" + a, y(\"31\", \"[object Object]\" === e ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : e, \"\"));return g;\\n}function Q(a, b) {\\n  return \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && null !== a && null != a.key ? escape(a.key) : b.toString(36);\\n}function R(a, b) {\\n  a.func.call(a.context, b, a.count++);\\n}\\nfunction S(a, b, e) {\\n  var c = a.result,\\n      d = a.keyPrefix;a = a.func.call(a.context, b, a.count++);Array.isArray(a) ? T(a, c, e, p.thatReturnsArgument) : null != a && (K(a) && (b = d + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(L, \"$\\\\x26/\") + \"/\") + e, a = { $$typeof: r, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner }), c.push(a));\\n}function T(a, b, e, c, d) {\\n  var g = \"\";null != e && (g = (\"\" + e).replace(L, \"$\\\\x26/\") + \"/\");b = N(b, g, c, d);null == a || P(a, \"\", S, b);O(b);\\n}\\nvar U = { Children: { map: function map(a, b, e) {\\n      if (null == a) return a;var c = [];T(a, c, null, b, e);return c;\\n    }, forEach: function forEach(a, b, e) {\\n      if (null == a) return a;b = N(null, null, b, e);null == a || P(a, \"\", R, b);O(b);\\n    }, count: function count(a) {\\n      return null == a ? 0 : P(a, \"\", p.thatReturnsNull, null);\\n    }, toArray: function toArray(a) {\\n      var b = [];T(a, b, null, p.thatReturnsArgument);return b;\\n    }, only: function only(a) {\\n      K(a) ? void 0 : y(\"143\");return a;\\n    } }, Component: A, PureComponent: B, unstable_AsyncComponent: E, Fragment: w, createElement: J, cloneElement: function cloneElement(a, b, e) {\\n    var c = m({}, a.props),\\n        d = a.key,\\n        g = a.ref,\\n        k = a._owner;if (null != b) {\\n      void 0 !== b.ref && (g = b.ref, k = G.current);void 0 !== b.key && (d = \"\" + b.key);if (a.type && a.type.defaultProps) var f = a.type.defaultProps;for (h in b) {\\n        H.call(b, h) && !I.hasOwnProperty(h) && (c[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);\\n      }\\n    }var h = arguments.length - 2;if (1 === h) c.children = e;else if (1 < h) {\\n      f = Array(h);for (var l = 0; l < h; l++) {\\n        f[l] = arguments[l + 2];\\n      }c.children = f;\\n    }return { $$typeof: r, type: a.type, key: d, ref: g, props: c, _owner: k };\\n  }, createFactory: function createFactory(a) {\\n    var b = J.bind(null, a);b.type = a;return b;\\n  },\\n  isValidElement: K, version: \"16.2.0\", __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: G, assign: m } },\\n    V = Object.freeze({ default: U }),\\n    W = V && U || V;module.exports = W[\"default\"] ? W[\"default\"] : W;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///20\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _react = __webpack_require__(/*! react */ 1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(/*! react-dom */ 19);\\n\\nvar _reactDom2 = _interopRequireDefault(_reactDom);\\n\\nvar _app = __webpack_require__(/*! ./components/app.jsx */ 9);\\n\\nvar _app2 = _interopRequireDefault(_app);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\n_reactDom2.default.render(_react2.default.createElement(_app2.default, null), document.getElementById('mount-point'));//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvaW5kZXguanM/MTk0MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFFQTs7Ozs7Ozs7QUFFQSxtQkFBUyxPQUNMLDZDQURKLE9BRUksU0FBUyxlQUFlIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XHJcblxyXG5pbXBvcnQgQXBwIGZyb20gJy4vY29tcG9uZW50cy9hcHAuanN4JztcclxuXHJcblJlYWN0RE9NLnJlbmRlcihcclxuICAgIDxBcHAvPixcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb3VudC1wb2ludCcpXHJcbik7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///21\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\n/*\\r\\n\\tMIT License http://www.opensource.org/licenses/mit-license.php\\r\\n\\tAuthor Tobias Koppers @sokra\\r\\n*/\\n\\nmodule.exports = function (updatedModules, renewedModules) {\\n\\tvar unacceptedModules = updatedModules.filter(function (moduleId) {\\n\\t\\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\\n\\t});\\n\\tvar log = __webpack_require__(/*! ./log */ 2);\\n\\n\\tif (unacceptedModules.length > 0) {\\n\\t\\tlog(\"warning\", \"[HMR] The following modules couldn\\'t be hot updated: (They would need a full reload!)\");\\n\\t\\tunacceptedModules.forEach(function (moduleId) {\\n\\t\\t\\tlog(\"warning\", \"[HMR]  - \" + moduleId);\\n\\t\\t});\\n\\t}\\n\\n\\tif (!renewedModules || renewedModules.length === 0) {\\n\\t\\tlog(\"info\", \"[HMR] Nothing hot updated.\");\\n\\t} else {\\n\\t\\tlog(\"info\", \"[HMR] Updated modules:\");\\n\\t\\trenewedModules.forEach(function (moduleId) {\\n\\t\\t\\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\\n\\t\\t\\t\\tvar parts = moduleId.split(\"!\");\\n\\t\\t\\t\\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\\n\\t\\t\\t\\tlog(\"info\", \"[HMR]  - \" + moduleId);\\n\\t\\t\\t\\tlog.groupEnd(\"info\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tlog(\"info\", \"[HMR]  - \" + moduleId);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tvar numberIds = renewedModules.every(function (moduleId) {\\n\\t\\t\\treturn typeof moduleId === \"number\";\\n\\t\\t});\\n\\t\\tif (numberIds) log(\"info\", \"[HMR] Consider using the NamedModulesPlugin for module names.\");\\n\\t}\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9sb2ctYXBwbHktcmVzdWx0LmpzP2U1MmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7QUFJQSxPQUFPLFVBQVUsVUFBUyxnQkFBZ0IsZ0JBQ3pDO0tBQUksbUNBQW1DLE9BQU8sVUFBUyxVQUN0RDtTQUFPLGtCQUFrQixlQUFlLFFBQVEsWUFDaEQ7QUFDRCxFQUh3QjtLQUdwQixNQUFNLG9CQUVWOztLQUFJLGtCQUFrQixTQUFTLEdBQzlCO01BQ0MsV0FHRDtvQkFBa0IsUUFBUSxVQUFTLFVBQ2xDO09BQUksV0FBVyxjQUNmO0FBQ0Q7QUFFRDs7S0FBSSxDQUFDLGtCQUFrQixlQUFlLFdBQVcsR0FDaEQ7TUFBSSxRQUNKO0FBRkQsUUFHQztNQUFJLFFBQ0o7aUJBQWUsUUFBUSxVQUFTLFVBQy9CO09BQUksT0FBTyxhQUFhLFlBQVksU0FBUyxRQUFRLFNBQVMsQ0FBQyxHQUM5RDtRQUFJLFFBQVEsU0FBUyxNQUNyQjtRQUFJLGVBQWUsUUFBUSxjQUFjLE1BQ3pDO1FBQUksUUFBUSxjQUNaO1FBQUksU0FDSjtBQUxELFVBTUM7UUFBSSxRQUFRLGNBQ1o7QUFDRDtBQUNEO01BQUksMkJBQTJCLE1BQU0sVUFBUyxVQUM3QztVQUFPLE9BQU8sYUFDZDtBQUNELEdBSGdCO01BR1osV0FDSCxJQUNDLFFBR0Y7QUFDRDtBQXZDRCIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXBkYXRlZE1vZHVsZXMsIHJlbmV3ZWRNb2R1bGVzKSB7XHJcblx0dmFyIHVuYWNjZXB0ZWRNb2R1bGVzID0gdXBkYXRlZE1vZHVsZXMuZmlsdGVyKGZ1bmN0aW9uKG1vZHVsZUlkKSB7XHJcblx0XHRyZXR1cm4gcmVuZXdlZE1vZHVsZXMgJiYgcmVuZXdlZE1vZHVsZXMuaW5kZXhPZihtb2R1bGVJZCkgPCAwO1xyXG5cdH0pO1xyXG5cdHZhciBsb2cgPSByZXF1aXJlKFwiLi9sb2dcIik7XHJcblxyXG5cdGlmICh1bmFjY2VwdGVkTW9kdWxlcy5sZW5ndGggPiAwKSB7XHJcblx0XHRsb2coXHJcblx0XHRcdFwid2FybmluZ1wiLFxyXG5cdFx0XHRcIltITVJdIFRoZSBmb2xsb3dpbmcgbW9kdWxlcyBjb3VsZG4ndCBiZSBob3QgdXBkYXRlZDogKFRoZXkgd291bGQgbmVlZCBhIGZ1bGwgcmVsb2FkISlcIlxyXG5cdFx0KTtcclxuXHRcdHVuYWNjZXB0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0bG9nKFwid2FybmluZ1wiLCBcIltITVJdICAtIFwiICsgbW9kdWxlSWQpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRpZiAoIXJlbmV3ZWRNb2R1bGVzIHx8IHJlbmV3ZWRNb2R1bGVzLmxlbmd0aCA9PT0gMCkge1xyXG5cdFx0bG9nKFwiaW5mb1wiLCBcIltITVJdIE5vdGhpbmcgaG90IHVwZGF0ZWQuXCIpO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRsb2coXCJpbmZvXCIsIFwiW0hNUl0gVXBkYXRlZCBtb2R1bGVzOlwiKTtcclxuXHRcdHJlbmV3ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0aWYgKHR5cGVvZiBtb2R1bGVJZCA9PT0gXCJzdHJpbmdcIiAmJiBtb2R1bGVJZC5pbmRleE9mKFwiIVwiKSAhPT0gLTEpIHtcclxuXHRcdFx0XHR2YXIgcGFydHMgPSBtb2R1bGVJZC5zcGxpdChcIiFcIik7XHJcblx0XHRcdFx0bG9nLmdyb3VwQ29sbGFwc2VkKFwiaW5mb1wiLCBcIltITVJdICAtIFwiICsgcGFydHMucG9wKCkpO1xyXG5cdFx0XHRcdGxvZyhcImluZm9cIiwgXCJbSE1SXSAgLSBcIiArIG1vZHVsZUlkKTtcclxuXHRcdFx0XHRsb2cuZ3JvdXBFbmQoXCJpbmZvXCIpO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGxvZyhcImluZm9cIiwgXCJbSE1SXSAgLSBcIiArIG1vZHVsZUlkKTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHR2YXIgbnVtYmVySWRzID0gcmVuZXdlZE1vZHVsZXMuZXZlcnkoZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0cmV0dXJuIHR5cGVvZiBtb2R1bGVJZCA9PT0gXCJudW1iZXJcIjtcclxuXHRcdH0pO1xyXG5cdFx0aWYgKG51bWJlcklkcylcclxuXHRcdFx0bG9nKFxyXG5cdFx0XHRcdFwiaW5mb1wiLFxyXG5cdFx0XHRcdFwiW0hNUl0gQ29uc2lkZXIgdXNpbmcgdGhlIE5hbWVkTW9kdWxlc1BsdWdpbiBmb3IgbW9kdWxlIG5hbWVzLlwiXHJcblx0XHRcdCk7XHJcblx0fVxyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///22\\n')},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\n/*\\r\\n\\tMIT License http://www.opensource.org/licenses/mit-license.php\\r\\n\\tAuthor Tobias Koppers @sokra\\r\\n*/\\n/*globals window __webpack_hash__ */\\n\\nif (true) {\\n\\tvar lastHash;\\n\\tvar upToDate = function upToDate() {\\n\\t\\treturn lastHash.indexOf(__webpack_require__.h()) >= 0;\\n\\t};\\n\\tvar log = __webpack_require__(/*! ./log */ 2);\\n\\tvar check = function check() {\\n\\t\\tmodule.hot.check(true).then(function (updatedModules) {\\n\\t\\t\\tif (!updatedModules) {\\n\\t\\t\\t\\tlog(\"warning\", \"[HMR] Cannot find update. Need to do a full reload!\");\\n\\t\\t\\t\\tlog(\"warning\", \"[HMR] (Probably because of restarting the webpack-dev-server)\");\\n\\t\\t\\t\\twindow.location.reload();\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!upToDate()) {\\n\\t\\t\\t\\tcheck();\\n\\t\\t\\t}\\n\\n\\t\\t\\t__webpack_require__(/*! ./log-apply-result */ 22)(updatedModules, updatedModules);\\n\\n\\t\\t\\tif (upToDate()) {\\n\\t\\t\\t\\tlog(\"info\", \"[HMR] App is up to date.\");\\n\\t\\t\\t}\\n\\t\\t}).catch(function (err) {\\n\\t\\t\\tvar status = module.hot.status();\\n\\t\\t\\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\\n\\t\\t\\t\\tlog(\"warning\", \"[HMR] Cannot apply update. Need to do a full reload!\");\\n\\t\\t\\t\\tlog(\"warning\", \"[HMR] \" + err.stack || err.message);\\n\\t\\t\\t\\twindow.location.reload();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tlog(\"warning\", \"[HMR] Update failed: \" + err.stack || err.message);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t};\\n\\tvar hotEmitter = __webpack_require__(/*! ./emitter */ 5);\\n\\thotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\\n\\t\\tlastHash = currentHash;\\n\\t\\tif (!upToDate() && module.hot.status() === \"idle\") {\\n\\t\\t\\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\\n\\t\\t\\tcheck();\\n\\t\\t}\\n\\t});\\n\\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\\n} else {}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9kZXYtc2VydmVyLmpzPzY4OTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUlBOztBQUNBLElBQUksSUFBTyxFQUNWO0tBQ0E7S0FBSSxXQUFXLFNBQVMsV0FDdkI7U0FBTyxTQUFTLFFBQVEsNEJBQ3hCO0FBQ0Q7S0FBSSxNQUFNLG9CQUNWO0tBQUksUUFBUSxTQUFTLFFBQ3BCO1NBQU8sSUFDTCxNQUFNLE1BQ04sS0FBSyxVQUFTLGdCQUNkO09BQUksQ0FBQyxnQkFDSjtRQUFJLFdBQ0o7UUFDQyxXQUdEO1dBQU8sU0FDUDtBQUNBO0FBRUQ7O09BQUksQ0FBQyxZQUNKO0FBQ0E7QUFFRDs7dUJBQVEsOEJBQXNCLGdCQUU5Qjs7T0FBSSxZQUNIO1FBQUksUUFDSjtBQUNEO0FBdEJGLEtBdUJFLE1BQU0sVUFBUyxLQUNmO09BQUksU0FBUyxPQUFPLElBQ3BCO09BQUksQ0FBQyxTQUFTLFFBQVEsUUFBUSxXQUFXLEdBQ3hDO1FBQ0MsV0FHRDtRQUFJLFdBQVcsV0FBVyxJQUFJLFNBQVMsSUFDdkM7V0FBTyxTQUNQO0FBUEQsVUFRQztRQUFJLFdBQVcsMEJBQTBCLElBQUksU0FBUyxJQUN0RDtBQUNEO0FBQ0Y7QUFDRDtLQUFJLGFBQWEsb0JBQ2pCO1lBQVcsR0FBRyxvQkFBb0IsVUFBUyxhQUMxQzthQUNBO01BQUksQ0FBQyxjQUFjLE9BQU8sSUFBSSxhQUFhLFFBQzFDO09BQUksUUFDSjtBQUNBO0FBQ0Q7QUFDRDtLQUFJLFFBQ0o7QUFyREQsT0FzREMiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG4vKmdsb2JhbHMgd2luZG93IF9fd2VicGFja19oYXNoX18gKi9cclxuaWYgKG1vZHVsZS5ob3QpIHtcclxuXHR2YXIgbGFzdEhhc2g7XHJcblx0dmFyIHVwVG9EYXRlID0gZnVuY3Rpb24gdXBUb0RhdGUoKSB7XHJcblx0XHRyZXR1cm4gbGFzdEhhc2guaW5kZXhPZihfX3dlYnBhY2tfaGFzaF9fKSA+PSAwO1xyXG5cdH07XHJcblx0dmFyIGxvZyA9IHJlcXVpcmUoXCIuL2xvZ1wiKTtcclxuXHR2YXIgY2hlY2sgPSBmdW5jdGlvbiBjaGVjaygpIHtcclxuXHRcdG1vZHVsZS5ob3RcclxuXHRcdFx0LmNoZWNrKHRydWUpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzKSB7XHJcblx0XHRcdFx0aWYgKCF1cGRhdGVkTW9kdWxlcykge1xyXG5cdFx0XHRcdFx0bG9nKFwid2FybmluZ1wiLCBcIltITVJdIENhbm5vdCBmaW5kIHVwZGF0ZS4gTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiKTtcclxuXHRcdFx0XHRcdGxvZyhcclxuXHRcdFx0XHRcdFx0XCJ3YXJuaW5nXCIsXHJcblx0XHRcdFx0XHRcdFwiW0hNUl0gKFByb2JhYmx5IGJlY2F1c2Ugb2YgcmVzdGFydGluZyB0aGUgd2VicGFjay1kZXYtc2VydmVyKVwiXHJcblx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKCF1cFRvRGF0ZSgpKSB7XHJcblx0XHRcdFx0XHRjaGVjaygpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmVxdWlyZShcIi4vbG9nLWFwcGx5LXJlc3VsdFwiKSh1cGRhdGVkTW9kdWxlcywgdXBkYXRlZE1vZHVsZXMpO1xyXG5cclxuXHRcdFx0XHRpZiAodXBUb0RhdGUoKSkge1xyXG5cdFx0XHRcdFx0bG9nKFwiaW5mb1wiLCBcIltITVJdIEFwcCBpcyB1cCB0byBkYXRlLlwiKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pXHJcblx0XHRcdC5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHR2YXIgc3RhdHVzID0gbW9kdWxlLmhvdC5zdGF0dXMoKTtcclxuXHRcdFx0XHRpZiAoW1wiYWJvcnRcIiwgXCJmYWlsXCJdLmluZGV4T2Yoc3RhdHVzKSA+PSAwKSB7XHJcblx0XHRcdFx0XHRsb2coXHJcblx0XHRcdFx0XHRcdFwid2FybmluZ1wiLFxyXG5cdFx0XHRcdFx0XHRcIltITVJdIENhbm5vdCBhcHBseSB1cGRhdGUuIE5lZWQgdG8gZG8gYSBmdWxsIHJlbG9hZCFcIlxyXG5cdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdGxvZyhcIndhcm5pbmdcIiwgXCJbSE1SXSBcIiArIGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSk7XHJcblx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGxvZyhcIndhcm5pbmdcIiwgXCJbSE1SXSBVcGRhdGUgZmFpbGVkOiBcIiArIGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHR9O1xyXG5cdHZhciBob3RFbWl0dGVyID0gcmVxdWlyZShcIi4vZW1pdHRlclwiKTtcclxuXHRob3RFbWl0dGVyLm9uKFwid2VicGFja0hvdFVwZGF0ZVwiLCBmdW5jdGlvbihjdXJyZW50SGFzaCkge1xyXG5cdFx0bGFzdEhhc2ggPSBjdXJyZW50SGFzaDtcclxuXHRcdGlmICghdXBUb0RhdGUoKSAmJiBtb2R1bGUuaG90LnN0YXR1cygpID09PSBcImlkbGVcIikge1xyXG5cdFx0XHRsb2coXCJpbmZvXCIsIFwiW0hNUl0gQ2hlY2tpbmcgZm9yIHVwZGF0ZXMgb24gdGhlIHNlcnZlci4uLlwiKTtcclxuXHRcdFx0Y2hlY2soKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHRsb2coXCJpbmZvXCIsIFwiW0hNUl0gV2FpdGluZyBmb3IgdXBkYXRlIHNpZ25hbCBmcm9tIFdEUy4uLlwiKTtcclxufSBlbHNlIHtcclxuXHR0aHJvdyBuZXcgRXJyb3IoXCJbSE1SXSBIb3QgTW9kdWxlIFJlcGxhY2VtZW50IGlzIGRpc2FibGVkLlwiKTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///23\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n};\\n\\n// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\nfunction EventEmitter() {\\n  this._events = this._events || {};\\n  this._maxListeners = this._maxListeners || undefined;\\n}\\nmodule.exports = EventEmitter;\\n\\n// Backwards-compat with node 0.10.x\\nEventEmitter.EventEmitter = EventEmitter;\\n\\nEventEmitter.prototype._events = undefined;\\nEventEmitter.prototype._maxListeners = undefined;\\n\\n// By default EventEmitters will print a warning if more than 10 listeners are\\n// added to it. This is a useful default which helps finding memory leaks.\\nEventEmitter.defaultMaxListeners = 10;\\n\\n// Obviously not all Emitters should be limited to 10. This function allows\\n// that to be increased. Set to zero for unlimited.\\nEventEmitter.prototype.setMaxListeners = function (n) {\\n  if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');\\n  this._maxListeners = n;\\n  return this;\\n};\\n\\nEventEmitter.prototype.emit = function (type) {\\n  var er, handler, len, args, i, listeners;\\n\\n  if (!this._events) this._events = {};\\n\\n  // If there is no 'error' event listener then throw.\\n  if (type === 'error') {\\n    if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {\\n      er = arguments[1];\\n      if (er instanceof Error) {\\n        throw er; // Unhandled 'error' event\\n      } else {\\n        // At least give some kind of context to the user\\n        var err = new Error('Uncaught, unspecified \\\"error\\\" event. (' + er + ')');\\n        err.context = er;\\n        throw err;\\n      }\\n    }\\n  }\\n\\n  handler = this._events[type];\\n\\n  if (isUndefined(handler)) return false;\\n\\n  if (isFunction(handler)) {\\n    switch (arguments.length) {\\n      // fast cases\\n      case 1:\\n        handler.call(this);\\n        break;\\n      case 2:\\n        handler.call(this, arguments[1]);\\n        break;\\n      case 3:\\n        handler.call(this, arguments[1], arguments[2]);\\n        break;\\n      // slower\\n      default:\\n        args = Array.prototype.slice.call(arguments, 1);\\n        handler.apply(this, args);\\n    }\\n  } else if (isObject(handler)) {\\n    args = Array.prototype.slice.call(arguments, 1);\\n    listeners = handler.slice();\\n    len = listeners.length;\\n    for (i = 0; i < len; i++) {\\n      listeners[i].apply(this, args);\\n    }\\n  }\\n\\n  return true;\\n};\\n\\nEventEmitter.prototype.addListener = function (type, listener) {\\n  var m;\\n\\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\\n\\n  if (!this._events) this._events = {};\\n\\n  // To avoid recursion in the case that type === \\\"newListener\\\"! Before\\n  // adding it to the listeners, first emit \\\"newListener\\\".\\n  if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);\\n\\n  if (!this._events[type])\\n    // Optimize the case of one listener. Don't need the extra array object.\\n    this._events[type] = listener;else if (isObject(this._events[type]))\\n    // If we've already got an array, just append.\\n    this._events[type].push(listener);else\\n    // Adding the second element, need to change to array.\\n    this._events[type] = [this._events[type], listener];\\n\\n  // Check for listener leak\\n  if (isObject(this._events[type]) && !this._events[type].warned) {\\n    if (!isUndefined(this._maxListeners)) {\\n      m = this._maxListeners;\\n    } else {\\n      m = EventEmitter.defaultMaxListeners;\\n    }\\n\\n    if (m && m > 0 && this._events[type].length > m) {\\n      this._events[type].warned = true;\\n      console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);\\n      if (typeof console.trace === 'function') {\\n        // not supported in IE 10\\n        console.trace();\\n      }\\n    }\\n  }\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\\n\\nEventEmitter.prototype.once = function (type, listener) {\\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\\n\\n  var fired = false;\\n\\n  function g() {\\n    this.removeListener(type, g);\\n\\n    if (!fired) {\\n      fired = true;\\n      listener.apply(this, arguments);\\n    }\\n  }\\n\\n  g.listener = listener;\\n  this.on(type, g);\\n\\n  return this;\\n};\\n\\n// emits a 'removeListener' event iff the listener was removed\\nEventEmitter.prototype.removeListener = function (type, listener) {\\n  var list, position, length, i;\\n\\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\\n\\n  if (!this._events || !this._events[type]) return this;\\n\\n  list = this._events[type];\\n  length = list.length;\\n  position = -1;\\n\\n  if (list === listener || isFunction(list.listener) && list.listener === listener) {\\n    delete this._events[type];\\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\\n  } else if (isObject(list)) {\\n    for (i = length; i-- > 0;) {\\n      if (list[i] === listener || list[i].listener && list[i].listener === listener) {\\n        position = i;\\n        break;\\n      }\\n    }\\n\\n    if (position < 0) return this;\\n\\n    if (list.length === 1) {\\n      list.length = 0;\\n      delete this._events[type];\\n    } else {\\n      list.splice(position, 1);\\n    }\\n\\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\\n  }\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.removeAllListeners = function (type) {\\n  var key, listeners;\\n\\n  if (!this._events) return this;\\n\\n  // not listening for removeListener, no need to emit\\n  if (!this._events.removeListener) {\\n    if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];\\n    return this;\\n  }\\n\\n  // emit removeListener for all listeners on all events\\n  if (arguments.length === 0) {\\n    for (key in this._events) {\\n      if (key === 'removeListener') continue;\\n      this.removeAllListeners(key);\\n    }\\n    this.removeAllListeners('removeListener');\\n    this._events = {};\\n    return this;\\n  }\\n\\n  listeners = this._events[type];\\n\\n  if (isFunction(listeners)) {\\n    this.removeListener(type, listeners);\\n  } else if (listeners) {\\n    // LIFO order\\n    while (listeners.length) {\\n      this.removeListener(type, listeners[listeners.length - 1]);\\n    }\\n  }\\n  delete this._events[type];\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.listeners = function (type) {\\n  var ret;\\n  if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();\\n  return ret;\\n};\\n\\nEventEmitter.prototype.listenerCount = function (type) {\\n  if (this._events) {\\n    var evlistener = this._events[type];\\n\\n    if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;\\n  }\\n  return 0;\\n};\\n\\nEventEmitter.listenerCount = function (emitter, type) {\\n  return emitter.listenerCount(type);\\n};\\n\\nfunction isFunction(arg) {\\n  return typeof arg === 'function';\\n}\\n\\nfunction isNumber(arg) {\\n  return typeof arg === 'number';\\n}\\n\\nfunction isObject(arg) {\\n  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;\\n}\\n\\nfunction isUndefined(arg) {\\n  return arg === void 0;\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///24\\n\")},function(module,exports,__webpack_require__){eval(\"var map = {\\n\\t\\\"./log\\\": 2\\n};\\n\\n\\nfunction webpackContext(req) {\\n\\tvar id = webpackContextResolve(req);\\n\\tvar module = __webpack_require__(id);\\n\\treturn module;\\n}\\nfunction webpackContextResolve(req) {\\n\\tvar id = map[req];\\n\\tif(!(id + 1)) { // check for number or string\\n\\t\\tvar e = new Error('Cannot find module \\\"' + req + '\\\".');\\n\\t\\te.code = 'MODULE_NOT_FOUND';\\n\\t\\tthrow e;\\n\\t}\\n\\treturn id;\\n}\\nwebpackContext.keys = function webpackContextKeys() {\\n\\treturn Object.keys(map);\\n};\\nwebpackContext.resolve = webpackContextResolve;\\nmodule.exports = webpackContext;\\nwebpackContext.id = 25;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdCBzeW5jIG5vbnJlY3Vyc2l2ZSBeXFwuXFwvbG9nJD8xYzNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1hcCA9IHtcblx0XCIuL2xvZ1wiOiAyXG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xuXHRyZXR1cm4gbW9kdWxlO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHR2YXIgaWQgPSBtYXBbcmVxXTtcblx0aWYoIShpZCArIDEpKSB7IC8vIGNoZWNrIGZvciBudW1iZXIgb3Igc3RyaW5nXG5cdFx0dmFyIGUgPSBuZXcgRXJyb3IoJ0Nhbm5vdCBmaW5kIG1vZHVsZSBcIicgKyByZXEgKyAnXCIuJyk7XG5cdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdHRocm93IGU7XG5cdH1cblx0cmV0dXJuIGlkO1xufVxud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IDI1OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///25\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\\n\\nvar alphaIndex = {};\\nvar numIndex = {};\\n\\nvar i = 0;\\nvar length = HTML_ALPHA.length;\\nwhile (i < length) {\\n    var a = HTML_ALPHA[i];\\n    var c = HTML_CODES[i];\\n    alphaIndex[a] = String.fromCharCode(c);\\n    numIndex[c] = a;\\n    i++;\\n}\\n\\n/**\\n * @constructor\\n */\\nfunction Html4Entities() {}\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.prototype.decode = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    return str.replace(/&(#?[\\\\w\\\\d]+);?/g, function (s, entity) {\\n        var chr;\\n        if (entity.charAt(0) === \\\"#\\\") {\\n            var code = entity.charAt(1).toLowerCase() === 'x' ? parseInt(entity.substr(2), 16) : parseInt(entity.substr(1));\\n\\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\\n                chr = String.fromCharCode(code);\\n            }\\n        } else {\\n            chr = alphaIndex[entity];\\n        }\\n        return chr || s;\\n    });\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.decode = function (str) {\\n    return new Html4Entities().decode(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.prototype.encode = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLength = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLength) {\\n        var alpha = numIndex[str.charCodeAt(i)];\\n        result += alpha ? \\\"&\\\" + alpha + \\\";\\\" : str.charAt(i);\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.encode = function (str) {\\n    return new Html4Entities().encode(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.prototype.encodeNonUTF = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLength = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLength) {\\n        var cc = str.charCodeAt(i);\\n        var alpha = numIndex[cc];\\n        if (alpha) {\\n            result += \\\"&\\\" + alpha + \\\";\\\";\\n        } else if (cc < 32 || cc > 126) {\\n            result += \\\"&#\\\" + cc + \\\";\\\";\\n        } else {\\n            result += str.charAt(i);\\n        }\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.encodeNonUTF = function (str) {\\n    return new Html4Entities().encodeNonUTF(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.prototype.encodeNonASCII = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLength = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLength) {\\n        var c = str.charCodeAt(i);\\n        if (c <= 255) {\\n            result += str[i++];\\n            continue;\\n        }\\n        result += '&#' + c + ';';\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nHtml4Entities.encodeNonASCII = function (str) {\\n    return new Html4Entities().encodeNonASCII(str);\\n};\\n\\nmodule.exports = Html4Entities;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///26\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar ALPHA_INDEX = {\\n    '&lt': '<',\\n    '&gt': '>',\\n    '&quot': '\\\"',\\n    '&apos': '\\\\'',\\n    '&amp': '&',\\n    '&lt;': '<',\\n    '&gt;': '>',\\n    '&quot;': '\\\"',\\n    '&apos;': '\\\\'',\\n    '&amp;': '&'\\n};\\n\\nvar CHAR_INDEX = {\\n    60: 'lt',\\n    62: 'gt',\\n    34: 'quot',\\n    39: 'apos',\\n    38: 'amp'\\n};\\n\\nvar CHAR_S_INDEX = {\\n    '<': '&lt;',\\n    '>': '&gt;',\\n    '\\\"': '&quot;',\\n    '\\\\'': '&apos;',\\n    '&': '&amp;'\\n};\\n\\n/**\\n * @constructor\\n */\\nfunction XmlEntities() {}\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.prototype.encode = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    return str.replace(/<|>|\\\"|'|&/g, function (s) {\\n        return CHAR_S_INDEX[s];\\n    });\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.encode = function (str) {\\n    return new XmlEntities().encode(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.prototype.decode = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function (s) {\\n        if (s.charAt(1) === '#') {\\n            var code = s.charAt(2).toLowerCase() === 'x' ? parseInt(s.substr(3), 16) : parseInt(s.substr(2));\\n\\n            if (isNaN(code) || code < -32768 || code > 65535) {\\n                return '';\\n            }\\n            return String.fromCharCode(code);\\n        }\\n        return ALPHA_INDEX[s] || s;\\n    });\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.decode = function (str) {\\n    return new XmlEntities().decode(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.prototype.encodeNonUTF = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLength = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLength) {\\n        var c = str.charCodeAt(i);\\n        var alpha = CHAR_INDEX[c];\\n        if (alpha) {\\n            result += \\\"&\\\" + alpha + \\\";\\\";\\n            i++;\\n            continue;\\n        }\\n        if (c < 32 || c > 126) {\\n            result += '&#' + c + ';';\\n        } else {\\n            result += str.charAt(i);\\n        }\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.encodeNonUTF = function (str) {\\n    return new XmlEntities().encodeNonUTF(str);\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.prototype.encodeNonASCII = function (str) {\\n    if (!str || !str.length) {\\n        return '';\\n    }\\n    var strLenght = str.length;\\n    var result = '';\\n    var i = 0;\\n    while (i < strLenght) {\\n        var c = str.charCodeAt(i);\\n        if (c <= 255) {\\n            result += str[i++];\\n            continue;\\n        }\\n        result += '&#' + c + ';';\\n        i++;\\n    }\\n    return result;\\n};\\n\\n/**\\n * @param {String} str\\n * @returns {String}\\n */\\nXmlEntities.encodeNonASCII = function (str) {\\n    return new XmlEntities().encodeNonASCII(str);\\n};\\n\\nmodule.exports = XmlEntities;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIveG1sLWVudGl0aWVzLmpzPzUwMjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJO1dBRUE7V0FDQTthQUNBO2FBQ0E7WUFDQTtZQUNBO1lBQ0E7Y0FDQTtjQUNBO2FBQVM7QUFUVDs7QUFZSixJQUFJO1FBRUE7UUFDQTtRQUNBO1FBQ0E7UUFBSTtBQUpKOztBQU9KLElBQUk7U0FFQTtTQUNBO1NBQ0E7VUFDQTtTQUFLO0FBSkw7O0FBT0o7OztBQUdBLFNBQVMsY0FBZ0I7O0FBRXpCOzs7O0FBSUEsWUFBWSxVQUFVLFNBQVMsVUFBUyxLQUNwQztRQUFJLENBQUMsT0FBTyxDQUFDLElBQUksUUFDYjtlQUNIO0FBQ0Q7ZUFBVyxRQUFRLGNBQWMsVUFBUyxHQUN0QztlQUFPLGFBQ1Y7QUFDSixLQUhVO0FBSlg7O0FBU0E7Ozs7QUFJQyxZQUFZLFNBQVMsVUFBUyxLQUMzQjtXQUFPLElBQUksY0FBYyxPQUMzQjtBQUZEOztBQUlEOzs7O0FBSUEsWUFBWSxVQUFVLFNBQVMsVUFBUyxLQUNwQztRQUFJLENBQUMsT0FBTyxDQUFDLElBQUksUUFDYjtlQUNIO0FBQ0Q7ZUFBVyxRQUFRLHNCQUFzQixVQUFTLEdBQzlDO1lBQUksRUFBRSxPQUFPLE9BQU8sS0FDaEI7Z0JBQUksT0FBTyxFQUFFLE9BQU8sR0FBRyxrQkFBa0IsTUFDckMsU0FBUyxFQUFFLE9BQU8sSUFBSSxNQUN0QixTQUFTLEVBQUUsT0FFZjs7Z0JBQUksTUFBTSxTQUFTLE9BQU8sQ0FBQyxTQUFTLE9BQU8sT0FDdkM7dUJBQ0g7QUFDRDttQkFBTyxPQUFPLGFBQ2pCO0FBQ0Q7ZUFBTyxZQUFZLE1BQ3RCO0FBQ0osS0FiVTtBQUpYOztBQW1CQTs7OztBQUlDLFlBQVksU0FBUyxVQUFTLEtBQzNCO1dBQU8sSUFBSSxjQUFjLE9BQzNCO0FBRkQ7O0FBSUQ7Ozs7QUFJQSxZQUFZLFVBQVUsZUFBZSxVQUFTLEtBQzFDO1FBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxRQUNiO2VBQ0g7QUFDRDtRQUFJLFlBQVksSUFDaEI7UUFBSSxTQUNKO1FBQUksSUFDSjtXQUFPLElBQUksV0FDUDtZQUFJLElBQUksSUFBSSxXQUNaO1lBQUksUUFBUSxXQUNaO1lBQUksT0FDQTtzQkFBVSxNQUFNLFFBQ2hCO0FBQ0E7QUFDSDtBQUNEO1lBQUksSUFBSSxNQUFNLElBQUksS0FDZDtzQkFBVSxPQUFPLElBQ3BCO0FBRkQsZUFHSTtzQkFBVSxJQUFJLE9BQ2pCO0FBQ0Q7QUFDSDtBQUNEO1dBQ0g7QUF2QkQ7O0FBeUJBOzs7O0FBSUMsWUFBWSxlQUFlLFVBQVMsS0FDakM7V0FBTyxJQUFJLGNBQWMsYUFDM0I7QUFGRDs7QUFJRDs7OztBQUlBLFlBQVksVUFBVSxpQkFBaUIsVUFBUyxLQUM1QztRQUFJLENBQUMsT0FBTyxDQUFDLElBQUksUUFDYjtlQUNIO0FBQ0Q7UUFBSSxZQUFZLElBQ2hCO1FBQUksU0FDSjtRQUFJLElBQ0o7V0FBTyxJQUFJLFdBQ1A7WUFBSSxJQUFJLElBQUksV0FDWjtZQUFJLEtBQUssS0FDTDtzQkFBVSxJQUNWO0FBQ0g7QUFDRDtrQkFBVSxPQUFPLElBQ2pCO0FBQ0g7QUFDRDtXQUNIO0FBakJEOztBQW1CQTs7OztBQUlDLFlBQVksaUJBQWlCLFVBQVMsS0FDbkM7V0FBTyxJQUFJLGNBQWMsZUFDM0I7QUFGRDs7QUFJRCxPQUFPLFVBQVUiLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQUxQSEFfSU5ERVggPSB7XG4gICAgJyZsdCc6ICc8JyxcbiAgICAnJmd0JzogJz4nLFxuICAgICcmcXVvdCc6ICdcIicsXG4gICAgJyZhcG9zJzogJ1xcJycsXG4gICAgJyZhbXAnOiAnJicsXG4gICAgJyZsdDsnOiAnPCcsXG4gICAgJyZndDsnOiAnPicsXG4gICAgJyZxdW90Oyc6ICdcIicsXG4gICAgJyZhcG9zOyc6ICdcXCcnLFxuICAgICcmYW1wOyc6ICcmJ1xufTtcblxudmFyIENIQVJfSU5ERVggPSB7XG4gICAgNjA6ICdsdCcsXG4gICAgNjI6ICdndCcsXG4gICAgMzQ6ICdxdW90JyxcbiAgICAzOTogJ2Fwb3MnLFxuICAgIDM4OiAnYW1wJ1xufTtcblxudmFyIENIQVJfU19JTkRFWCA9IHtcbiAgICAnPCc6ICcmbHQ7JyxcbiAgICAnPic6ICcmZ3Q7JyxcbiAgICAnXCInOiAnJnF1b3Q7JyxcbiAgICAnXFwnJzogJyZhcG9zOycsXG4gICAgJyYnOiAnJmFtcDsnXG59O1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBYbWxFbnRpdGllcygpIHt9XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuWG1sRW50aXRpZXMucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC88fD58XCJ8J3wmL2csIGZ1bmN0aW9uKHMpIHtcbiAgICAgICAgcmV0dXJuIENIQVJfU19JTkRFWFtzXTtcbiAgICB9KTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuIFhtbEVudGl0aWVzLmVuY29kZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiBuZXcgWG1sRW50aXRpZXMoKS5lbmNvZGUoc3RyKTtcbiB9O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cblhtbEVudGl0aWVzLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoIXN0ciB8fCAhc3RyLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHJldHVybiBzdHIucmVwbGFjZSgvJiM/WzAtOWEtekEtWl0rOz8vZywgZnVuY3Rpb24ocykge1xuICAgICAgICBpZiAocy5jaGFyQXQoMSkgPT09ICcjJykge1xuICAgICAgICAgICAgdmFyIGNvZGUgPSBzLmNoYXJBdCgyKS50b0xvd2VyQ2FzZSgpID09PSAneCcgP1xuICAgICAgICAgICAgICAgIHBhcnNlSW50KHMuc3Vic3RyKDMpLCAxNikgOlxuICAgICAgICAgICAgICAgIHBhcnNlSW50KHMuc3Vic3RyKDIpKTtcblxuICAgICAgICAgICAgaWYgKGlzTmFOKGNvZGUpIHx8IGNvZGUgPCAtMzI3NjggfHwgY29kZSA+IDY1NTM1KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEFMUEhBX0lOREVYW3NdIHx8IHM7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbiBYbWxFbnRpdGllcy5kZWNvZGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gbmV3IFhtbEVudGl0aWVzKCkuZGVjb2RlKHN0cik7XG4gfTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG5YbWxFbnRpdGllcy5wcm90b3R5cGUuZW5jb2RlTm9uVVRGID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICB2YXIgc3RyTGVuZ3RoID0gc3RyLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgc3RyTGVuZ3RoKSB7XG4gICAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIHZhciBhbHBoYSA9IENIQVJfSU5ERVhbY107XG4gICAgICAgIGlmIChhbHBoYSkge1xuICAgICAgICAgICAgcmVzdWx0ICs9IFwiJlwiICsgYWxwaGEgKyBcIjtcIjtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjIDwgMzIgfHwgYyA+IDEyNikge1xuICAgICAgICAgICAgcmVzdWx0ICs9ICcmIycgKyBjICsgJzsnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ICs9IHN0ci5jaGFyQXQoaSk7XG4gICAgICAgIH1cbiAgICAgICAgaSsrO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG4gWG1sRW50aXRpZXMuZW5jb2RlTm9uVVRGID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIG5ldyBYbWxFbnRpdGllcygpLmVuY29kZU5vblVURihzdHIpO1xuIH07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuWG1sRW50aXRpZXMucHJvdG90eXBlLmVuY29kZU5vbkFTQ0lJID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICB2YXIgc3RyTGVuZ2h0ID0gc3RyLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgc3RyTGVuZ2h0KSB7XG4gICAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjIDw9IDI1NSkge1xuICAgICAgICAgICAgcmVzdWx0ICs9IHN0cltpKytdO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ICs9ICcmIycgKyBjICsgJzsnO1xuICAgICAgICBpKys7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbiBYbWxFbnRpdGllcy5lbmNvZGVOb25BU0NJSSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiBuZXcgWG1sRW50aXRpZXMoKS5lbmNvZGVOb25BU0NJSShzdHIpO1xuIH07XG5cbm1vZHVsZS5leHBvcnRzID0gWG1sRW50aXRpZXM7XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///27\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nmodule.exports = {\\n  XmlEntities: __webpack_require__(/*! ./lib/xml-entities.js */ 27),\\n  Html4Entities: __webpack_require__(/*! ./lib/html4-entities.js */ 26),\\n  Html5Entities: __webpack_require__(/*! ./lib/html5-entities.js */ 6),\\n  AllHtmlEntities: __webpack_require__(/*! ./lib/html5-entities.js */ 6)\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9pbmRleC5qcz84MmM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTztlQUNRLG9CQUNiO2lCQUFlLG9CQUNmO2lCQUFlLG9CQUNmO21CQUFpQixvQkFBUTtBQUh6QiIsImZpbGUiOiIyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICBYbWxFbnRpdGllczogcmVxdWlyZSgnLi9saWIveG1sLWVudGl0aWVzLmpzJyksXG4gIEh0bWw0RW50aXRpZXM6IHJlcXVpcmUoJy4vbGliL2h0bWw0LWVudGl0aWVzLmpzJyksXG4gIEh0bWw1RW50aXRpZXM6IHJlcXVpcmUoJy4vbGliL2h0bWw1LWVudGl0aWVzLmpzJyksXG4gIEFsbEh0bWxFbnRpdGllczogcmVxdWlyZSgnLi9saWIvaHRtbDUtZW50aXRpZXMuanMnKVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///28\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n};\\n\\nmodule.exports = ansiHTML;\\n\\n// Reference to https://github.com/sindresorhus/ansi-regex\\nvar _regANSI = /(?:(?:\\\\u001b\\\\[)|\\\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\\\u001b[A-M]/;\\n\\nvar _defColors = {\\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\\n  black: '000',\\n  red: 'ff0000',\\n  green: '209805',\\n  yellow: 'e8bf03',\\n  blue: '0000ff',\\n  magenta: 'ff00ff',\\n  cyan: '00ffee',\\n  lightgrey: 'f0f0f0',\\n  darkgrey: '888'\\n};\\nvar _styles = {\\n  30: 'black',\\n  31: 'red',\\n  32: 'green',\\n  33: 'yellow',\\n  34: 'blue',\\n  35: 'magenta',\\n  36: 'cyan',\\n  37: 'lightgrey'\\n};\\nvar _openTags = {\\n  '1': 'font-weight:bold', // bold\\n  '2': 'opacity:0.5', // dim\\n  '3': '<i>', // italic\\n  '4': '<u>', // underscore\\n  '8': 'display:none', // hidden\\n  '9': '<del>' // delete\\n};\\nvar _closeTags = {\\n  '23': '</i>', // reset italic\\n  '24': '</u>', // reset underscore\\n  '29': '</del>' // reset delete\\n};[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\\n  _closeTags[n] = '</span>';\\n});\\n\\n/**\\n * Converts text with ANSI color codes to HTML markup.\\n * @param {String} text\\n * @returns {*}\\n */\\nfunction ansiHTML(text) {\\n  // Returns the text if the string has no ANSI escape code.\\n  if (!_regANSI.test(text)) {\\n    return text;\\n  }\\n\\n  // Cache opened sequence.\\n  var ansiCodes = [];\\n  // Replace with markup.\\n  var ret = text.replace(/\\\\033\\\\[(\\\\d+)*m/g, function (match, seq) {\\n    var ot = _openTags[seq];\\n    if (ot) {\\n      // If current sequence has been opened, close it.\\n      if (!!~ansiCodes.indexOf(seq)) {\\n        // eslint-disable-line no-extra-boolean-cast\\n        ansiCodes.pop();\\n        return '</span>';\\n      }\\n      // Open tag.\\n      ansiCodes.push(seq);\\n      return ot[0] === '<' ? ot : '<span style=\\\"' + ot + ';\\\">';\\n    }\\n\\n    var ct = _closeTags[seq];\\n    if (ct) {\\n      // Pop sequence\\n      ansiCodes.pop();\\n      return ct;\\n    }\\n    return '';\\n  });\\n\\n  // Make sure tags are closed.\\n  var l = ansiCodes.length;l > 0 && (ret += Array(l + 1).join('</span>'));\\n\\n  return ret;\\n}\\n\\n/**\\n * Customize colors.\\n * @param {Object} colors reference to _defColors\\n */\\nansiHTML.setColors = function (colors) {\\n  if ((typeof colors === 'undefined' ? 'undefined' : _typeof(colors)) !== 'object') {\\n    throw new Error('`colors` parameter must be an Object.');\\n  }\\n\\n  var _finalColors = {};\\n  for (var key in _defColors) {\\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null;\\n    if (!hex) {\\n      _finalColors[key] = _defColors[key];\\n      continue;\\n    }\\n    if ('reset' === key) {\\n      if (typeof hex === 'string') {\\n        hex = [hex];\\n      }\\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\\n        return typeof h !== 'string';\\n      })) {\\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');\\n      }\\n      var defHexColor = _defColors[key];\\n      if (!hex[0]) {\\n        hex[0] = defHexColor[0];\\n      }\\n      if (hex.length === 1 || !hex[1]) {\\n        hex = [hex[0]];\\n        hex.push(defHexColor[1]);\\n      }\\n\\n      hex = hex.slice(0, 2);\\n    } else if (typeof hex !== 'string') {\\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');\\n    }\\n    _finalColors[key] = hex;\\n  }\\n  _setTags(_finalColors);\\n};\\n\\n/**\\n * Reset colors.\\n */\\nansiHTML.reset = function () {\\n  _setTags(_defColors);\\n};\\n\\n/**\\n * Expose tags, including open and close.\\n * @type {Object}\\n */\\nansiHTML.tags = {};\\n\\nif (Object.defineProperty) {\\n  Object.defineProperty(ansiHTML.tags, 'open', {\\n    get: function get() {\\n      return _openTags;\\n    }\\n  });\\n  Object.defineProperty(ansiHTML.tags, 'close', {\\n    get: function get() {\\n      return _closeTags;\\n    }\\n  });\\n} else {\\n  ansiHTML.tags.open = _openTags;\\n  ansiHTML.tags.close = _closeTags;\\n}\\n\\nfunction _setTags(colors) {\\n  // reset all\\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];\\n  // inverse\\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];\\n  // dark grey\\n  _openTags['90'] = 'color:#' + colors.darkgrey;\\n\\n  for (var code in _styles) {\\n    var color = _styles[code];\\n    var oriColor = colors[color] || '000';\\n    _openTags[code] = 'color:#' + oriColor;\\n    code = parseInt(code);\\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor;\\n  }\\n}\\n\\nansiHTML.reset();//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///29\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\n// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\\n// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\\n\\nvar ansiHTML = __webpack_require__(/*! ansi-html */ 29);\\nvar Entities = __webpack_require__(/*! html-entities */ 28).AllHtmlEntities;\\n\\nvar entities = new Entities();\\n\\nvar colors = {\\n  reset: ['transparent', 'transparent'],\\n  black: '181818',\\n  red: 'E36049',\\n  green: 'B3CB74',\\n  yellow: 'FFD080',\\n  blue: '7CAFC2',\\n  magenta: '7FACCA',\\n  cyan: 'C3C2EF',\\n  lightgrey: 'EBE7E3',\\n  darkgrey: '6D7891'\\n};\\nansiHTML.setColors(colors);\\n\\nfunction createOverlayIframe(onIframeLoad) {\\n  var iframe = document.createElement('iframe');\\n  iframe.id = 'webpack-dev-server-client-overlay';\\n  iframe.src = 'about:blank';\\n  iframe.style.position = 'fixed';\\n  iframe.style.left = 0;\\n  iframe.style.top = 0;\\n  iframe.style.right = 0;\\n  iframe.style.bottom = 0;\\n  iframe.style.width = '100vw';\\n  iframe.style.height = '100vh';\\n  iframe.style.border = 'none';\\n  iframe.style.zIndex = 9999999999;\\n  iframe.onload = onIframeLoad;\\n  return iframe;\\n}\\n\\nfunction addOverlayDivTo(iframe) {\\n  var div = iframe.contentDocument.createElement('div');\\n  div.id = 'webpack-dev-server-client-overlay-div';\\n  div.style.position = 'fixed';\\n  div.style.boxSizing = 'border-box';\\n  div.style.left = 0;\\n  div.style.top = 0;\\n  div.style.right = 0;\\n  div.style.bottom = 0;\\n  div.style.width = '100vw';\\n  div.style.height = '100vh';\\n  div.style.backgroundColor = 'rgba(0, 0, 0, 0.85)';\\n  div.style.color = '#E8E8E8';\\n  div.style.fontFamily = 'Menlo, Consolas, monospace';\\n  div.style.fontSize = 'large';\\n  div.style.padding = '2rem';\\n  div.style.lineHeight = '1.2';\\n  div.style.whiteSpace = 'pre-wrap';\\n  div.style.overflow = 'auto';\\n  iframe.contentDocument.body.appendChild(div);\\n  return div;\\n}\\n\\nvar overlayIframe = null;\\nvar overlayDiv = null;\\nvar lastOnOverlayDivReady = null;\\n\\nfunction ensureOverlayDivExists(onOverlayDivReady) {\\n  if (overlayDiv) {\\n    // Everything is ready, call the callback right away.\\n    onOverlayDivReady(overlayDiv);\\n    return;\\n  }\\n\\n  // Creating an iframe may be asynchronous so we'll schedule the callback.\\n  // In case of multiple calls, last callback wins.\\n  lastOnOverlayDivReady = onOverlayDivReady;\\n\\n  if (overlayIframe) {\\n    // We're already creating it.\\n    return;\\n  }\\n\\n  // Create iframe and, when it is ready, a div inside it.\\n  overlayIframe = createOverlayIframe(function () {\\n    overlayDiv = addOverlayDivTo(overlayIframe);\\n    // Now we can talk!\\n    lastOnOverlayDivReady(overlayDiv);\\n  });\\n\\n  // Zalgo alert: onIframeLoad() will be called either synchronously\\n  // or asynchronously depending on the browser.\\n  // We delay adding it so `overlayIframe` is set when `onIframeLoad` fires.\\n  document.body.appendChild(overlayIframe);\\n}\\n\\nfunction showMessageOverlay(message) {\\n  ensureOverlayDivExists(function (div) {\\n    // Make it look similar to our terminal.\\n    div.innerHTML = '<span style=\\\"color: #' + colors.red + '\\\">Failed to compile.</span><br><br>' + ansiHTML(entities.encode(message));\\n  });\\n}\\n\\nfunction destroyErrorOverlay() {\\n  if (!overlayDiv) {\\n    // It is not there in the first place.\\n    return;\\n  }\\n\\n  // Clean up and reset internal state.\\n  document.body.removeChild(overlayIframe);\\n  overlayDiv = null;\\n  overlayIframe = null;\\n  lastOnOverlayDivReady = null;\\n}\\n\\n// Successful compilation.\\nexports.clear = function handleSuccess() {\\n  destroyErrorOverlay();\\n};\\n\\n// Compilation with errors (e.g. syntax error or missing modules).\\nexports.showMessage = function handleMessage(messages) {\\n  showMessageOverlay(messages[0]);\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50L292ZXJsYXkuanM/MmFjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBOztBQUVBLElBQUksV0FBVyxvQkFBUTtBQUN2QixJQUFJLFdBQVcsb0JBQVEseUJBQWlCOztBQUV4QyxJQUFJLFdBQVcsSUFBSTs7QUFFbkIsSUFBSTtTQUNLLENBQUMsZUFDUjtTQUNBO09BQ0E7U0FDQTtVQUNBO1FBQ0E7V0FDQTtRQUNBO2FBQ0E7WUFBVTtBQVRWO0FBV0YsU0FBUyxVQUFVOztBQUVuQixTQUFTLG9CQUFvQixjQUMzQjtNQUFJLFNBQVMsU0FBUyxjQUN0QjtTQUFPLEtBQ1A7U0FBTyxNQUNQO1NBQU8sTUFBTSxXQUNiO1NBQU8sTUFBTSxPQUNiO1NBQU8sTUFBTSxNQUNiO1NBQU8sTUFBTSxRQUNiO1NBQU8sTUFBTSxTQUNiO1NBQU8sTUFBTSxRQUNiO1NBQU8sTUFBTSxTQUNiO1NBQU8sTUFBTSxTQUNiO1NBQU8sTUFBTSxTQUNiO1NBQU8sU0FDUDtTQUNEOzs7QUFFRCxTQUFTLGdCQUFnQixRQUN2QjtNQUFJLE1BQU0sT0FBTyxnQkFBZ0IsY0FDakM7TUFBSSxLQUNKO01BQUksTUFBTSxXQUNWO01BQUksTUFBTSxZQUNWO01BQUksTUFBTSxPQUNWO01BQUksTUFBTSxNQUNWO01BQUksTUFBTSxRQUNWO01BQUksTUFBTSxTQUNWO01BQUksTUFBTSxRQUNWO01BQUksTUFBTSxTQUNWO01BQUksTUFBTSxrQkFDVjtNQUFJLE1BQU0sUUFDVjtNQUFJLE1BQU0sYUFDVjtNQUFJLE1BQU0sV0FDVjtNQUFJLE1BQU0sVUFDVjtNQUFJLE1BQU0sYUFDVjtNQUFJLE1BQU0sYUFDVjtNQUFJLE1BQU0sV0FDVjtTQUFPLGdCQUFnQixLQUFLLFlBQzVCO1NBQ0Q7OztBQUVELElBQUksZ0JBQWdCO0FBQ3BCLElBQUksYUFBYTtBQUNqQixJQUFJLHdCQUF3Qjs7QUFFNUIsU0FBUyx1QkFBdUIsbUJBQzlCO01BQUksWUFDRjtBQUNBO3NCQUNBO0FBQ0Q7QUFFRDs7QUFDQTtBQUNBOzBCQUVBOztNQUFJLGVBQ0Y7QUFDQTtBQUNEO0FBRUQ7O0FBQ0E7c0NBQW9DLFlBQ2xDO2lCQUFhLGdCQUNiO0FBQ0E7MEJBQ0Q7QUFFRCxHQU5nQjs7QUFPaEI7QUFDQTtBQUNBO1dBQVMsS0FBSyxZQUNmOzs7QUFFRCxTQUFTLG1CQUFtQixTQUMxQjt5QkFBdUIsVUFBVSxLQUMvQjtBQUNBO1FBQUksWUFBWSwwQkFBMEIsT0FBTyxNQUFNLHdDQUF3QyxTQUFTLFNBQVMsT0FDbEg7QUFDRjs7O0FBRUQsU0FBUyxzQkFDUDtNQUFJLENBQUMsWUFDSDtBQUNBO0FBQ0Q7QUFFRDs7QUFDQTtXQUFTLEtBQUssWUFDZDtlQUNBO2tCQUNBOzBCQUNEOzs7QUFFRDtBQUNBLFFBQVEsUUFBUSxTQUFTLGdCQUN2QjtBQUNEO0FBRkQ7O0FBSUE7QUFDQSxRQUFRLGNBQWMsU0FBUyxjQUFjLFVBQzNDO3FCQUFtQixTQUNwQjtBQUZEIiwiZmlsZSI6IjMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBUaGUgZXJyb3Igb3ZlcmxheSBpcyBpbnNwaXJlZCAoYW5kIG1vc3RseSBjb3BpZWQpIGZyb20gQ3JlYXRlIFJlYWN0IEFwcCAoaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29raW5jdWJhdG9yL2NyZWF0ZS1yZWFjdC1hcHApXG4vLyBUaGV5LCBpbiB0dXJuLCBnb3QgaW5zcGlyZWQgYnkgd2VicGFjay1ob3QtbWlkZGxld2FyZSAoaHR0cHM6Ly9naXRodWIuY29tL2dsZW5qYW1pbi93ZWJwYWNrLWhvdC1taWRkbGV3YXJlKS5cblxudmFyIGFuc2lIVE1MID0gcmVxdWlyZSgnYW5zaS1odG1sJyk7XG52YXIgRW50aXRpZXMgPSByZXF1aXJlKCdodG1sLWVudGl0aWVzJykuQWxsSHRtbEVudGl0aWVzO1xuXG52YXIgZW50aXRpZXMgPSBuZXcgRW50aXRpZXMoKTtcblxudmFyIGNvbG9ycyA9IHtcbiAgcmVzZXQ6IFsndHJhbnNwYXJlbnQnLCAndHJhbnNwYXJlbnQnXSxcbiAgYmxhY2s6ICcxODE4MTgnLFxuICByZWQ6ICdFMzYwNDknLFxuICBncmVlbjogJ0IzQ0I3NCcsXG4gIHllbGxvdzogJ0ZGRDA4MCcsXG4gIGJsdWU6ICc3Q0FGQzInLFxuICBtYWdlbnRhOiAnN0ZBQ0NBJyxcbiAgY3lhbjogJ0MzQzJFRicsXG4gIGxpZ2h0Z3JleTogJ0VCRTdFMycsXG4gIGRhcmtncmV5OiAnNkQ3ODkxJ1xufTtcbmFuc2lIVE1MLnNldENvbG9ycyhjb2xvcnMpO1xuXG5mdW5jdGlvbiBjcmVhdGVPdmVybGF5SWZyYW1lKG9uSWZyYW1lTG9hZCkge1xuICB2YXIgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gIGlmcmFtZS5pZCA9ICd3ZWJwYWNrLWRldi1zZXJ2ZXItY2xpZW50LW92ZXJsYXknO1xuICBpZnJhbWUuc3JjID0gJ2Fib3V0OmJsYW5rJztcbiAgaWZyYW1lLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcbiAgaWZyYW1lLnN0eWxlLmxlZnQgPSAwO1xuICBpZnJhbWUuc3R5bGUudG9wID0gMDtcbiAgaWZyYW1lLnN0eWxlLnJpZ2h0ID0gMDtcbiAgaWZyYW1lLnN0eWxlLmJvdHRvbSA9IDA7XG4gIGlmcmFtZS5zdHlsZS53aWR0aCA9ICcxMDB2dyc7XG4gIGlmcmFtZS5zdHlsZS5oZWlnaHQgPSAnMTAwdmgnO1xuICBpZnJhbWUuc3R5bGUuYm9yZGVyID0gJ25vbmUnO1xuICBpZnJhbWUuc3R5bGUuekluZGV4ID0gOTk5OTk5OTk5OTtcbiAgaWZyYW1lLm9ubG9hZCA9IG9uSWZyYW1lTG9hZDtcbiAgcmV0dXJuIGlmcmFtZTtcbn1cblxuZnVuY3Rpb24gYWRkT3ZlcmxheURpdlRvKGlmcmFtZSkge1xuICB2YXIgZGl2ID0gaWZyYW1lLmNvbnRlbnREb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGl2LmlkID0gJ3dlYnBhY2stZGV2LXNlcnZlci1jbGllbnQtb3ZlcmxheS1kaXYnO1xuICBkaXYuc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnO1xuICBkaXYuc3R5bGUuYm94U2l6aW5nID0gJ2JvcmRlci1ib3gnO1xuICBkaXYuc3R5bGUubGVmdCA9IDA7XG4gIGRpdi5zdHlsZS50b3AgPSAwO1xuICBkaXYuc3R5bGUucmlnaHQgPSAwO1xuICBkaXYuc3R5bGUuYm90dG9tID0gMDtcbiAgZGl2LnN0eWxlLndpZHRoID0gJzEwMHZ3JztcbiAgZGl2LnN0eWxlLmhlaWdodCA9ICcxMDB2aCc7XG4gIGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLCAwLCAwLCAwLjg1KSc7XG4gIGRpdi5zdHlsZS5jb2xvciA9ICcjRThFOEU4JztcbiAgZGl2LnN0eWxlLmZvbnRGYW1pbHkgPSAnTWVubG8sIENvbnNvbGFzLCBtb25vc3BhY2UnO1xuICBkaXYuc3R5bGUuZm9udFNpemUgPSAnbGFyZ2UnO1xuICBkaXYuc3R5bGUucGFkZGluZyA9ICcycmVtJztcbiAgZGl2LnN0eWxlLmxpbmVIZWlnaHQgPSAnMS4yJztcbiAgZGl2LnN0eWxlLndoaXRlU3BhY2UgPSAncHJlLXdyYXAnO1xuICBkaXYuc3R5bGUub3ZlcmZsb3cgPSAnYXV0byc7XG4gIGlmcmFtZS5jb250ZW50RG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xuICByZXR1cm4gZGl2O1xufVxuXG52YXIgb3ZlcmxheUlmcmFtZSA9IG51bGw7XG52YXIgb3ZlcmxheURpdiA9IG51bGw7XG52YXIgbGFzdE9uT3ZlcmxheURpdlJlYWR5ID0gbnVsbDtcblxuZnVuY3Rpb24gZW5zdXJlT3ZlcmxheURpdkV4aXN0cyhvbk92ZXJsYXlEaXZSZWFkeSkge1xuICBpZiAob3ZlcmxheURpdikge1xuICAgIC8vIEV2ZXJ5dGhpbmcgaXMgcmVhZHksIGNhbGwgdGhlIGNhbGxiYWNrIHJpZ2h0IGF3YXkuXG4gICAgb25PdmVybGF5RGl2UmVhZHkob3ZlcmxheURpdik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gQ3JlYXRpbmcgYW4gaWZyYW1lIG1heSBiZSBhc3luY2hyb25vdXMgc28gd2UnbGwgc2NoZWR1bGUgdGhlIGNhbGxiYWNrLlxuICAvLyBJbiBjYXNlIG9mIG11bHRpcGxlIGNhbGxzLCBsYXN0IGNhbGxiYWNrIHdpbnMuXG4gIGxhc3RPbk92ZXJsYXlEaXZSZWFkeSA9IG9uT3ZlcmxheURpdlJlYWR5O1xuXG4gIGlmIChvdmVybGF5SWZyYW1lKSB7XG4gICAgLy8gV2UncmUgYWxyZWFkeSBjcmVhdGluZyBpdC5cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBDcmVhdGUgaWZyYW1lIGFuZCwgd2hlbiBpdCBpcyByZWFkeSwgYSBkaXYgaW5zaWRlIGl0LlxuICBvdmVybGF5SWZyYW1lID0gY3JlYXRlT3ZlcmxheUlmcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgb3ZlcmxheURpdiA9IGFkZE92ZXJsYXlEaXZUbyhvdmVybGF5SWZyYW1lKTtcbiAgICAvLyBOb3cgd2UgY2FuIHRhbGshXG4gICAgbGFzdE9uT3ZlcmxheURpdlJlYWR5KG92ZXJsYXlEaXYpO1xuICB9KTtcblxuICAvLyBaYWxnbyBhbGVydDogb25JZnJhbWVMb2FkKCkgd2lsbCBiZSBjYWxsZWQgZWl0aGVyIHN5bmNocm9ub3VzbHlcbiAgLy8gb3IgYXN5bmNocm9ub3VzbHkgZGVwZW5kaW5nIG9uIHRoZSBicm93c2VyLlxuICAvLyBXZSBkZWxheSBhZGRpbmcgaXQgc28gYG92ZXJsYXlJZnJhbWVgIGlzIHNldCB3aGVuIGBvbklmcmFtZUxvYWRgIGZpcmVzLlxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG92ZXJsYXlJZnJhbWUpO1xufVxuXG5mdW5jdGlvbiBzaG93TWVzc2FnZU92ZXJsYXkobWVzc2FnZSkge1xuICBlbnN1cmVPdmVybGF5RGl2RXhpc3RzKGZ1bmN0aW9uIChkaXYpIHtcbiAgICAvLyBNYWtlIGl0IGxvb2sgc2ltaWxhciB0byBvdXIgdGVybWluYWwuXG4gICAgZGl2LmlubmVySFRNTCA9ICc8c3BhbiBzdHlsZT1cImNvbG9yOiAjJyArIGNvbG9ycy5yZWQgKyAnXCI+RmFpbGVkIHRvIGNvbXBpbGUuPC9zcGFuPjxicj48YnI+JyArIGFuc2lIVE1MKGVudGl0aWVzLmVuY29kZShtZXNzYWdlKSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBkZXN0cm95RXJyb3JPdmVybGF5KCkge1xuICBpZiAoIW92ZXJsYXlEaXYpIHtcbiAgICAvLyBJdCBpcyBub3QgdGhlcmUgaW4gdGhlIGZpcnN0IHBsYWNlLlxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIENsZWFuIHVwIGFuZCByZXNldCBpbnRlcm5hbCBzdGF0ZS5cbiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChvdmVybGF5SWZyYW1lKTtcbiAgb3ZlcmxheURpdiA9IG51bGw7XG4gIG92ZXJsYXlJZnJhbWUgPSBudWxsO1xuICBsYXN0T25PdmVybGF5RGl2UmVhZHkgPSBudWxsO1xufVxuXG4vLyBTdWNjZXNzZnVsIGNvbXBpbGF0aW9uLlxuZXhwb3J0cy5jbGVhciA9IGZ1bmN0aW9uIGhhbmRsZVN1Y2Nlc3MoKSB7XG4gIGRlc3Ryb3lFcnJvck92ZXJsYXkoKTtcbn07XG5cbi8vIENvbXBpbGF0aW9uIHdpdGggZXJyb3JzIChlLmcuIHN5bnRheCBlcnJvciBvciBtaXNzaW5nIG1vZHVsZXMpLlxuZXhwb3J0cy5zaG93TWVzc2FnZSA9IGZ1bmN0aW9uIGhhbmRsZU1lc3NhZ2UobWVzc2FnZXMpIHtcbiAgc2hvd01lc3NhZ2VPdmVybGF5KG1lc3NhZ2VzWzBdKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///30\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;var require;\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n};\\n\\n/* sockjs-client v1.1.4 | http://sockjs.org | MIT license */\\n(function (f) {\\n  if (( false ? undefined : _typeof(exports)) === \\\"object\\\" && typeof module !== \\\"undefined\\\") {\\n    module.exports = f();\\n  } else if (true) {\\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\\n\\t\\t\\t\\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else { var g; }\\n})(function () {\\n  var define, module, exports;return function e(t, n, r) {\\n    function s(o, u) {\\n      if (!n[o]) {\\n        if (!t[o]) {\\n          var a = typeof require == \\\"function\\\" && require;if (!u && a) return require(o, !0);if (i) return i(o, !0);var f = new Error(\\\"Cannot find module '\\\" + o + \\\"'\\\");throw f.code = \\\"MODULE_NOT_FOUND\\\", f;\\n        }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\\n          var n = t[o][1][e];return s(n ? n : e);\\n        }, l, l.exports, e, t, n, r);\\n      }return n[o].exports;\\n    }var i = typeof require == \\\"function\\\" && require;for (var o = 0; o < r.length; o++) {\\n      s(r[o]);\\n    }return s;\\n  }({ 1: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        var transportList = require('./transport-list');\\n\\n        module.exports = require('./main')(transportList);\\n\\n        // TODO can't get rid of this until all servers do\\n        if ('_sockjs_onload' in global) {\\n          setTimeout(global._sockjs_onload, 1);\\n        }\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"./main\\\": 14, \\\"./transport-list\\\": 16 }], 2: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          Event = require('./event');\\n\\n      function CloseEvent() {\\n        Event.call(this);\\n        this.initEvent('close', false, false);\\n        this.wasClean = false;\\n        this.code = 0;\\n        this.reason = '';\\n      }\\n\\n      inherits(CloseEvent, Event);\\n\\n      module.exports = CloseEvent;\\n    }, { \\\"./event\\\": 4, \\\"inherits\\\": 57 }], 3: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          EventTarget = require('./eventtarget');\\n\\n      function EventEmitter() {\\n        EventTarget.call(this);\\n      }\\n\\n      inherits(EventEmitter, EventTarget);\\n\\n      EventEmitter.prototype.removeAllListeners = function (type) {\\n        if (type) {\\n          delete this._listeners[type];\\n        } else {\\n          this._listeners = {};\\n        }\\n      };\\n\\n      EventEmitter.prototype.once = function (type, listener) {\\n        var self = this,\\n            fired = false;\\n\\n        function g() {\\n          self.removeListener(type, g);\\n\\n          if (!fired) {\\n            fired = true;\\n            listener.apply(this, arguments);\\n          }\\n        }\\n\\n        this.on(type, g);\\n      };\\n\\n      EventEmitter.prototype.emit = function () {\\n        var type = arguments[0];\\n        var listeners = this._listeners[type];\\n        if (!listeners) {\\n          return;\\n        }\\n        // equivalent of Array.prototype.slice.call(arguments, 1);\\n        var l = arguments.length;\\n        var args = new Array(l - 1);\\n        for (var ai = 1; ai < l; ai++) {\\n          args[ai - 1] = arguments[ai];\\n        }\\n        for (var i = 0; i < listeners.length; i++) {\\n          listeners[i].apply(this, args);\\n        }\\n      };\\n\\n      EventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;\\n      EventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;\\n\\n      module.exports.EventEmitter = EventEmitter;\\n    }, { \\\"./eventtarget\\\": 5, \\\"inherits\\\": 57 }], 4: [function (require, module, exports) {\\n      'use strict';\\n\\n      function Event(eventType) {\\n        this.type = eventType;\\n      }\\n\\n      Event.prototype.initEvent = function (eventType, canBubble, cancelable) {\\n        this.type = eventType;\\n        this.bubbles = canBubble;\\n        this.cancelable = cancelable;\\n        this.timeStamp = +new Date();\\n        return this;\\n      };\\n\\n      Event.prototype.stopPropagation = function () {};\\n      Event.prototype.preventDefault = function () {};\\n\\n      Event.CAPTURING_PHASE = 1;\\n      Event.AT_TARGET = 2;\\n      Event.BUBBLING_PHASE = 3;\\n\\n      module.exports = Event;\\n    }, {}], 5: [function (require, module, exports) {\\n      'use strict';\\n\\n      /* Simplified implementation of DOM2 EventTarget.\\n       *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\\n       */\\n\\n      function EventTarget() {\\n        this._listeners = {};\\n      }\\n\\n      EventTarget.prototype.addEventListener = function (eventType, listener) {\\n        if (!(eventType in this._listeners)) {\\n          this._listeners[eventType] = [];\\n        }\\n        var arr = this._listeners[eventType];\\n        // #4\\n        if (arr.indexOf(listener) === -1) {\\n          // Make a copy so as not to interfere with a current dispatchEvent.\\n          arr = arr.concat([listener]);\\n        }\\n        this._listeners[eventType] = arr;\\n      };\\n\\n      EventTarget.prototype.removeEventListener = function (eventType, listener) {\\n        var arr = this._listeners[eventType];\\n        if (!arr) {\\n          return;\\n        }\\n        var idx = arr.indexOf(listener);\\n        if (idx !== -1) {\\n          if (arr.length > 1) {\\n            // Make a copy so as not to interfere with a current dispatchEvent.\\n            this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\\n          } else {\\n            delete this._listeners[eventType];\\n          }\\n          return;\\n        }\\n      };\\n\\n      EventTarget.prototype.dispatchEvent = function () {\\n        var event = arguments[0];\\n        var t = event.type;\\n        // equivalent of Array.prototype.slice.call(arguments, 0);\\n        var args = arguments.length === 1 ? [event] : Array.apply(null, arguments);\\n        // TODO: This doesn't match the real behavior; per spec, onfoo get\\n        // their place in line from the /first/ time they're set from\\n        // non-null. Although WebKit bumps it to the end every time it's\\n        // set.\\n        if (this['on' + t]) {\\n          this['on' + t].apply(this, args);\\n        }\\n        if (t in this._listeners) {\\n          // Grab a reference to the listeners list. removeEventListener may alter the list.\\n          var listeners = this._listeners[t];\\n          for (var i = 0; i < listeners.length; i++) {\\n            listeners[i].apply(this, args);\\n          }\\n        }\\n      };\\n\\n      module.exports = EventTarget;\\n    }, {}], 6: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          Event = require('./event');\\n\\n      function TransportMessageEvent(data) {\\n        Event.call(this);\\n        this.initEvent('message', false, false);\\n        this.data = data;\\n      }\\n\\n      inherits(TransportMessageEvent, Event);\\n\\n      module.exports = TransportMessageEvent;\\n    }, { \\\"./event\\\": 4, \\\"inherits\\\": 57 }], 7: [function (require, module, exports) {\\n      'use strict';\\n\\n      var JSON3 = require('json3'),\\n          iframeUtils = require('./utils/iframe');\\n\\n      function FacadeJS(transport) {\\n        this._transport = transport;\\n        transport.on('message', this._transportMessage.bind(this));\\n        transport.on('close', this._transportClose.bind(this));\\n      }\\n\\n      FacadeJS.prototype._transportClose = function (code, reason) {\\n        iframeUtils.postMessage('c', JSON3.stringify([code, reason]));\\n      };\\n      FacadeJS.prototype._transportMessage = function (frame) {\\n        iframeUtils.postMessage('t', frame);\\n      };\\n      FacadeJS.prototype._send = function (data) {\\n        this._transport.send(data);\\n      };\\n      FacadeJS.prototype._close = function () {\\n        this._transport.close();\\n        this._transport.removeAllListeners();\\n      };\\n\\n      module.exports = FacadeJS;\\n    }, { \\\"./utils/iframe\\\": 47, \\\"json3\\\": 58 }], 8: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var urlUtils = require('./utils/url'),\\n            eventUtils = require('./utils/event'),\\n            JSON3 = require('json3'),\\n            FacadeJS = require('./facade'),\\n            InfoIframeReceiver = require('./info-iframe-receiver'),\\n            iframeUtils = require('./utils/iframe'),\\n            loc = require('./location');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:iframe-bootstrap');\\n        }\\n\\n        module.exports = function (SockJS, availableTransports) {\\n          var transportMap = {};\\n          availableTransports.forEach(function (at) {\\n            if (at.facadeTransport) {\\n              transportMap[at.facadeTransport.transportName] = at.facadeTransport;\\n            }\\n          });\\n\\n          // hard-coded for the info iframe\\n          // TODO see if we can make this more dynamic\\n          transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\\n          var parentOrigin;\\n\\n          /* eslint-disable camelcase */\\n          SockJS.bootstrap_iframe = function () {\\n            /* eslint-enable camelcase */\\n            var facade;\\n            iframeUtils.currentWindowId = loc.hash.slice(1);\\n            var onMessage = function onMessage(e) {\\n              if (e.source !== parent) {\\n                return;\\n              }\\n              if (typeof parentOrigin === 'undefined') {\\n                parentOrigin = e.origin;\\n              }\\n              if (e.origin !== parentOrigin) {\\n                return;\\n              }\\n\\n              var iframeMessage;\\n              try {\\n                iframeMessage = JSON3.parse(e.data);\\n              } catch (ignored) {\\n                debug('bad json', e.data);\\n                return;\\n              }\\n\\n              if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\\n                return;\\n              }\\n              switch (iframeMessage.type) {\\n                case 's':\\n                  var p;\\n                  try {\\n                    p = JSON3.parse(iframeMessage.data);\\n                  } catch (ignored) {\\n                    debug('bad json', iframeMessage.data);\\n                    break;\\n                  }\\n                  var version = p[0];\\n                  var transport = p[1];\\n                  var transUrl = p[2];\\n                  var baseUrl = p[3];\\n                  debug(version, transport, transUrl, baseUrl);\\n                  // change this to semver logic\\n                  if (version !== SockJS.version) {\\n                    throw new Error('Incompatible SockJS! Main site uses:' + ' \\\"' + version + '\\\", the iframe:' + ' \\\"' + SockJS.version + '\\\".');\\n                  }\\n\\n                  if (!urlUtils.isOriginEqual(transUrl, loc.href) || !urlUtils.isOriginEqual(baseUrl, loc.href)) {\\n                    throw new Error('Can\\\\'t connect to different domain from within an ' + 'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\\n                  }\\n                  facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\\n                  break;\\n                case 'm':\\n                  facade._send(iframeMessage.data);\\n                  break;\\n                case 'c':\\n                  if (facade) {\\n                    facade._close();\\n                  }\\n                  facade = null;\\n                  break;\\n              }\\n            };\\n\\n            eventUtils.attachEvent('message', onMessage);\\n\\n            // Start\\n            iframeUtils.postMessage('s');\\n          };\\n        };\\n      }).call(this, { env: {} });\\n    }, { \\\"./facade\\\": 7, \\\"./info-iframe-receiver\\\": 10, \\\"./location\\\": 13, \\\"./utils/event\\\": 46, \\\"./utils/iframe\\\": 47, \\\"./utils/url\\\": 52, \\\"debug\\\": 55, \\\"json3\\\": 58 }], 9: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var EventEmitter = require('events').EventEmitter,\\n            inherits = require('inherits'),\\n            JSON3 = require('json3'),\\n            objectUtils = require('./utils/object');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:info-ajax');\\n        }\\n\\n        function InfoAjax(url, AjaxObject) {\\n          EventEmitter.call(this);\\n\\n          var self = this;\\n          var t0 = +new Date();\\n          this.xo = new AjaxObject('GET', url);\\n\\n          this.xo.once('finish', function (status, text) {\\n            var info, rtt;\\n            if (status === 200) {\\n              rtt = +new Date() - t0;\\n              if (text) {\\n                try {\\n                  info = JSON3.parse(text);\\n                } catch (e) {\\n                  debug('bad json', text);\\n                }\\n              }\\n\\n              if (!objectUtils.isObject(info)) {\\n                info = {};\\n              }\\n            }\\n            self.emit('finish', info, rtt);\\n            self.removeAllListeners();\\n          });\\n        }\\n\\n        inherits(InfoAjax, EventEmitter);\\n\\n        InfoAjax.prototype.close = function () {\\n          this.removeAllListeners();\\n          this.xo.close();\\n        };\\n\\n        module.exports = InfoAjax;\\n      }).call(this, { env: {} });\\n    }, { \\\"./utils/object\\\": 49, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57, \\\"json3\\\": 58 }], 10: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          EventEmitter = require('events').EventEmitter,\\n          JSON3 = require('json3'),\\n          XHRLocalObject = require('./transport/sender/xhr-local'),\\n          InfoAjax = require('./info-ajax');\\n\\n      function InfoReceiverIframe(transUrl) {\\n        var self = this;\\n        EventEmitter.call(this);\\n\\n        this.ir = new InfoAjax(transUrl, XHRLocalObject);\\n        this.ir.once('finish', function (info, rtt) {\\n          self.ir = null;\\n          self.emit('message', JSON3.stringify([info, rtt]));\\n        });\\n      }\\n\\n      inherits(InfoReceiverIframe, EventEmitter);\\n\\n      InfoReceiverIframe.transportName = 'iframe-info-receiver';\\n\\n      InfoReceiverIframe.prototype.close = function () {\\n        if (this.ir) {\\n          this.ir.close();\\n          this.ir = null;\\n        }\\n        this.removeAllListeners();\\n      };\\n\\n      module.exports = InfoReceiverIframe;\\n    }, { \\\"./info-ajax\\\": 9, \\\"./transport/sender/xhr-local\\\": 37, \\\"events\\\": 3, \\\"inherits\\\": 57, \\\"json3\\\": 58 }], 11: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        var EventEmitter = require('events').EventEmitter,\\n            inherits = require('inherits'),\\n            JSON3 = require('json3'),\\n            utils = require('./utils/event'),\\n            IframeTransport = require('./transport/iframe'),\\n            InfoReceiverIframe = require('./info-iframe-receiver');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:info-iframe');\\n        }\\n\\n        function InfoIframe(baseUrl, url) {\\n          var self = this;\\n          EventEmitter.call(this);\\n\\n          var go = function go() {\\n            var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);\\n\\n            ifr.once('message', function (msg) {\\n              if (msg) {\\n                var d;\\n                try {\\n                  d = JSON3.parse(msg);\\n                } catch (e) {\\n                  debug('bad json', msg);\\n                  self.emit('finish');\\n                  self.close();\\n                  return;\\n                }\\n\\n                var info = d[0],\\n                    rtt = d[1];\\n                self.emit('finish', info, rtt);\\n              }\\n              self.close();\\n            });\\n\\n            ifr.once('close', function () {\\n              self.emit('finish');\\n              self.close();\\n            });\\n          };\\n\\n          // TODO this seems the same as the 'needBody' from transports\\n          if (!global.document.body) {\\n            utils.attachEvent('load', go);\\n          } else {\\n            go();\\n          }\\n        }\\n\\n        inherits(InfoIframe, EventEmitter);\\n\\n        InfoIframe.enabled = function () {\\n          return IframeTransport.enabled();\\n        };\\n\\n        InfoIframe.prototype.close = function () {\\n          if (this.ifr) {\\n            this.ifr.close();\\n          }\\n          this.removeAllListeners();\\n          this.ifr = null;\\n        };\\n\\n        module.exports = InfoIframe;\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"./info-iframe-receiver\\\": 10, \\\"./transport/iframe\\\": 22, \\\"./utils/event\\\": 46, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57, \\\"json3\\\": 58 }], 12: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var EventEmitter = require('events').EventEmitter,\\n            inherits = require('inherits'),\\n            urlUtils = require('./utils/url'),\\n            XDR = require('./transport/sender/xdr'),\\n            XHRCors = require('./transport/sender/xhr-cors'),\\n            XHRLocal = require('./transport/sender/xhr-local'),\\n            XHRFake = require('./transport/sender/xhr-fake'),\\n            InfoIframe = require('./info-iframe'),\\n            InfoAjax = require('./info-ajax');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:info-receiver');\\n        }\\n\\n        function InfoReceiver(baseUrl, urlInfo) {\\n          debug(baseUrl);\\n          var self = this;\\n          EventEmitter.call(this);\\n\\n          setTimeout(function () {\\n            self.doXhr(baseUrl, urlInfo);\\n          }, 0);\\n        }\\n\\n        inherits(InfoReceiver, EventEmitter);\\n\\n        // TODO this is currently ignoring the list of available transports and the whitelist\\n\\n        InfoReceiver._getReceiver = function (baseUrl, url, urlInfo) {\\n          // determine method of CORS support (if needed)\\n          if (urlInfo.sameOrigin) {\\n            return new InfoAjax(url, XHRLocal);\\n          }\\n          if (XHRCors.enabled) {\\n            return new InfoAjax(url, XHRCors);\\n          }\\n          if (XDR.enabled && urlInfo.sameScheme) {\\n            return new InfoAjax(url, XDR);\\n          }\\n          if (InfoIframe.enabled()) {\\n            return new InfoIframe(baseUrl, url);\\n          }\\n          return new InfoAjax(url, XHRFake);\\n        };\\n\\n        InfoReceiver.prototype.doXhr = function (baseUrl, urlInfo) {\\n          var self = this,\\n              url = urlUtils.addPath(baseUrl, '/info');\\n          debug('doXhr', url);\\n\\n          this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\\n\\n          this.timeoutRef = setTimeout(function () {\\n            debug('timeout');\\n            self._cleanup(false);\\n            self.emit('finish');\\n          }, InfoReceiver.timeout);\\n\\n          this.xo.once('finish', function (info, rtt) {\\n            debug('finish', info, rtt);\\n            self._cleanup(true);\\n            self.emit('finish', info, rtt);\\n          });\\n        };\\n\\n        InfoReceiver.prototype._cleanup = function (wasClean) {\\n          debug('_cleanup');\\n          clearTimeout(this.timeoutRef);\\n          this.timeoutRef = null;\\n          if (!wasClean && this.xo) {\\n            this.xo.close();\\n          }\\n          this.xo = null;\\n        };\\n\\n        InfoReceiver.prototype.close = function () {\\n          debug('close');\\n          this.removeAllListeners();\\n          this._cleanup(false);\\n        };\\n\\n        InfoReceiver.timeout = 8000;\\n\\n        module.exports = InfoReceiver;\\n      }).call(this, { env: {} });\\n    }, { \\\"./info-ajax\\\": 9, \\\"./info-iframe\\\": 11, \\\"./transport/sender/xdr\\\": 34, \\\"./transport/sender/xhr-cors\\\": 35, \\\"./transport/sender/xhr-fake\\\": 36, \\\"./transport/sender/xhr-local\\\": 37, \\\"./utils/url\\\": 52, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 13: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        module.exports = global.location || {\\n          origin: 'http://localhost:80',\\n          protocol: 'http',\\n          host: 'localhost',\\n          port: 80,\\n          href: 'http://localhost/',\\n          hash: ''\\n        };\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, {}], 14: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        require('./shims');\\n\\n        var URL = require('url-parse'),\\n            inherits = require('inherits'),\\n            JSON3 = require('json3'),\\n            random = require('./utils/random'),\\n            escape = require('./utils/escape'),\\n            urlUtils = require('./utils/url'),\\n            eventUtils = require('./utils/event'),\\n            transport = require('./utils/transport'),\\n            objectUtils = require('./utils/object'),\\n            browser = require('./utils/browser'),\\n            log = require('./utils/log'),\\n            Event = require('./event/event'),\\n            EventTarget = require('./event/eventtarget'),\\n            loc = require('./location'),\\n            CloseEvent = require('./event/close'),\\n            TransportMessageEvent = require('./event/trans-message'),\\n            InfoReceiver = require('./info-receiver');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:main');\\n        }\\n\\n        var transports;\\n\\n        // follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\\n        function SockJS(url, protocols, options) {\\n          if (!(this instanceof SockJS)) {\\n            return new SockJS(url, protocols, options);\\n          }\\n          if (arguments.length < 1) {\\n            throw new TypeError(\\\"Failed to construct 'SockJS: 1 argument required, but only 0 present\\\");\\n          }\\n          EventTarget.call(this);\\n\\n          this.readyState = SockJS.CONNECTING;\\n          this.extensions = '';\\n          this.protocol = '';\\n\\n          // non-standard extension\\n          options = options || {};\\n          if (options.protocols_whitelist) {\\n            log.warn(\\\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\\\");\\n          }\\n          this._transportsWhitelist = options.transports;\\n          this._transportOptions = options.transportOptions || {};\\n\\n          var sessionId = options.sessionId || 8;\\n          if (typeof sessionId === 'function') {\\n            this._generateSessionId = sessionId;\\n          } else if (typeof sessionId === 'number') {\\n            this._generateSessionId = function () {\\n              return random.string(sessionId);\\n            };\\n          } else {\\n            throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\\n          }\\n\\n          this._server = options.server || random.numberString(1000);\\n\\n          // Step 1 of WS spec - parse and validate the url. Issue #8\\n          var parsedUrl = new URL(url);\\n          if (!parsedUrl.host || !parsedUrl.protocol) {\\n            throw new SyntaxError(\\\"The URL '\\\" + url + \\\"' is invalid\\\");\\n          } else if (parsedUrl.hash) {\\n            throw new SyntaxError('The URL must not contain a fragment');\\n          } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\\n            throw new SyntaxError(\\\"The URL's scheme must be either 'http:' or 'https:'. '\\\" + parsedUrl.protocol + \\\"' is not allowed.\\\");\\n          }\\n\\n          var secure = parsedUrl.protocol === 'https:';\\n          // Step 2 - don't allow secure origin with an insecure protocol\\n          if (loc.protocol === 'https' && !secure) {\\n            throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\\n          }\\n\\n          // Step 3 - check port access - no need here\\n          // Step 4 - parse protocols argument\\n          if (!protocols) {\\n            protocols = [];\\n          } else if (!Array.isArray(protocols)) {\\n            protocols = [protocols];\\n          }\\n\\n          // Step 5 - check protocols argument\\n          var sortedProtocols = protocols.sort();\\n          sortedProtocols.forEach(function (proto, i) {\\n            if (!proto) {\\n              throw new SyntaxError(\\\"The protocols entry '\\\" + proto + \\\"' is invalid.\\\");\\n            }\\n            if (i < sortedProtocols.length - 1 && proto === sortedProtocols[i + 1]) {\\n              throw new SyntaxError(\\\"The protocols entry '\\\" + proto + \\\"' is duplicated.\\\");\\n            }\\n          });\\n\\n          // Step 6 - convert origin\\n          var o = urlUtils.getOrigin(loc.href);\\n          this._origin = o ? o.toLowerCase() : null;\\n\\n          // remove the trailing slash\\n          parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\\\/+$/, ''));\\n\\n          // store the sanitized url\\n          this.url = parsedUrl.href;\\n          debug('using url', this.url);\\n\\n          // Step 7 - start connection in background\\n          // obtain server info\\n          // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\\n          this._urlInfo = {\\n            nullOrigin: !browser.hasDomain(),\\n            sameOrigin: urlUtils.isOriginEqual(this.url, loc.href),\\n            sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\\n          };\\n\\n          this._ir = new InfoReceiver(this.url, this._urlInfo);\\n          this._ir.once('finish', this._receiveInfo.bind(this));\\n        }\\n\\n        inherits(SockJS, EventTarget);\\n\\n        function userSetCode(code) {\\n          return code === 1000 || code >= 3000 && code <= 4999;\\n        }\\n\\n        SockJS.prototype.close = function (code, reason) {\\n          // Step 1\\n          if (code && !userSetCode(code)) {\\n            throw new Error('InvalidAccessError: Invalid code');\\n          }\\n          // Step 2.4 states the max is 123 bytes, but we are just checking length\\n          if (reason && reason.length > 123) {\\n            throw new SyntaxError('reason argument has an invalid length');\\n          }\\n\\n          // Step 3.1\\n          if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\\n            return;\\n          }\\n\\n          // TODO look at docs to determine how to set this\\n          var wasClean = true;\\n          this._close(code || 1000, reason || 'Normal closure', wasClean);\\n        };\\n\\n        SockJS.prototype.send = function (data) {\\n          // #13 - convert anything non-string to string\\n          // TODO this currently turns objects into [object Object]\\n          if (typeof data !== 'string') {\\n            data = '' + data;\\n          }\\n          if (this.readyState === SockJS.CONNECTING) {\\n            throw new Error('InvalidStateError: The connection has not been established yet');\\n          }\\n          if (this.readyState !== SockJS.OPEN) {\\n            return;\\n          }\\n          this._transport.send(escape.quote(data));\\n        };\\n\\n        SockJS.version = require('./version');\\n\\n        SockJS.CONNECTING = 0;\\n        SockJS.OPEN = 1;\\n        SockJS.CLOSING = 2;\\n        SockJS.CLOSED = 3;\\n\\n        SockJS.prototype._receiveInfo = function (info, rtt) {\\n          debug('_receiveInfo', rtt);\\n          this._ir = null;\\n          if (!info) {\\n            this._close(1002, 'Cannot connect to server');\\n            return;\\n          }\\n\\n          // establish a round-trip timeout (RTO) based on the\\n          // round-trip time (RTT)\\n          this._rto = this.countRTO(rtt);\\n          // allow server to override url used for the actual transport\\n          this._transUrl = info.base_url ? info.base_url : this.url;\\n          info = objectUtils.extend(info, this._urlInfo);\\n          debug('info', info);\\n          // determine list of desired and supported transports\\n          var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\\n          this._transports = enabledTransports.main;\\n          debug(this._transports.length + ' enabled transports');\\n\\n          this._connect();\\n        };\\n\\n        SockJS.prototype._connect = function () {\\n          for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\\n            debug('attempt', Transport.transportName);\\n            if (Transport.needBody) {\\n              if (!global.document.body || typeof global.document.readyState !== 'undefined' && global.document.readyState !== 'complete' && global.document.readyState !== 'interactive') {\\n                debug('waiting for body');\\n                this._transports.unshift(Transport);\\n                eventUtils.attachEvent('load', this._connect.bind(this));\\n                return;\\n              }\\n            }\\n\\n            // calculate timeout based on RTO and round trips. Default to 5s\\n            var timeoutMs = this._rto * Transport.roundTrips || 5000;\\n            this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\\n            debug('using timeout', timeoutMs);\\n\\n            var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\\n            var options = this._transportOptions[Transport.transportName];\\n            debug('transport url', transportUrl);\\n            var transportObj = new Transport(transportUrl, this._transUrl, options);\\n            transportObj.on('message', this._transportMessage.bind(this));\\n            transportObj.once('close', this._transportClose.bind(this));\\n            transportObj.transportName = Transport.transportName;\\n            this._transport = transportObj;\\n\\n            return;\\n          }\\n          this._close(2000, 'All transports failed', false);\\n        };\\n\\n        SockJS.prototype._transportTimeout = function () {\\n          debug('_transportTimeout');\\n          if (this.readyState === SockJS.CONNECTING) {\\n            this._transportClose(2007, 'Transport timed out');\\n          }\\n        };\\n\\n        SockJS.prototype._transportMessage = function (msg) {\\n          debug('_transportMessage', msg);\\n          var self = this,\\n              type = msg.slice(0, 1),\\n              content = msg.slice(1),\\n              payload;\\n\\n          // first check for messages that don't need a payload\\n          switch (type) {\\n            case 'o':\\n              this._open();\\n              return;\\n            case 'h':\\n              this.dispatchEvent(new Event('heartbeat'));\\n              debug('heartbeat', this.transport);\\n              return;\\n          }\\n\\n          if (content) {\\n            try {\\n              payload = JSON3.parse(content);\\n            } catch (e) {\\n              debug('bad json', content);\\n            }\\n          }\\n\\n          if (typeof payload === 'undefined') {\\n            debug('empty payload', content);\\n            return;\\n          }\\n\\n          switch (type) {\\n            case 'a':\\n              if (Array.isArray(payload)) {\\n                payload.forEach(function (p) {\\n                  debug('message', self.transport, p);\\n                  self.dispatchEvent(new TransportMessageEvent(p));\\n                });\\n              }\\n              break;\\n            case 'm':\\n              debug('message', this.transport, payload);\\n              this.dispatchEvent(new TransportMessageEvent(payload));\\n              break;\\n            case 'c':\\n              if (Array.isArray(payload) && payload.length === 2) {\\n                this._close(payload[0], payload[1], true);\\n              }\\n              break;\\n          }\\n        };\\n\\n        SockJS.prototype._transportClose = function (code, reason) {\\n          debug('_transportClose', this.transport, code, reason);\\n          if (this._transport) {\\n            this._transport.removeAllListeners();\\n            this._transport = null;\\n            this.transport = null;\\n          }\\n\\n          if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\\n            this._connect();\\n            return;\\n          }\\n\\n          this._close(code, reason);\\n        };\\n\\n        SockJS.prototype._open = function () {\\n          debug('_open', this._transport.transportName, this.readyState);\\n          if (this.readyState === SockJS.CONNECTING) {\\n            if (this._transportTimeoutId) {\\n              clearTimeout(this._transportTimeoutId);\\n              this._transportTimeoutId = null;\\n            }\\n            this.readyState = SockJS.OPEN;\\n            this.transport = this._transport.transportName;\\n            this.dispatchEvent(new Event('open'));\\n            debug('connected', this.transport);\\n          } else {\\n            // The server might have been restarted, and lost track of our\\n            // connection.\\n            this._close(1006, 'Server lost session');\\n          }\\n        };\\n\\n        SockJS.prototype._close = function (code, reason, wasClean) {\\n          debug('_close', this.transport, code, reason, wasClean, this.readyState);\\n          var forceFail = false;\\n\\n          if (this._ir) {\\n            forceFail = true;\\n            this._ir.close();\\n            this._ir = null;\\n          }\\n          if (this._transport) {\\n            this._transport.close();\\n            this._transport = null;\\n            this.transport = null;\\n          }\\n\\n          if (this.readyState === SockJS.CLOSED) {\\n            throw new Error('InvalidStateError: SockJS has already been closed');\\n          }\\n\\n          this.readyState = SockJS.CLOSING;\\n          setTimeout(function () {\\n            this.readyState = SockJS.CLOSED;\\n\\n            if (forceFail) {\\n              this.dispatchEvent(new Event('error'));\\n            }\\n\\n            var e = new CloseEvent('close');\\n            e.wasClean = wasClean || false;\\n            e.code = code || 1000;\\n            e.reason = reason;\\n\\n            this.dispatchEvent(e);\\n            this.onmessage = this.onclose = this.onerror = null;\\n            debug('disconnected');\\n          }.bind(this), 0);\\n        };\\n\\n        // See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\\n        // and RFC 2988.\\n        SockJS.prototype.countRTO = function (rtt) {\\n          // In a local environment, when using IE8/9 and the `jsonp-polling`\\n          // transport the time needed to establish a connection (the time that pass\\n          // from the opening of the transport to the call of `_dispatchOpen`) is\\n          // around 200msec (the lower bound used in the article above) and this\\n          // causes spurious timeouts. For this reason we calculate a value slightly\\n          // larger than that used in the article.\\n          if (rtt > 100) {\\n            return 4 * rtt; // rto > 400msec\\n          }\\n          return 300 + rtt; // 300msec < rto <= 400msec\\n        };\\n\\n        module.exports = function (availableTransports) {\\n          transports = transport(availableTransports);\\n          require('./iframe-bootstrap')(SockJS, availableTransports);\\n          return SockJS;\\n        };\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"./event/close\\\": 2, \\\"./event/event\\\": 4, \\\"./event/eventtarget\\\": 5, \\\"./event/trans-message\\\": 6, \\\"./iframe-bootstrap\\\": 8, \\\"./info-receiver\\\": 12, \\\"./location\\\": 13, \\\"./shims\\\": 15, \\\"./utils/browser\\\": 44, \\\"./utils/escape\\\": 45, \\\"./utils/event\\\": 46, \\\"./utils/log\\\": 48, \\\"./utils/object\\\": 49, \\\"./utils/random\\\": 50, \\\"./utils/transport\\\": 51, \\\"./utils/url\\\": 52, \\\"./version\\\": 53, \\\"debug\\\": 55, \\\"inherits\\\": 57, \\\"json3\\\": 58, \\\"url-parse\\\": 61 }], 15: [function (require, module, exports) {\\n      /* eslint-disable */\\n      /* jscs: disable */\\n      'use strict';\\n\\n      // pulled specific shims from https://github.com/es-shims/es5-shim\\n\\n      var ArrayPrototype = Array.prototype;\\n      var ObjectPrototype = Object.prototype;\\n      var FunctionPrototype = Function.prototype;\\n      var StringPrototype = String.prototype;\\n      var array_slice = ArrayPrototype.slice;\\n\\n      var _toString = ObjectPrototype.toString;\\n      var isFunction = function isFunction(val) {\\n        return ObjectPrototype.toString.call(val) === '[object Function]';\\n      };\\n      var isArray = function isArray(obj) {\\n        return _toString.call(obj) === '[object Array]';\\n      };\\n      var isString = function isString(obj) {\\n        return _toString.call(obj) === '[object String]';\\n      };\\n\\n      var supportsDescriptors = Object.defineProperty && function () {\\n        try {\\n          Object.defineProperty({}, 'x', {});\\n          return true;\\n        } catch (e) {\\n          /* this is ES3 */\\n          return false;\\n        }\\n      }();\\n\\n      // Define configurable, writable and non-enumerable props\\n      // if they don't exist.\\n      var defineProperty;\\n      if (supportsDescriptors) {\\n        defineProperty = function defineProperty(object, name, method, forceAssign) {\\n          if (!forceAssign && name in object) {\\n            return;\\n          }\\n          Object.defineProperty(object, name, {\\n            configurable: true,\\n            enumerable: false,\\n            writable: true,\\n            value: method\\n          });\\n        };\\n      } else {\\n        defineProperty = function defineProperty(object, name, method, forceAssign) {\\n          if (!forceAssign && name in object) {\\n            return;\\n          }\\n          object[name] = method;\\n        };\\n      }\\n      var defineProperties = function defineProperties(object, map, forceAssign) {\\n        for (var name in map) {\\n          if (ObjectPrototype.hasOwnProperty.call(map, name)) {\\n            defineProperty(object, name, map[name], forceAssign);\\n          }\\n        }\\n      };\\n\\n      var toObject = function toObject(o) {\\n        if (o == null) {\\n          // this matches both null and undefined\\n          throw new TypeError(\\\"can't convert \\\" + o + ' to object');\\n        }\\n        return Object(o);\\n      };\\n\\n      //\\n      // Util\\n      // ======\\n      //\\n\\n      // ES5 9.4\\n      // http://es5.github.com/#x9.4\\n      // http://jsperf.com/to-integer\\n\\n      function toInteger(num) {\\n        var n = +num;\\n        if (n !== n) {\\n          // isNaN\\n          n = 0;\\n        } else if (n !== 0 && n !== 1 / 0 && n !== -(1 / 0)) {\\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\\n        }\\n        return n;\\n      }\\n\\n      function ToUint32(x) {\\n        return x >>> 0;\\n      }\\n\\n      //\\n      // Function\\n      // ========\\n      //\\n\\n      // ES-5 15.3.4.5\\n      // http://es5.github.com/#x15.3.4.5\\n\\n      function Empty() {}\\n\\n      defineProperties(FunctionPrototype, {\\n        bind: function bind(that) {\\n          // .length is 1\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isFunction(target)) {\\n            throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var binder = function binder() {\\n\\n            if (this instanceof bound) {\\n              // 15.3.4.5.2 [[Construct]]\\n              // When the [[Construct]] internal method of a function object,\\n              // F that was created using the bind function is called with a\\n              // list of arguments ExtraArgs, the following steps are taken:\\n              // 1. Let target be the value of F's [[TargetFunction]]\\n              //   internal property.\\n              // 2. If target has no [[Construct]] internal method, a\\n              //   TypeError exception is thrown.\\n              // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n              //   property.\\n              // 4. Let args be a new list containing the same values as the\\n              //   list boundArgs in the same order followed by the same\\n              //   values as the list ExtraArgs in the same order.\\n              // 5. Return the result of calling the [[Construct]] internal\\n              //   method of target providing args as the arguments.\\n\\n              var result = target.apply(this, args.concat(array_slice.call(arguments)));\\n              if (Object(result) === result) {\\n                return result;\\n              }\\n              return this;\\n            } else {\\n              // 15.3.4.5.1 [[Call]]\\n              // When the [[Call]] internal method of a function object, F,\\n              // which was created using the bind function is called with a\\n              // this value and a list of arguments ExtraArgs, the following\\n              // steps are taken:\\n              // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n              //   property.\\n              // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n              //   property.\\n              // 3. Let target be the value of F's [[TargetFunction]] internal\\n              //   property.\\n              // 4. Let args be a new list containing the same values as the\\n              //   list boundArgs in the same order followed by the same\\n              //   values as the list ExtraArgs in the same order.\\n              // 5. Return the result of calling the [[Call]] internal method\\n              //   of target providing boundThis as the this value and\\n              //   providing args as the arguments.\\n\\n              // equiv: target.call(this, ...boundArgs, ...args)\\n              return target.apply(that, args.concat(array_slice.call(arguments)));\\n            }\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = Math.max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n            boundArgs.push('$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n            Empty.prototype = target.prototype;\\n            bound.prototype = new Empty();\\n            // Clean up dangling references.\\n            Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n        }\\n      });\\n\\n      //\\n      // Array\\n      // =====\\n      //\\n\\n      // ES5 15.4.3.2\\n      // http://es5.github.com/#x15.4.3.2\\n      // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\\n      defineProperties(Array, { isArray: isArray });\\n\\n      var boxedString = Object('a');\\n      var splitString = boxedString[0] !== 'a' || !(0 in boxedString);\\n\\n      var properlyBoxesContext = function properlyBoxed(method) {\\n        // Check node 0.6.21 bug where third parameter is not boxed\\n        var properlyBoxesNonStrict = true;\\n        var properlyBoxesStrict = true;\\n        if (method) {\\n          method.call('foo', function (_, __, context) {\\n            if ((typeof context === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(context)) !== 'object') {\\n              properlyBoxesNonStrict = false;\\n            }\\n          });\\n\\n          method.call([1], function () {\\n            'use strict';\\n\\n            properlyBoxesStrict = typeof this === 'string';\\n          }, 'x');\\n        }\\n        return !!method && properlyBoxesNonStrict && properlyBoxesStrict;\\n      };\\n\\n      defineProperties(ArrayPrototype, {\\n        forEach: function forEach(fun /*, thisp*/) {\\n          var object = toObject(this),\\n              self = splitString && isString(this) ? this.split('') : object,\\n              thisp = arguments[1],\\n              i = -1,\\n              length = self.length >>> 0;\\n\\n          // If no callback function or if callback is not a callable function\\n          if (!isFunction(fun)) {\\n            throw new TypeError(); // TODO message\\n          }\\n\\n          while (++i < length) {\\n            if (i in self) {\\n              // Invoke the callback function with call, passing arguments:\\n              // context, property value, property key, thisArg object\\n              // context\\n              fun.call(thisp, self[i], i, object);\\n            }\\n          }\\n        }\\n      }, !properlyBoxesContext(ArrayPrototype.forEach));\\n\\n      // ES5 15.4.4.14\\n      // http://es5.github.com/#x15.4.4.14\\n      // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\\n      var hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\\n      defineProperties(ArrayPrototype, {\\n        indexOf: function indexOf(sought /*, fromIndex */) {\\n          var self = splitString && isString(this) ? this.split('') : toObject(this),\\n              length = self.length >>> 0;\\n\\n          if (!length) {\\n            return -1;\\n          }\\n\\n          var i = 0;\\n          if (arguments.length > 1) {\\n            i = toInteger(arguments[1]);\\n          }\\n\\n          // handle negative indices\\n          i = i >= 0 ? i : Math.max(0, length + i);\\n          for (; i < length; i++) {\\n            if (i in self && self[i] === sought) {\\n              return i;\\n            }\\n          }\\n          return -1;\\n        }\\n      }, hasFirefox2IndexOfBug);\\n\\n      //\\n      // String\\n      // ======\\n      //\\n\\n      // ES5 15.5.4.14\\n      // http://es5.github.com/#x15.5.4.14\\n\\n      // [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\\n      // Many browsers do not split properly with regular expressions or they\\n      // do not perform the split correctly under obscure conditions.\\n      // See http://blog.stevenlevithan.com/archives/cross-browser-split\\n      // I've tested in many browsers and this seems to cover the deviant ones:\\n      //    'ab'.split(/(?:ab)*/) should be [\\\"\\\", \\\"\\\"], not [\\\"\\\"]\\n      //    '.'.split(/(.?)(.?)/) should be [\\\"\\\", \\\".\\\", \\\"\\\", \\\"\\\"], not [\\\"\\\", \\\"\\\"]\\n      //    'tesst'.split(/(s)*/) should be [\\\"t\\\", undefined, \\\"e\\\", \\\"s\\\", \\\"t\\\"], not\\n      //       [undefined, \\\"t\\\", undefined, \\\"e\\\", ...]\\n      //    ''.split(/.?/) should be [], not [\\\"\\\"]\\n      //    '.'.split(/()()/) should be [\\\".\\\"], not [\\\"\\\", \\\"\\\", \\\".\\\"]\\n\\n      var string_split = StringPrototype.split;\\n      if ('ab'.split(/(?:ab)*/).length !== 2 || '.'.split(/(.?)(.?)/).length !== 4 || 'tesst'.split(/(s)*/)[1] === 't' || 'test'.split(/(?:)/, -1).length !== 4 || ''.split(/.?/).length || '.'.split(/()()/).length > 1) {\\n        (function () {\\n          var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group\\n\\n          StringPrototype.split = function (separator, limit) {\\n            var string = this;\\n            if (separator === void 0 && limit === 0) {\\n              return [];\\n            }\\n\\n            // If `separator` is not a regex, use native split\\n            if (_toString.call(separator) !== '[object RegExp]') {\\n              return string_split.call(this, separator, limit);\\n            }\\n\\n            var output = [],\\n                flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.extended ? 'x' : '') + ( // Proposed for ES6\\n            separator.sticky ? 'y' : ''),\\n\\n            // Firefox 3+\\n            lastLastIndex = 0,\\n\\n\\n            // Make `global` and avoid `lastIndex` issues by working with a copy\\n            separator2,\\n                match,\\n                lastIndex,\\n                lastLength;\\n            separator = new RegExp(separator.source, flags + 'g');\\n            string += ''; // Type-convert\\n            if (!compliantExecNpcg) {\\n              // Doesn't need flags gy, but they don't hurt\\n              separator2 = new RegExp('^' + separator.source + '$(?!\\\\\\\\s)', flags);\\n            }\\n            /* Values for `limit`, per the spec:\\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\\n             * If 0, Infinity, or NaN: 0\\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\\n             * If other: Type-convert, then use the above rules\\n             */\\n            limit = limit === void 0 ? -1 >>> 0 : // Math.pow(2, 32) - 1\\n            ToUint32(limit);\\n            while (match = separator.exec(string)) {\\n              // `separator.lastIndex` is not reliable cross-browser\\n              lastIndex = match.index + match[0].length;\\n              if (lastIndex > lastLastIndex) {\\n                output.push(string.slice(lastLastIndex, match.index));\\n                // Fix browsers whose `exec` methods don't consistently return `undefined` for\\n                // nonparticipating capturing groups\\n                if (!compliantExecNpcg && match.length > 1) {\\n                  match[0].replace(separator2, function () {\\n                    for (var i = 1; i < arguments.length - 2; i++) {\\n                      if (arguments[i] === void 0) {\\n                        match[i] = void 0;\\n                      }\\n                    }\\n                  });\\n                }\\n                if (match.length > 1 && match.index < string.length) {\\n                  ArrayPrototype.push.apply(output, match.slice(1));\\n                }\\n                lastLength = match[0].length;\\n                lastLastIndex = lastIndex;\\n                if (output.length >= limit) {\\n                  break;\\n                }\\n              }\\n              if (separator.lastIndex === match.index) {\\n                separator.lastIndex++; // Avoid an infinite loop\\n              }\\n            }\\n            if (lastLastIndex === string.length) {\\n              if (lastLength || !separator.test('')) {\\n                output.push('');\\n              }\\n            } else {\\n              output.push(string.slice(lastLastIndex));\\n            }\\n            return output.length > limit ? output.slice(0, limit) : output;\\n          };\\n        })();\\n\\n        // [bugfix, chrome]\\n        // If separator is undefined, then the result array contains just one String,\\n        // which is the this value (converted to a String). If limit is not undefined,\\n        // then the output array is truncated so that it contains no more than limit\\n        // elements.\\n        // \\\"0\\\".split(undefined, 0) -> []\\n      } else if ('0'.split(void 0, 0).length) {\\n        StringPrototype.split = function split(separator, limit) {\\n          if (separator === void 0 && limit === 0) {\\n            return [];\\n          }\\n          return string_split.call(this, separator, limit);\\n        };\\n      }\\n\\n      // ECMA-262, 3rd B.2.3\\n      // Not an ECMAScript standard, although ECMAScript 3rd Edition has a\\n      // non-normative section suggesting uniform semantics and it should be\\n      // normalized across all browsers\\n      // [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\\n      var string_substr = StringPrototype.substr;\\n      var hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\\n      defineProperties(StringPrototype, {\\n        substr: function substr(start, length) {\\n          return string_substr.call(this, start < 0 ? (start = this.length + start) < 0 ? 0 : start : start, length);\\n        }\\n      }, hasNegativeSubstrBug);\\n    }, {}], 16: [function (require, module, exports) {\\n      'use strict';\\n\\n      module.exports = [\\n      // streaming transports\\n      require('./transport/websocket'), require('./transport/xhr-streaming'), require('./transport/xdr-streaming'), require('./transport/eventsource'), require('./transport/lib/iframe-wrap')(require('./transport/eventsource'))\\n\\n      // polling transports\\n      , require('./transport/htmlfile'), require('./transport/lib/iframe-wrap')(require('./transport/htmlfile')), require('./transport/xhr-polling'), require('./transport/xdr-polling'), require('./transport/lib/iframe-wrap')(require('./transport/xhr-polling')), require('./transport/jsonp-polling')];\\n    }, { \\\"./transport/eventsource\\\": 20, \\\"./transport/htmlfile\\\": 21, \\\"./transport/jsonp-polling\\\": 23, \\\"./transport/lib/iframe-wrap\\\": 26, \\\"./transport/websocket\\\": 38, \\\"./transport/xdr-polling\\\": 39, \\\"./transport/xdr-streaming\\\": 40, \\\"./transport/xhr-polling\\\": 41, \\\"./transport/xhr-streaming\\\": 42 }], 17: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        var EventEmitter = require('events').EventEmitter,\\n            inherits = require('inherits'),\\n            utils = require('../../utils/event'),\\n            urlUtils = require('../../utils/url'),\\n            XHR = global.XMLHttpRequest;\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:browser:xhr');\\n        }\\n\\n        function AbstractXHRObject(method, url, payload, opts) {\\n          debug(method, url);\\n          var self = this;\\n          EventEmitter.call(this);\\n\\n          setTimeout(function () {\\n            self._start(method, url, payload, opts);\\n          }, 0);\\n        }\\n\\n        inherits(AbstractXHRObject, EventEmitter);\\n\\n        AbstractXHRObject.prototype._start = function (method, url, payload, opts) {\\n          var self = this;\\n\\n          try {\\n            this.xhr = new XHR();\\n          } catch (x) {\\n            // intentionally empty\\n          }\\n\\n          if (!this.xhr) {\\n            debug('no xhr');\\n            this.emit('finish', 0, 'no xhr support');\\n            this._cleanup();\\n            return;\\n          }\\n\\n          // several browsers cache POSTs\\n          url = urlUtils.addQuery(url, 't=' + +new Date());\\n\\n          // Explorer tends to keep connection open, even after the\\n          // tab gets closed: http://bugs.jquery.com/ticket/5280\\n          this.unloadRef = utils.unloadAdd(function () {\\n            debug('unload cleanup');\\n            self._cleanup(true);\\n          });\\n          try {\\n            this.xhr.open(method, url, true);\\n            if (this.timeout && 'timeout' in this.xhr) {\\n              this.xhr.timeout = this.timeout;\\n              this.xhr.ontimeout = function () {\\n                debug('xhr timeout');\\n                self.emit('finish', 0, '');\\n                self._cleanup(false);\\n              };\\n            }\\n          } catch (e) {\\n            debug('exception', e);\\n            // IE raises an exception on wrong port.\\n            this.emit('finish', 0, '');\\n            this._cleanup(false);\\n            return;\\n          }\\n\\n          if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\\n            debug('withCredentials');\\n            // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :\\n            // \\\"This never affects same-site requests.\\\"\\n\\n            this.xhr.withCredentials = 'true';\\n          }\\n          if (opts && opts.headers) {\\n            for (var key in opts.headers) {\\n              this.xhr.setRequestHeader(key, opts.headers[key]);\\n            }\\n          }\\n\\n          this.xhr.onreadystatechange = function () {\\n            if (self.xhr) {\\n              var x = self.xhr;\\n              var text, status;\\n              debug('readyState', x.readyState);\\n              switch (x.readyState) {\\n                case 3:\\n                  // IE doesn't like peeking into responseText or status\\n                  // on Microsoft.XMLHTTP and readystate=3\\n                  try {\\n                    status = x.status;\\n                    text = x.responseText;\\n                  } catch (e) {\\n                    // intentionally empty\\n                  }\\n                  debug('status', status);\\n                  // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\\n                  if (status === 1223) {\\n                    status = 204;\\n                  }\\n\\n                  // IE does return readystate == 3 for 404 answers.\\n                  if (status === 200 && text && text.length > 0) {\\n                    debug('chunk');\\n                    self.emit('chunk', status, text);\\n                  }\\n                  break;\\n                case 4:\\n                  status = x.status;\\n                  debug('status', status);\\n                  // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\\n                  if (status === 1223) {\\n                    status = 204;\\n                  }\\n                  // IE returns this for a bad port\\n                  // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\\n                  if (status === 12005 || status === 12029) {\\n                    status = 0;\\n                  }\\n\\n                  debug('finish', status, x.responseText);\\n                  self.emit('finish', status, x.responseText);\\n                  self._cleanup(false);\\n                  break;\\n              }\\n            }\\n          };\\n\\n          try {\\n            self.xhr.send(payload);\\n          } catch (e) {\\n            self.emit('finish', 0, '');\\n            self._cleanup(false);\\n          }\\n        };\\n\\n        AbstractXHRObject.prototype._cleanup = function (abort) {\\n          debug('cleanup');\\n          if (!this.xhr) {\\n            return;\\n          }\\n          this.removeAllListeners();\\n          utils.unloadDel(this.unloadRef);\\n\\n          // IE needs this field to be a function\\n          this.xhr.onreadystatechange = function () {};\\n          if (this.xhr.ontimeout) {\\n            this.xhr.ontimeout = null;\\n          }\\n\\n          if (abort) {\\n            try {\\n              this.xhr.abort();\\n            } catch (x) {\\n              // intentionally empty\\n            }\\n          }\\n          this.unloadRef = this.xhr = null;\\n        };\\n\\n        AbstractXHRObject.prototype.close = function () {\\n          debug('close');\\n          this._cleanup(true);\\n        };\\n\\n        AbstractXHRObject.enabled = !!XHR;\\n        // override XMLHttpRequest for IE6/7\\n        // obfuscate to avoid firewalls\\n        var axo = ['Active'].concat('Object').join('X');\\n        if (!AbstractXHRObject.enabled && axo in global) {\\n          debug('overriding xmlhttprequest');\\n          XHR = function XHR() {\\n            try {\\n              return new global[axo]('Microsoft.XMLHTTP');\\n            } catch (e) {\\n              return null;\\n            }\\n          };\\n          AbstractXHRObject.enabled = !!new XHR();\\n        }\\n\\n        var cors = false;\\n        try {\\n          cors = 'withCredentials' in new XHR();\\n        } catch (ignored) {\\n          // intentionally empty\\n        }\\n\\n        AbstractXHRObject.supportsCORS = cors;\\n\\n        module.exports = AbstractXHRObject;\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"../../utils/event\\\": 46, \\\"../../utils/url\\\": 52, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 18: [function (require, module, exports) {\\n      (function (global) {\\n        module.exports = global.EventSource;\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, {}], 19: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        var Driver = global.WebSocket || global.MozWebSocket;\\n        if (Driver) {\\n          module.exports = function WebSocketBrowserDriver(url) {\\n            return new Driver(url);\\n          };\\n        } else {\\n          module.exports = undefined;\\n        }\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, {}], 20: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          AjaxBasedTransport = require('./lib/ajax-based'),\\n          EventSourceReceiver = require('./receiver/eventsource'),\\n          XHRCorsObject = require('./sender/xhr-cors'),\\n          EventSourceDriver = require('eventsource');\\n\\n      function EventSourceTransport(transUrl) {\\n        if (!EventSourceTransport.enabled()) {\\n          throw new Error('Transport created when disabled');\\n        }\\n\\n        AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);\\n      }\\n\\n      inherits(EventSourceTransport, AjaxBasedTransport);\\n\\n      EventSourceTransport.enabled = function () {\\n        return !!EventSourceDriver;\\n      };\\n\\n      EventSourceTransport.transportName = 'eventsource';\\n      EventSourceTransport.roundTrips = 2;\\n\\n      module.exports = EventSourceTransport;\\n    }, { \\\"./lib/ajax-based\\\": 24, \\\"./receiver/eventsource\\\": 29, \\\"./sender/xhr-cors\\\": 35, \\\"eventsource\\\": 18, \\\"inherits\\\": 57 }], 21: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          HtmlfileReceiver = require('./receiver/htmlfile'),\\n          XHRLocalObject = require('./sender/xhr-local'),\\n          AjaxBasedTransport = require('./lib/ajax-based');\\n\\n      function HtmlFileTransport(transUrl) {\\n        if (!HtmlfileReceiver.enabled) {\\n          throw new Error('Transport created when disabled');\\n        }\\n        AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);\\n      }\\n\\n      inherits(HtmlFileTransport, AjaxBasedTransport);\\n\\n      HtmlFileTransport.enabled = function (info) {\\n        return HtmlfileReceiver.enabled && info.sameOrigin;\\n      };\\n\\n      HtmlFileTransport.transportName = 'htmlfile';\\n      HtmlFileTransport.roundTrips = 2;\\n\\n      module.exports = HtmlFileTransport;\\n    }, { \\\"./lib/ajax-based\\\": 24, \\\"./receiver/htmlfile\\\": 30, \\\"./sender/xhr-local\\\": 37, \\\"inherits\\\": 57 }], 22: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        // Few cool transports do work only for same-origin. In order to make\\n        // them work cross-domain we shall use iframe, served from the\\n        // remote domain. New browsers have capabilities to communicate with\\n        // cross domain iframe using postMessage(). In IE it was implemented\\n        // from IE 8+, but of course, IE got some details wrong:\\n        //    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx\\n        //    http://stevesouders.com/misc/test-postmessage.php\\n\\n        var inherits = require('inherits'),\\n            JSON3 = require('json3'),\\n            EventEmitter = require('events').EventEmitter,\\n            version = require('../version'),\\n            urlUtils = require('../utils/url'),\\n            iframeUtils = require('../utils/iframe'),\\n            eventUtils = require('../utils/event'),\\n            random = require('../utils/random');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:transport:iframe');\\n        }\\n\\n        function IframeTransport(transport, transUrl, baseUrl) {\\n          if (!IframeTransport.enabled()) {\\n            throw new Error('Transport created when disabled');\\n          }\\n          EventEmitter.call(this);\\n\\n          var self = this;\\n          this.origin = urlUtils.getOrigin(baseUrl);\\n          this.baseUrl = baseUrl;\\n          this.transUrl = transUrl;\\n          this.transport = transport;\\n          this.windowId = random.string(8);\\n\\n          var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;\\n          debug(transport, transUrl, iframeUrl);\\n\\n          this.iframeObj = iframeUtils.createIframe(iframeUrl, function (r) {\\n            debug('err callback');\\n            self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');\\n            self.close();\\n          });\\n\\n          this.onmessageCallback = this._message.bind(this);\\n          eventUtils.attachEvent('message', this.onmessageCallback);\\n        }\\n\\n        inherits(IframeTransport, EventEmitter);\\n\\n        IframeTransport.prototype.close = function () {\\n          debug('close');\\n          this.removeAllListeners();\\n          if (this.iframeObj) {\\n            eventUtils.detachEvent('message', this.onmessageCallback);\\n            try {\\n              // When the iframe is not loaded, IE raises an exception\\n              // on 'contentWindow'.\\n              this.postMessage('c');\\n            } catch (x) {\\n              // intentionally empty\\n            }\\n            this.iframeObj.cleanup();\\n            this.iframeObj = null;\\n            this.onmessageCallback = this.iframeObj = null;\\n          }\\n        };\\n\\n        IframeTransport.prototype._message = function (e) {\\n          debug('message', e.data);\\n          if (!urlUtils.isOriginEqual(e.origin, this.origin)) {\\n            debug('not same origin', e.origin, this.origin);\\n            return;\\n          }\\n\\n          var iframeMessage;\\n          try {\\n            iframeMessage = JSON3.parse(e.data);\\n          } catch (ignored) {\\n            debug('bad json', e.data);\\n            return;\\n          }\\n\\n          if (iframeMessage.windowId !== this.windowId) {\\n            debug('mismatched window id', iframeMessage.windowId, this.windowId);\\n            return;\\n          }\\n\\n          switch (iframeMessage.type) {\\n            case 's':\\n              this.iframeObj.loaded();\\n              // window global dependency\\n              this.postMessage('s', JSON3.stringify([version, this.transport, this.transUrl, this.baseUrl]));\\n              break;\\n            case 't':\\n              this.emit('message', iframeMessage.data);\\n              break;\\n            case 'c':\\n              var cdata;\\n              try {\\n                cdata = JSON3.parse(iframeMessage.data);\\n              } catch (ignored) {\\n                debug('bad json', iframeMessage.data);\\n                return;\\n              }\\n              this.emit('close', cdata[0], cdata[1]);\\n              this.close();\\n              break;\\n          }\\n        };\\n\\n        IframeTransport.prototype.postMessage = function (type, data) {\\n          debug('postMessage', type, data);\\n          this.iframeObj.post(JSON3.stringify({\\n            windowId: this.windowId,\\n            type: type,\\n            data: data || ''\\n          }), this.origin);\\n        };\\n\\n        IframeTransport.prototype.send = function (message) {\\n          debug('send', message);\\n          this.postMessage('m', message);\\n        };\\n\\n        IframeTransport.enabled = function () {\\n          return iframeUtils.iframeEnabled;\\n        };\\n\\n        IframeTransport.transportName = 'iframe';\\n        IframeTransport.roundTrips = 2;\\n\\n        module.exports = IframeTransport;\\n      }).call(this, { env: {} });\\n    }, { \\\"../utils/event\\\": 46, \\\"../utils/iframe\\\": 47, \\\"../utils/random\\\": 50, \\\"../utils/url\\\": 52, \\\"../version\\\": 53, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57, \\\"json3\\\": 58 }], 23: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        // The simplest and most robust transport, using the well-know cross\\n        // domain hack - JSONP. This transport is quite inefficient - one\\n        // message could use up to one http request. But at least it works almost\\n        // everywhere.\\n        // Known limitations:\\n        //   o you will get a spinning cursor\\n        //   o for Konqueror a dumb timer is needed to detect errors\\n\\n        var inherits = require('inherits'),\\n            SenderReceiver = require('./lib/sender-receiver'),\\n            JsonpReceiver = require('./receiver/jsonp'),\\n            jsonpSender = require('./sender/jsonp');\\n\\n        function JsonPTransport(transUrl) {\\n          if (!JsonPTransport.enabled()) {\\n            throw new Error('Transport created when disabled');\\n          }\\n          SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);\\n        }\\n\\n        inherits(JsonPTransport, SenderReceiver);\\n\\n        JsonPTransport.enabled = function () {\\n          return !!global.document;\\n        };\\n\\n        JsonPTransport.transportName = 'jsonp-polling';\\n        JsonPTransport.roundTrips = 1;\\n        JsonPTransport.needBody = true;\\n\\n        module.exports = JsonPTransport;\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"./lib/sender-receiver\\\": 28, \\\"./receiver/jsonp\\\": 31, \\\"./sender/jsonp\\\": 33, \\\"inherits\\\": 57 }], 24: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            urlUtils = require('../../utils/url'),\\n            SenderReceiver = require('./sender-receiver');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:ajax-based');\\n        }\\n\\n        function createAjaxSender(AjaxObject) {\\n          return function (url, payload, callback) {\\n            debug('create ajax sender', url, payload);\\n            var opt = {};\\n            if (typeof payload === 'string') {\\n              opt.headers = { 'Content-type': 'text/plain' };\\n            }\\n            var ajaxUrl = urlUtils.addPath(url, '/xhr_send');\\n            var xo = new AjaxObject('POST', ajaxUrl, payload, opt);\\n            xo.once('finish', function (status) {\\n              debug('finish', status);\\n              xo = null;\\n\\n              if (status !== 200 && status !== 204) {\\n                return callback(new Error('http status ' + status));\\n              }\\n              callback();\\n            });\\n            return function () {\\n              debug('abort');\\n              xo.close();\\n              xo = null;\\n\\n              var err = new Error('Aborted');\\n              err.code = 1000;\\n              callback(err);\\n            };\\n          };\\n        }\\n\\n        function AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {\\n          SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);\\n        }\\n\\n        inherits(AjaxBasedTransport, SenderReceiver);\\n\\n        module.exports = AjaxBasedTransport;\\n      }).call(this, { env: {} });\\n    }, { \\\"../../utils/url\\\": 52, \\\"./sender-receiver\\\": 28, \\\"debug\\\": 55, \\\"inherits\\\": 57 }], 25: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            EventEmitter = require('events').EventEmitter;\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:buffered-sender');\\n        }\\n\\n        function BufferedSender(url, sender) {\\n          debug(url);\\n          EventEmitter.call(this);\\n          this.sendBuffer = [];\\n          this.sender = sender;\\n          this.url = url;\\n        }\\n\\n        inherits(BufferedSender, EventEmitter);\\n\\n        BufferedSender.prototype.send = function (message) {\\n          debug('send', message);\\n          this.sendBuffer.push(message);\\n          if (!this.sendStop) {\\n            this.sendSchedule();\\n          }\\n        };\\n\\n        // For polling transports in a situation when in the message callback,\\n        // new message is being send. If the sending connection was started\\n        // before receiving one, it is possible to saturate the network and\\n        // timeout due to the lack of receiving socket. To avoid that we delay\\n        // sending messages by some small time, in order to let receiving\\n        // connection be started beforehand. This is only a halfmeasure and\\n        // does not fix the big problem, but it does make the tests go more\\n        // stable on slow networks.\\n        BufferedSender.prototype.sendScheduleWait = function () {\\n          debug('sendScheduleWait');\\n          var self = this;\\n          var tref;\\n          this.sendStop = function () {\\n            debug('sendStop');\\n            self.sendStop = null;\\n            clearTimeout(tref);\\n          };\\n          tref = setTimeout(function () {\\n            debug('timeout');\\n            self.sendStop = null;\\n            self.sendSchedule();\\n          }, 25);\\n        };\\n\\n        BufferedSender.prototype.sendSchedule = function () {\\n          debug('sendSchedule', this.sendBuffer.length);\\n          var self = this;\\n          if (this.sendBuffer.length > 0) {\\n            var payload = '[' + this.sendBuffer.join(',') + ']';\\n            this.sendStop = this.sender(this.url, payload, function (err) {\\n              self.sendStop = null;\\n              if (err) {\\n                debug('error', err);\\n                self.emit('close', err.code || 1006, 'Sending error: ' + err);\\n                self.close();\\n              } else {\\n                self.sendScheduleWait();\\n              }\\n            });\\n            this.sendBuffer = [];\\n          }\\n        };\\n\\n        BufferedSender.prototype._cleanup = function () {\\n          debug('_cleanup');\\n          this.removeAllListeners();\\n        };\\n\\n        BufferedSender.prototype.close = function () {\\n          debug('close');\\n          this._cleanup();\\n          if (this.sendStop) {\\n            this.sendStop();\\n            this.sendStop = null;\\n          }\\n        };\\n\\n        module.exports = BufferedSender;\\n      }).call(this, { env: {} });\\n    }, { \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 26: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            IframeTransport = require('../iframe'),\\n            objectUtils = require('../../utils/object');\\n\\n        module.exports = function (transport) {\\n\\n          function IframeWrapTransport(transUrl, baseUrl) {\\n            IframeTransport.call(this, transport.transportName, transUrl, baseUrl);\\n          }\\n\\n          inherits(IframeWrapTransport, IframeTransport);\\n\\n          IframeWrapTransport.enabled = function (url, info) {\\n            if (!global.document) {\\n              return false;\\n            }\\n\\n            var iframeInfo = objectUtils.extend({}, info);\\n            iframeInfo.sameOrigin = true;\\n            return transport.enabled(iframeInfo) && IframeTransport.enabled();\\n          };\\n\\n          IframeWrapTransport.transportName = 'iframe-' + transport.transportName;\\n          IframeWrapTransport.needBody = true;\\n          IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)\\n\\n          IframeWrapTransport.facadeTransport = transport;\\n\\n          return IframeWrapTransport;\\n        };\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"../../utils/object\\\": 49, \\\"../iframe\\\": 22, \\\"inherits\\\": 57 }], 27: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            EventEmitter = require('events').EventEmitter;\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:polling');\\n        }\\n\\n        function Polling(Receiver, receiveUrl, AjaxObject) {\\n          debug(receiveUrl);\\n          EventEmitter.call(this);\\n          this.Receiver = Receiver;\\n          this.receiveUrl = receiveUrl;\\n          this.AjaxObject = AjaxObject;\\n          this._scheduleReceiver();\\n        }\\n\\n        inherits(Polling, EventEmitter);\\n\\n        Polling.prototype._scheduleReceiver = function () {\\n          debug('_scheduleReceiver');\\n          var self = this;\\n          var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);\\n\\n          poll.on('message', function (msg) {\\n            debug('message', msg);\\n            self.emit('message', msg);\\n          });\\n\\n          poll.once('close', function (code, reason) {\\n            debug('close', code, reason, self.pollIsClosing);\\n            self.poll = poll = null;\\n\\n            if (!self.pollIsClosing) {\\n              if (reason === 'network') {\\n                self._scheduleReceiver();\\n              } else {\\n                self.emit('close', code || 1006, reason);\\n                self.removeAllListeners();\\n              }\\n            }\\n          });\\n        };\\n\\n        Polling.prototype.abort = function () {\\n          debug('abort');\\n          this.removeAllListeners();\\n          this.pollIsClosing = true;\\n          if (this.poll) {\\n            this.poll.abort();\\n          }\\n        };\\n\\n        module.exports = Polling;\\n      }).call(this, { env: {} });\\n    }, { \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 28: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            urlUtils = require('../../utils/url'),\\n            BufferedSender = require('./buffered-sender'),\\n            Polling = require('./polling');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:sender-receiver');\\n        }\\n\\n        function SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {\\n          var pollUrl = urlUtils.addPath(transUrl, urlSuffix);\\n          debug(pollUrl);\\n          var self = this;\\n          BufferedSender.call(this, transUrl, senderFunc);\\n\\n          this.poll = new Polling(Receiver, pollUrl, AjaxObject);\\n          this.poll.on('message', function (msg) {\\n            debug('poll message', msg);\\n            self.emit('message', msg);\\n          });\\n          this.poll.once('close', function (code, reason) {\\n            debug('poll close', code, reason);\\n            self.poll = null;\\n            self.emit('close', code, reason);\\n            self.close();\\n          });\\n        }\\n\\n        inherits(SenderReceiver, BufferedSender);\\n\\n        SenderReceiver.prototype.close = function () {\\n          BufferedSender.prototype.close.call(this);\\n          debug('close');\\n          this.removeAllListeners();\\n          if (this.poll) {\\n            this.poll.abort();\\n            this.poll = null;\\n          }\\n        };\\n\\n        module.exports = SenderReceiver;\\n      }).call(this, { env: {} });\\n    }, { \\\"../../utils/url\\\": 52, \\\"./buffered-sender\\\": 25, \\\"./polling\\\": 27, \\\"debug\\\": 55, \\\"inherits\\\": 57 }], 29: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            EventEmitter = require('events').EventEmitter,\\n            EventSourceDriver = require('eventsource');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:receiver:eventsource');\\n        }\\n\\n        function EventSourceReceiver(url) {\\n          debug(url);\\n          EventEmitter.call(this);\\n\\n          var self = this;\\n          var es = this.es = new EventSourceDriver(url);\\n          es.onmessage = function (e) {\\n            debug('message', e.data);\\n            self.emit('message', decodeURI(e.data));\\n          };\\n          es.onerror = function (e) {\\n            debug('error', es.readyState, e);\\n            // ES on reconnection has readyState = 0 or 1.\\n            // on network error it's CLOSED = 2\\n            var reason = es.readyState !== 2 ? 'network' : 'permanent';\\n            self._cleanup();\\n            self._close(reason);\\n          };\\n        }\\n\\n        inherits(EventSourceReceiver, EventEmitter);\\n\\n        EventSourceReceiver.prototype.abort = function () {\\n          debug('abort');\\n          this._cleanup();\\n          this._close('user');\\n        };\\n\\n        EventSourceReceiver.prototype._cleanup = function () {\\n          debug('cleanup');\\n          var es = this.es;\\n          if (es) {\\n            es.onmessage = es.onerror = null;\\n            es.close();\\n            this.es = null;\\n          }\\n        };\\n\\n        EventSourceReceiver.prototype._close = function (reason) {\\n          debug('close', reason);\\n          var self = this;\\n          // Safari and chrome < 15 crash if we close window before\\n          // waiting for ES cleanup. See:\\n          // https://code.google.com/p/chromium/issues/detail?id=89155\\n          setTimeout(function () {\\n            self.emit('close', null, reason);\\n            self.removeAllListeners();\\n          }, 200);\\n        };\\n\\n        module.exports = EventSourceReceiver;\\n      }).call(this, { env: {} });\\n    }, { \\\"debug\\\": 55, \\\"events\\\": 3, \\\"eventsource\\\": 18, \\\"inherits\\\": 57 }], 30: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            iframeUtils = require('../../utils/iframe'),\\n            urlUtils = require('../../utils/url'),\\n            EventEmitter = require('events').EventEmitter,\\n            random = require('../../utils/random');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:receiver:htmlfile');\\n        }\\n\\n        function HtmlfileReceiver(url) {\\n          debug(url);\\n          EventEmitter.call(this);\\n          var self = this;\\n          iframeUtils.polluteGlobalNamespace();\\n\\n          this.id = 'a' + random.string(6);\\n          url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));\\n\\n          debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);\\n          var constructFunc = HtmlfileReceiver.htmlfileEnabled ? iframeUtils.createHtmlfile : iframeUtils.createIframe;\\n\\n          global[iframeUtils.WPrefix][this.id] = {\\n            start: function start() {\\n              debug('start');\\n              self.iframeObj.loaded();\\n            },\\n            message: function message(data) {\\n              debug('message', data);\\n              self.emit('message', data);\\n            },\\n            stop: function stop() {\\n              debug('stop');\\n              self._cleanup();\\n              self._close('network');\\n            }\\n          };\\n          this.iframeObj = constructFunc(url, function () {\\n            debug('callback');\\n            self._cleanup();\\n            self._close('permanent');\\n          });\\n        }\\n\\n        inherits(HtmlfileReceiver, EventEmitter);\\n\\n        HtmlfileReceiver.prototype.abort = function () {\\n          debug('abort');\\n          this._cleanup();\\n          this._close('user');\\n        };\\n\\n        HtmlfileReceiver.prototype._cleanup = function () {\\n          debug('_cleanup');\\n          if (this.iframeObj) {\\n            this.iframeObj.cleanup();\\n            this.iframeObj = null;\\n          }\\n          delete global[iframeUtils.WPrefix][this.id];\\n        };\\n\\n        HtmlfileReceiver.prototype._close = function (reason) {\\n          debug('_close', reason);\\n          this.emit('close', null, reason);\\n          this.removeAllListeners();\\n        };\\n\\n        HtmlfileReceiver.htmlfileEnabled = false;\\n\\n        // obfuscate to avoid firewalls\\n        var axo = ['Active'].concat('Object').join('X');\\n        if (axo in global) {\\n          try {\\n            HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');\\n          } catch (x) {\\n            // intentionally empty\\n          }\\n        }\\n\\n        HtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;\\n\\n        module.exports = HtmlfileReceiver;\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"../../utils/iframe\\\": 47, \\\"../../utils/random\\\": 50, \\\"../../utils/url\\\": 52, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 31: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        var utils = require('../../utils/iframe'),\\n            random = require('../../utils/random'),\\n            browser = require('../../utils/browser'),\\n            urlUtils = require('../../utils/url'),\\n            inherits = require('inherits'),\\n            EventEmitter = require('events').EventEmitter;\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:receiver:jsonp');\\n        }\\n\\n        function JsonpReceiver(url) {\\n          debug(url);\\n          var self = this;\\n          EventEmitter.call(this);\\n\\n          utils.polluteGlobalNamespace();\\n\\n          this.id = 'a' + random.string(6);\\n          var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));\\n\\n          global[utils.WPrefix][this.id] = this._callback.bind(this);\\n          this._createScript(urlWithId);\\n\\n          // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.\\n          this.timeoutId = setTimeout(function () {\\n            debug('timeout');\\n            self._abort(new Error('JSONP script loaded abnormally (timeout)'));\\n          }, JsonpReceiver.timeout);\\n        }\\n\\n        inherits(JsonpReceiver, EventEmitter);\\n\\n        JsonpReceiver.prototype.abort = function () {\\n          debug('abort');\\n          if (global[utils.WPrefix][this.id]) {\\n            var err = new Error('JSONP user aborted read');\\n            err.code = 1000;\\n            this._abort(err);\\n          }\\n        };\\n\\n        JsonpReceiver.timeout = 35000;\\n        JsonpReceiver.scriptErrorTimeout = 1000;\\n\\n        JsonpReceiver.prototype._callback = function (data) {\\n          debug('_callback', data);\\n          this._cleanup();\\n\\n          if (this.aborting) {\\n            return;\\n          }\\n\\n          if (data) {\\n            debug('message', data);\\n            this.emit('message', data);\\n          }\\n          this.emit('close', null, 'network');\\n          this.removeAllListeners();\\n        };\\n\\n        JsonpReceiver.prototype._abort = function (err) {\\n          debug('_abort', err);\\n          this._cleanup();\\n          this.aborting = true;\\n          this.emit('close', err.code, err.message);\\n          this.removeAllListeners();\\n        };\\n\\n        JsonpReceiver.prototype._cleanup = function () {\\n          debug('_cleanup');\\n          clearTimeout(this.timeoutId);\\n          if (this.script2) {\\n            this.script2.parentNode.removeChild(this.script2);\\n            this.script2 = null;\\n          }\\n          if (this.script) {\\n            var script = this.script;\\n            // Unfortunately, you can't really abort script loading of\\n            // the script.\\n            script.parentNode.removeChild(script);\\n            script.onreadystatechange = script.onerror = script.onload = script.onclick = null;\\n            this.script = null;\\n          }\\n          delete global[utils.WPrefix][this.id];\\n        };\\n\\n        JsonpReceiver.prototype._scriptError = function () {\\n          debug('_scriptError');\\n          var self = this;\\n          if (this.errorTimer) {\\n            return;\\n          }\\n\\n          this.errorTimer = setTimeout(function () {\\n            if (!self.loadedOkay) {\\n              self._abort(new Error('JSONP script loaded abnormally (onerror)'));\\n            }\\n          }, JsonpReceiver.scriptErrorTimeout);\\n        };\\n\\n        JsonpReceiver.prototype._createScript = function (url) {\\n          debug('_createScript', url);\\n          var self = this;\\n          var script = this.script = global.document.createElement('script');\\n          var script2; // Opera synchronous load trick.\\n\\n          script.id = 'a' + random.string(8);\\n          script.src = url;\\n          script.type = 'text/javascript';\\n          script.charset = 'UTF-8';\\n          script.onerror = this._scriptError.bind(this);\\n          script.onload = function () {\\n            debug('onload');\\n            self._abort(new Error('JSONP script loaded abnormally (onload)'));\\n          };\\n\\n          // IE9 fires 'error' event after onreadystatechange or before, in random order.\\n          // Use loadedOkay to determine if actually errored\\n          script.onreadystatechange = function () {\\n            debug('onreadystatechange', script.readyState);\\n            if (/loaded|closed/.test(script.readyState)) {\\n              if (script && script.htmlFor && script.onclick) {\\n                self.loadedOkay = true;\\n                try {\\n                  // In IE, actually execute the script.\\n                  script.onclick();\\n                } catch (x) {\\n                  // intentionally empty\\n                }\\n              }\\n              if (script) {\\n                self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));\\n              }\\n            }\\n          };\\n          // IE: event/htmlFor/onclick trick.\\n          // One can't rely on proper order for onreadystatechange. In order to\\n          // make sure, set a 'htmlFor' and 'event' properties, so that\\n          // script code will be installed as 'onclick' handler for the\\n          // script object. Later, onreadystatechange, manually execute this\\n          // code. FF and Chrome doesn't work with 'event' and 'htmlFor'\\n          // set. For reference see:\\n          //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\\n          // Also, read on that about script ordering:\\n          //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\\n          if (typeof script.async === 'undefined' && global.document.attachEvent) {\\n            // According to mozilla docs, in recent browsers script.async defaults\\n            // to 'true', so we may use it to detect a good browser:\\n            // https://developer.mozilla.org/en/HTML/Element/script\\n            if (!browser.isOpera()) {\\n              // Naively assume we're in IE\\n              try {\\n                script.htmlFor = script.id;\\n                script.event = 'onclick';\\n              } catch (x) {\\n                // intentionally empty\\n              }\\n              script.async = true;\\n            } else {\\n              // Opera, second sync script hack\\n              script2 = this.script2 = global.document.createElement('script');\\n              script2.text = \\\"try{var a = document.getElementById('\\\" + script.id + \\\"'); if(a)a.onerror();}catch(x){};\\\";\\n              script.async = script2.async = false;\\n            }\\n          }\\n          if (typeof script.async !== 'undefined') {\\n            script.async = true;\\n          }\\n\\n          var head = global.document.getElementsByTagName('head')[0];\\n          head.insertBefore(script, head.firstChild);\\n          if (script2) {\\n            head.insertBefore(script2, head.firstChild);\\n          }\\n        };\\n\\n        module.exports = JsonpReceiver;\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"../../utils/browser\\\": 44, \\\"../../utils/iframe\\\": 47, \\\"../../utils/random\\\": 50, \\\"../../utils/url\\\": 52, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 32: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            EventEmitter = require('events').EventEmitter;\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:receiver:xhr');\\n        }\\n\\n        function XhrReceiver(url, AjaxObject) {\\n          debug(url);\\n          EventEmitter.call(this);\\n          var self = this;\\n\\n          this.bufferPosition = 0;\\n\\n          this.xo = new AjaxObject('POST', url, null);\\n          this.xo.on('chunk', this._chunkHandler.bind(this));\\n          this.xo.once('finish', function (status, text) {\\n            debug('finish', status, text);\\n            self._chunkHandler(status, text);\\n            self.xo = null;\\n            var reason = status === 200 ? 'network' : 'permanent';\\n            debug('close', reason);\\n            self.emit('close', null, reason);\\n            self._cleanup();\\n          });\\n        }\\n\\n        inherits(XhrReceiver, EventEmitter);\\n\\n        XhrReceiver.prototype._chunkHandler = function (status, text) {\\n          debug('_chunkHandler', status);\\n          if (status !== 200 || !text) {\\n            return;\\n          }\\n\\n          for (var idx = -1;; this.bufferPosition += idx + 1) {\\n            var buf = text.slice(this.bufferPosition);\\n            idx = buf.indexOf('\\\\n');\\n            if (idx === -1) {\\n              break;\\n            }\\n            var msg = buf.slice(0, idx);\\n            if (msg) {\\n              debug('message', msg);\\n              this.emit('message', msg);\\n            }\\n          }\\n        };\\n\\n        XhrReceiver.prototype._cleanup = function () {\\n          debug('_cleanup');\\n          this.removeAllListeners();\\n        };\\n\\n        XhrReceiver.prototype.abort = function () {\\n          debug('abort');\\n          if (this.xo) {\\n            this.xo.close();\\n            debug('close');\\n            this.emit('close', null, 'user');\\n            this.xo = null;\\n          }\\n          this._cleanup();\\n        };\\n\\n        module.exports = XhrReceiver;\\n      }).call(this, { env: {} });\\n    }, { \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 33: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        var random = require('../../utils/random'),\\n            urlUtils = require('../../utils/url');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:sender:jsonp');\\n        }\\n\\n        var form, area;\\n\\n        function createIframe(id) {\\n          debug('createIframe', id);\\n          try {\\n            // ie6 dynamic iframes with target=\\\"\\\" support (thanks Chris Lambacher)\\n            return global.document.createElement('<iframe name=\\\"' + id + '\\\">');\\n          } catch (x) {\\n            var iframe = global.document.createElement('iframe');\\n            iframe.name = id;\\n            return iframe;\\n          }\\n        }\\n\\n        function createForm() {\\n          debug('createForm');\\n          form = global.document.createElement('form');\\n          form.style.display = 'none';\\n          form.style.position = 'absolute';\\n          form.method = 'POST';\\n          form.enctype = 'application/x-www-form-urlencoded';\\n          form.acceptCharset = 'UTF-8';\\n\\n          area = global.document.createElement('textarea');\\n          area.name = 'd';\\n          form.appendChild(area);\\n\\n          global.document.body.appendChild(form);\\n        }\\n\\n        module.exports = function (url, payload, callback) {\\n          debug(url, payload);\\n          if (!form) {\\n            createForm();\\n          }\\n          var id = 'a' + random.string(8);\\n          form.target = id;\\n          form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\\n\\n          var iframe = createIframe(id);\\n          iframe.id = id;\\n          iframe.style.display = 'none';\\n          form.appendChild(iframe);\\n\\n          try {\\n            area.value = payload;\\n          } catch (e) {\\n            // seriously broken browsers get here\\n          }\\n          form.submit();\\n\\n          var completed = function completed(err) {\\n            debug('completed', id, err);\\n            if (!iframe.onerror) {\\n              return;\\n            }\\n            iframe.onreadystatechange = iframe.onerror = iframe.onload = null;\\n            // Opera mini doesn't like if we GC iframe\\n            // immediately, thus this timeout.\\n            setTimeout(function () {\\n              debug('cleaning up', id);\\n              iframe.parentNode.removeChild(iframe);\\n              iframe = null;\\n            }, 500);\\n            area.value = '';\\n            // It is not possible to detect if the iframe succeeded or\\n            // failed to submit our form.\\n            callback(err);\\n          };\\n          iframe.onerror = function () {\\n            debug('onerror', id);\\n            completed();\\n          };\\n          iframe.onload = function () {\\n            debug('onload', id);\\n            completed();\\n          };\\n          iframe.onreadystatechange = function (e) {\\n            debug('onreadystatechange', id, iframe.readyState, e);\\n            if (iframe.readyState === 'complete') {\\n              completed();\\n            }\\n          };\\n          return function () {\\n            debug('aborted', id);\\n            completed(new Error('Aborted'));\\n          };\\n        };\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"../../utils/random\\\": 50, \\\"../../utils/url\\\": 52, \\\"debug\\\": 55 }], 34: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        var EventEmitter = require('events').EventEmitter,\\n            inherits = require('inherits'),\\n            eventUtils = require('../../utils/event'),\\n            browser = require('../../utils/browser'),\\n            urlUtils = require('../../utils/url');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:sender:xdr');\\n        }\\n\\n        // References:\\n        //   http://ajaxian.com/archives/100-line-ajax-wrapper\\n        //   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx\\n\\n        function XDRObject(method, url, payload) {\\n          debug(method, url);\\n          var self = this;\\n          EventEmitter.call(this);\\n\\n          setTimeout(function () {\\n            self._start(method, url, payload);\\n          }, 0);\\n        }\\n\\n        inherits(XDRObject, EventEmitter);\\n\\n        XDRObject.prototype._start = function (method, url, payload) {\\n          debug('_start');\\n          var self = this;\\n          var xdr = new global.XDomainRequest();\\n          // IE caches even POSTs\\n          url = urlUtils.addQuery(url, 't=' + +new Date());\\n\\n          xdr.onerror = function () {\\n            debug('onerror');\\n            self._error();\\n          };\\n          xdr.ontimeout = function () {\\n            debug('ontimeout');\\n            self._error();\\n          };\\n          xdr.onprogress = function () {\\n            debug('progress', xdr.responseText);\\n            self.emit('chunk', 200, xdr.responseText);\\n          };\\n          xdr.onload = function () {\\n            debug('load');\\n            self.emit('finish', 200, xdr.responseText);\\n            self._cleanup(false);\\n          };\\n          this.xdr = xdr;\\n          this.unloadRef = eventUtils.unloadAdd(function () {\\n            self._cleanup(true);\\n          });\\n          try {\\n            // Fails with AccessDenied if port number is bogus\\n            this.xdr.open(method, url);\\n            if (this.timeout) {\\n              this.xdr.timeout = this.timeout;\\n            }\\n            this.xdr.send(payload);\\n          } catch (x) {\\n            this._error();\\n          }\\n        };\\n\\n        XDRObject.prototype._error = function () {\\n          this.emit('finish', 0, '');\\n          this._cleanup(false);\\n        };\\n\\n        XDRObject.prototype._cleanup = function (abort) {\\n          debug('cleanup', abort);\\n          if (!this.xdr) {\\n            return;\\n          }\\n          this.removeAllListeners();\\n          eventUtils.unloadDel(this.unloadRef);\\n\\n          this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;\\n          if (abort) {\\n            try {\\n              this.xdr.abort();\\n            } catch (x) {\\n              // intentionally empty\\n            }\\n          }\\n          this.unloadRef = this.xdr = null;\\n        };\\n\\n        XDRObject.prototype.close = function () {\\n          debug('close');\\n          this._cleanup(true);\\n        };\\n\\n        // IE 8/9 if the request target uses the same scheme - #79\\n        XDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());\\n\\n        module.exports = XDRObject;\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"../../utils/browser\\\": 44, \\\"../../utils/event\\\": 46, \\\"../../utils/url\\\": 52, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 35: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          XhrDriver = require('../driver/xhr');\\n\\n      function XHRCorsObject(method, url, payload, opts) {\\n        XhrDriver.call(this, method, url, payload, opts);\\n      }\\n\\n      inherits(XHRCorsObject, XhrDriver);\\n\\n      XHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;\\n\\n      module.exports = XHRCorsObject;\\n    }, { \\\"../driver/xhr\\\": 17, \\\"inherits\\\": 57 }], 36: [function (require, module, exports) {\\n      'use strict';\\n\\n      var EventEmitter = require('events').EventEmitter,\\n          inherits = require('inherits');\\n\\n      function XHRFake() /* method, url, payload, opts */{\\n        var self = this;\\n        EventEmitter.call(this);\\n\\n        this.to = setTimeout(function () {\\n          self.emit('finish', 200, '{}');\\n        }, XHRFake.timeout);\\n      }\\n\\n      inherits(XHRFake, EventEmitter);\\n\\n      XHRFake.prototype.close = function () {\\n        clearTimeout(this.to);\\n      };\\n\\n      XHRFake.timeout = 2000;\\n\\n      module.exports = XHRFake;\\n    }, { \\\"events\\\": 3, \\\"inherits\\\": 57 }], 37: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          XhrDriver = require('../driver/xhr');\\n\\n      function XHRLocalObject(method, url, payload /*, opts */) {\\n        XhrDriver.call(this, method, url, payload, {\\n          noCredentials: true\\n        });\\n      }\\n\\n      inherits(XHRLocalObject, XhrDriver);\\n\\n      XHRLocalObject.enabled = XhrDriver.enabled;\\n\\n      module.exports = XHRLocalObject;\\n    }, { \\\"../driver/xhr\\\": 17, \\\"inherits\\\": 57 }], 38: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var utils = require('../utils/event'),\\n            urlUtils = require('../utils/url'),\\n            inherits = require('inherits'),\\n            EventEmitter = require('events').EventEmitter,\\n            WebsocketDriver = require('./driver/websocket');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:websocket');\\n        }\\n\\n        function WebSocketTransport(transUrl, ignore, options) {\\n          if (!WebSocketTransport.enabled()) {\\n            throw new Error('Transport created when disabled');\\n          }\\n\\n          EventEmitter.call(this);\\n          debug('constructor', transUrl);\\n\\n          var self = this;\\n          var url = urlUtils.addPath(transUrl, '/websocket');\\n          if (url.slice(0, 5) === 'https') {\\n            url = 'wss' + url.slice(5);\\n          } else {\\n            url = 'ws' + url.slice(4);\\n          }\\n          this.url = url;\\n\\n          this.ws = new WebsocketDriver(this.url, [], options);\\n          this.ws.onmessage = function (e) {\\n            debug('message event', e.data);\\n            self.emit('message', e.data);\\n          };\\n          // Firefox has an interesting bug. If a websocket connection is\\n          // created after onunload, it stays alive even when user\\n          // navigates away from the page. In such situation let's lie -\\n          // let's not open the ws connection at all. See:\\n          // https://github.com/sockjs/sockjs-client/issues/28\\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\\n          this.unloadRef = utils.unloadAdd(function () {\\n            debug('unload');\\n            self.ws.close();\\n          });\\n          this.ws.onclose = function (e) {\\n            debug('close event', e.code, e.reason);\\n            self.emit('close', e.code, e.reason);\\n            self._cleanup();\\n          };\\n          this.ws.onerror = function (e) {\\n            debug('error event', e);\\n            self.emit('close', 1006, 'WebSocket connection broken');\\n            self._cleanup();\\n          };\\n        }\\n\\n        inherits(WebSocketTransport, EventEmitter);\\n\\n        WebSocketTransport.prototype.send = function (data) {\\n          var msg = '[' + data + ']';\\n          debug('send', msg);\\n          this.ws.send(msg);\\n        };\\n\\n        WebSocketTransport.prototype.close = function () {\\n          debug('close');\\n          var ws = this.ws;\\n          this._cleanup();\\n          if (ws) {\\n            ws.close();\\n          }\\n        };\\n\\n        WebSocketTransport.prototype._cleanup = function () {\\n          debug('_cleanup');\\n          var ws = this.ws;\\n          if (ws) {\\n            ws.onmessage = ws.onclose = ws.onerror = null;\\n          }\\n          utils.unloadDel(this.unloadRef);\\n          this.unloadRef = this.ws = null;\\n          this.removeAllListeners();\\n        };\\n\\n        WebSocketTransport.enabled = function () {\\n          debug('enabled');\\n          return !!WebsocketDriver;\\n        };\\n        WebSocketTransport.transportName = 'websocket';\\n\\n        // In theory, ws should require 1 round trip. But in chrome, this is\\n        // not very stable over SSL. Most likely a ws connection requires a\\n        // separate SSL connection, in which case 2 round trips are an\\n        // absolute minumum.\\n        WebSocketTransport.roundTrips = 2;\\n\\n        module.exports = WebSocketTransport;\\n      }).call(this, { env: {} });\\n    }, { \\\"../utils/event\\\": 46, \\\"../utils/url\\\": 52, \\\"./driver/websocket\\\": 19, \\\"debug\\\": 55, \\\"events\\\": 3, \\\"inherits\\\": 57 }], 39: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          AjaxBasedTransport = require('./lib/ajax-based'),\\n          XdrStreamingTransport = require('./xdr-streaming'),\\n          XhrReceiver = require('./receiver/xhr'),\\n          XDRObject = require('./sender/xdr');\\n\\n      function XdrPollingTransport(transUrl) {\\n        if (!XDRObject.enabled) {\\n          throw new Error('Transport created when disabled');\\n        }\\n        AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);\\n      }\\n\\n      inherits(XdrPollingTransport, AjaxBasedTransport);\\n\\n      XdrPollingTransport.enabled = XdrStreamingTransport.enabled;\\n      XdrPollingTransport.transportName = 'xdr-polling';\\n      XdrPollingTransport.roundTrips = 2; // preflight, ajax\\n\\n      module.exports = XdrPollingTransport;\\n    }, { \\\"./lib/ajax-based\\\": 24, \\\"./receiver/xhr\\\": 32, \\\"./sender/xdr\\\": 34, \\\"./xdr-streaming\\\": 40, \\\"inherits\\\": 57 }], 40: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          AjaxBasedTransport = require('./lib/ajax-based'),\\n          XhrReceiver = require('./receiver/xhr'),\\n          XDRObject = require('./sender/xdr');\\n\\n      // According to:\\n      //   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests\\n      //   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\\n\\n      function XdrStreamingTransport(transUrl) {\\n        if (!XDRObject.enabled) {\\n          throw new Error('Transport created when disabled');\\n        }\\n        AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);\\n      }\\n\\n      inherits(XdrStreamingTransport, AjaxBasedTransport);\\n\\n      XdrStreamingTransport.enabled = function (info) {\\n        if (info.cookie_needed || info.nullOrigin) {\\n          return false;\\n        }\\n        return XDRObject.enabled && info.sameScheme;\\n      };\\n\\n      XdrStreamingTransport.transportName = 'xdr-streaming';\\n      XdrStreamingTransport.roundTrips = 2; // preflight, ajax\\n\\n      module.exports = XdrStreamingTransport;\\n    }, { \\\"./lib/ajax-based\\\": 24, \\\"./receiver/xhr\\\": 32, \\\"./sender/xdr\\\": 34, \\\"inherits\\\": 57 }], 41: [function (require, module, exports) {\\n      'use strict';\\n\\n      var inherits = require('inherits'),\\n          AjaxBasedTransport = require('./lib/ajax-based'),\\n          XhrReceiver = require('./receiver/xhr'),\\n          XHRCorsObject = require('./sender/xhr-cors'),\\n          XHRLocalObject = require('./sender/xhr-local');\\n\\n      function XhrPollingTransport(transUrl) {\\n        if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\\n          throw new Error('Transport created when disabled');\\n        }\\n        AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);\\n      }\\n\\n      inherits(XhrPollingTransport, AjaxBasedTransport);\\n\\n      XhrPollingTransport.enabled = function (info) {\\n        if (info.nullOrigin) {\\n          return false;\\n        }\\n\\n        if (XHRLocalObject.enabled && info.sameOrigin) {\\n          return true;\\n        }\\n        return XHRCorsObject.enabled;\\n      };\\n\\n      XhrPollingTransport.transportName = 'xhr-polling';\\n      XhrPollingTransport.roundTrips = 2; // preflight, ajax\\n\\n      module.exports = XhrPollingTransport;\\n    }, { \\\"./lib/ajax-based\\\": 24, \\\"./receiver/xhr\\\": 32, \\\"./sender/xhr-cors\\\": 35, \\\"./sender/xhr-local\\\": 37, \\\"inherits\\\": 57 }], 42: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        var inherits = require('inherits'),\\n            AjaxBasedTransport = require('./lib/ajax-based'),\\n            XhrReceiver = require('./receiver/xhr'),\\n            XHRCorsObject = require('./sender/xhr-cors'),\\n            XHRLocalObject = require('./sender/xhr-local'),\\n            browser = require('../utils/browser');\\n\\n        function XhrStreamingTransport(transUrl) {\\n          if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\\n            throw new Error('Transport created when disabled');\\n          }\\n          AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);\\n        }\\n\\n        inherits(XhrStreamingTransport, AjaxBasedTransport);\\n\\n        XhrStreamingTransport.enabled = function (info) {\\n          if (info.nullOrigin) {\\n            return false;\\n          }\\n          // Opera doesn't support xhr-streaming #60\\n          // But it might be able to #92\\n          if (browser.isOpera()) {\\n            return false;\\n          }\\n\\n          return XHRCorsObject.enabled;\\n        };\\n\\n        XhrStreamingTransport.transportName = 'xhr-streaming';\\n        XhrStreamingTransport.roundTrips = 2; // preflight, ajax\\n\\n        // Safari gets confused when a streaming ajax request is started\\n        // before onload. This causes the load indicator to spin indefinetely.\\n        // Only require body when used in a browser\\n        XhrStreamingTransport.needBody = !!global.document;\\n\\n        module.exports = XhrStreamingTransport;\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"../utils/browser\\\": 44, \\\"./lib/ajax-based\\\": 24, \\\"./receiver/xhr\\\": 32, \\\"./sender/xhr-cors\\\": 35, \\\"./sender/xhr-local\\\": 37, \\\"inherits\\\": 57 }], 43: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        if (global.crypto && global.crypto.getRandomValues) {\\n          module.exports.randomBytes = function (length) {\\n            var bytes = new Uint8Array(length);\\n            global.crypto.getRandomValues(bytes);\\n            return bytes;\\n          };\\n        } else {\\n          module.exports.randomBytes = function (length) {\\n            var bytes = new Array(length);\\n            for (var i = 0; i < length; i++) {\\n              bytes[i] = Math.floor(Math.random() * 256);\\n            }\\n            return bytes;\\n          };\\n        }\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, {}], 44: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        module.exports = {\\n          isOpera: function isOpera() {\\n            return global.navigator && /opera/i.test(global.navigator.userAgent);\\n          },\\n\\n          isKonqueror: function isKonqueror() {\\n            return global.navigator && /konqueror/i.test(global.navigator.userAgent);\\n          }\\n\\n          // #187 wrap document.domain in try/catch because of WP8 from file:///\\n          , hasDomain: function hasDomain() {\\n            // non-browser client always has a domain\\n            if (!global.document) {\\n              return true;\\n            }\\n\\n            try {\\n              return !!global.document.domain;\\n            } catch (e) {\\n              return false;\\n            }\\n          }\\n        };\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, {}], 45: [function (require, module, exports) {\\n      'use strict';\\n\\n      var JSON3 = require('json3');\\n\\n      // Some extra characters that Chrome gets wrong, and substitutes with\\n      // something else on the wire.\\n      // eslint-disable-next-line no-control-regex\\n      var extraEscapable = /[\\\\x00-\\\\x1f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\\\u0300-\\\\u0333\\\\u033d-\\\\u0346\\\\u034a-\\\\u034c\\\\u0350-\\\\u0352\\\\u0357-\\\\u0358\\\\u035c-\\\\u0362\\\\u0374\\\\u037e\\\\u0387\\\\u0591-\\\\u05af\\\\u05c4\\\\u0610-\\\\u0617\\\\u0653-\\\\u0654\\\\u0657-\\\\u065b\\\\u065d-\\\\u065e\\\\u06df-\\\\u06e2\\\\u06eb-\\\\u06ec\\\\u0730\\\\u0732-\\\\u0733\\\\u0735-\\\\u0736\\\\u073a\\\\u073d\\\\u073f-\\\\u0741\\\\u0743\\\\u0745\\\\u0747\\\\u07eb-\\\\u07f1\\\\u0951\\\\u0958-\\\\u095f\\\\u09dc-\\\\u09dd\\\\u09df\\\\u0a33\\\\u0a36\\\\u0a59-\\\\u0a5b\\\\u0a5e\\\\u0b5c-\\\\u0b5d\\\\u0e38-\\\\u0e39\\\\u0f43\\\\u0f4d\\\\u0f52\\\\u0f57\\\\u0f5c\\\\u0f69\\\\u0f72-\\\\u0f76\\\\u0f78\\\\u0f80-\\\\u0f83\\\\u0f93\\\\u0f9d\\\\u0fa2\\\\u0fa7\\\\u0fac\\\\u0fb9\\\\u1939-\\\\u193a\\\\u1a17\\\\u1b6b\\\\u1cda-\\\\u1cdb\\\\u1dc0-\\\\u1dcf\\\\u1dfc\\\\u1dfe\\\\u1f71\\\\u1f73\\\\u1f75\\\\u1f77\\\\u1f79\\\\u1f7b\\\\u1f7d\\\\u1fbb\\\\u1fbe\\\\u1fc9\\\\u1fcb\\\\u1fd3\\\\u1fdb\\\\u1fe3\\\\u1feb\\\\u1fee-\\\\u1fef\\\\u1ff9\\\\u1ffb\\\\u1ffd\\\\u2000-\\\\u2001\\\\u20d0-\\\\u20d1\\\\u20d4-\\\\u20d7\\\\u20e7-\\\\u20e9\\\\u2126\\\\u212a-\\\\u212b\\\\u2329-\\\\u232a\\\\u2adc\\\\u302b-\\\\u302c\\\\uaab2-\\\\uaab3\\\\uf900-\\\\ufa0d\\\\ufa10\\\\ufa12\\\\ufa15-\\\\ufa1e\\\\ufa20\\\\ufa22\\\\ufa25-\\\\ufa26\\\\ufa2a-\\\\ufa2d\\\\ufa30-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb1d\\\\ufb1f\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4e\\\\ufff0-\\\\uffff]/g,\\n          extraLookup;\\n\\n      // This may be quite slow, so let's delay until user actually uses bad\\n      // characters.\\n      var unrollLookup = function unrollLookup(escapable) {\\n        var i;\\n        var unrolled = {};\\n        var c = [];\\n        for (i = 0; i < 65536; i++) {\\n          c.push(String.fromCharCode(i));\\n        }\\n        escapable.lastIndex = 0;\\n        c.join('').replace(escapable, function (a) {\\n          unrolled[a] = \\\"\\\\\\\\u\\\" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\\n          return '';\\n        });\\n        escapable.lastIndex = 0;\\n        return unrolled;\\n      };\\n\\n      // Quote string, also taking care of unicode characters that browsers\\n      // often break. Especially, take care of unicode surrogates:\\n      // http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates\\n      module.exports = {\\n        quote: function quote(string) {\\n          var quoted = JSON3.stringify(string);\\n\\n          // In most cases this should be very fast and good enough.\\n          extraEscapable.lastIndex = 0;\\n          if (!extraEscapable.test(quoted)) {\\n            return quoted;\\n          }\\n\\n          if (!extraLookup) {\\n            extraLookup = unrollLookup(extraEscapable);\\n          }\\n\\n          return quoted.replace(extraEscapable, function (a) {\\n            return extraLookup[a];\\n          });\\n        }\\n      };\\n    }, { \\\"json3\\\": 58 }], 46: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        var random = require('./random');\\n\\n        var onUnload = {},\\n            afterUnload = false\\n        // detect google chrome packaged apps because they don't allow the 'unload' event\\n\\n        ,\\n            isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime;\\n\\n        module.exports = {\\n          attachEvent: function attachEvent(event, listener) {\\n            if (typeof global.addEventListener !== 'undefined') {\\n              global.addEventListener(event, listener, false);\\n            } else if (global.document && global.attachEvent) {\\n              // IE quirks.\\n              // According to: http://stevesouders.com/misc/test-postmessage.php\\n              // the message gets delivered only to 'document', not 'window'.\\n              global.document.attachEvent('on' + event, listener);\\n              // I get 'window' for ie8.\\n              global.attachEvent('on' + event, listener);\\n            }\\n          },\\n\\n          detachEvent: function detachEvent(event, listener) {\\n            if (typeof global.addEventListener !== 'undefined') {\\n              global.removeEventListener(event, listener, false);\\n            } else if (global.document && global.detachEvent) {\\n              global.document.detachEvent('on' + event, listener);\\n              global.detachEvent('on' + event, listener);\\n            }\\n          },\\n\\n          unloadAdd: function unloadAdd(listener) {\\n            if (isChromePackagedApp) {\\n              return null;\\n            }\\n\\n            var ref = random.string(8);\\n            onUnload[ref] = listener;\\n            if (afterUnload) {\\n              setTimeout(this.triggerUnloadCallbacks, 0);\\n            }\\n            return ref;\\n          },\\n\\n          unloadDel: function unloadDel(ref) {\\n            if (ref in onUnload) {\\n              delete onUnload[ref];\\n            }\\n          },\\n\\n          triggerUnloadCallbacks: function triggerUnloadCallbacks() {\\n            for (var ref in onUnload) {\\n              onUnload[ref]();\\n              delete onUnload[ref];\\n            }\\n          }\\n        };\\n\\n        var unloadTriggered = function unloadTriggered() {\\n          if (afterUnload) {\\n            return;\\n          }\\n          afterUnload = true;\\n          module.exports.triggerUnloadCallbacks();\\n        };\\n\\n        // 'unload' alone is not reliable in opera within an iframe, but we\\n        // can't use `beforeunload` as IE fires it on javascript: links.\\n        if (!isChromePackagedApp) {\\n          module.exports.attachEvent('unload', unloadTriggered);\\n        }\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"./random\\\": 50 }], 47: [function (require, module, exports) {\\n      (function (process, global) {\\n        'use strict';\\n\\n        var eventUtils = require('./event'),\\n            JSON3 = require('json3'),\\n            browser = require('./browser');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:utils:iframe');\\n        }\\n\\n        module.exports = {\\n          WPrefix: '_jp',\\n          currentWindowId: null,\\n\\n          polluteGlobalNamespace: function polluteGlobalNamespace() {\\n            if (!(module.exports.WPrefix in global)) {\\n              global[module.exports.WPrefix] = {};\\n            }\\n          },\\n\\n          postMessage: function postMessage(type, data) {\\n            if (global.parent !== global) {\\n              global.parent.postMessage(JSON3.stringify({\\n                windowId: module.exports.currentWindowId,\\n                type: type,\\n                data: data || ''\\n              }), '*');\\n            } else {\\n              debug('Cannot postMessage, no parent window.', type, data);\\n            }\\n          },\\n\\n          createIframe: function createIframe(iframeUrl, errorCallback) {\\n            var iframe = global.document.createElement('iframe');\\n            var tref, unloadRef;\\n            var unattach = function unattach() {\\n              debug('unattach');\\n              clearTimeout(tref);\\n              // Explorer had problems with that.\\n              try {\\n                iframe.onload = null;\\n              } catch (x) {\\n                // intentionally empty\\n              }\\n              iframe.onerror = null;\\n            };\\n            var cleanup = function cleanup() {\\n              debug('cleanup');\\n              if (iframe) {\\n                unattach();\\n                // This timeout makes chrome fire onbeforeunload event\\n                // within iframe. Without the timeout it goes straight to\\n                // onunload.\\n                setTimeout(function () {\\n                  if (iframe) {\\n                    iframe.parentNode.removeChild(iframe);\\n                  }\\n                  iframe = null;\\n                }, 0);\\n                eventUtils.unloadDel(unloadRef);\\n              }\\n            };\\n            var onerror = function onerror(err) {\\n              debug('onerror', err);\\n              if (iframe) {\\n                cleanup();\\n                errorCallback(err);\\n              }\\n            };\\n            var post = function post(msg, origin) {\\n              debug('post', msg, origin);\\n              try {\\n                // When the iframe is not loaded, IE raises an exception\\n                // on 'contentWindow'.\\n                setTimeout(function () {\\n                  if (iframe && iframe.contentWindow) {\\n                    iframe.contentWindow.postMessage(msg, origin);\\n                  }\\n                }, 0);\\n              } catch (x) {\\n                // intentionally empty\\n              }\\n            };\\n\\n            iframe.src = iframeUrl;\\n            iframe.style.display = 'none';\\n            iframe.style.position = 'absolute';\\n            iframe.onerror = function () {\\n              onerror('onerror');\\n            };\\n            iframe.onload = function () {\\n              debug('onload');\\n              // `onload` is triggered before scripts on the iframe are\\n              // executed. Give it few seconds to actually load stuff.\\n              clearTimeout(tref);\\n              tref = setTimeout(function () {\\n                onerror('onload timeout');\\n              }, 2000);\\n            };\\n            global.document.body.appendChild(iframe);\\n            tref = setTimeout(function () {\\n              onerror('timeout');\\n            }, 15000);\\n            unloadRef = eventUtils.unloadAdd(cleanup);\\n            return {\\n              post: post,\\n              cleanup: cleanup,\\n              loaded: unattach\\n            };\\n          }\\n\\n          /* eslint no-undef: \\\"off\\\", new-cap: \\\"off\\\" */\\n          , createHtmlfile: function createHtmlfile(iframeUrl, errorCallback) {\\n            var axo = ['Active'].concat('Object').join('X');\\n            var doc = new global[axo]('htmlfile');\\n            var tref, unloadRef;\\n            var iframe;\\n            var unattach = function unattach() {\\n              clearTimeout(tref);\\n              iframe.onerror = null;\\n            };\\n            var cleanup = function cleanup() {\\n              if (doc) {\\n                unattach();\\n                eventUtils.unloadDel(unloadRef);\\n                iframe.parentNode.removeChild(iframe);\\n                iframe = doc = null;\\n                CollectGarbage();\\n              }\\n            };\\n            var onerror = function onerror(r) {\\n              debug('onerror', r);\\n              if (doc) {\\n                cleanup();\\n                errorCallback(r);\\n              }\\n            };\\n            var post = function post(msg, origin) {\\n              try {\\n                // When the iframe is not loaded, IE raises an exception\\n                // on 'contentWindow'.\\n                setTimeout(function () {\\n                  if (iframe && iframe.contentWindow) {\\n                    iframe.contentWindow.postMessage(msg, origin);\\n                  }\\n                }, 0);\\n              } catch (x) {\\n                // intentionally empty\\n              }\\n            };\\n\\n            doc.open();\\n            doc.write('<html><s' + 'cript>' + 'document.domain=\\\"' + global.document.domain + '\\\";' + '</s' + 'cript></html>');\\n            doc.close();\\n            doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];\\n            var c = doc.createElement('div');\\n            doc.body.appendChild(c);\\n            iframe = doc.createElement('iframe');\\n            c.appendChild(iframe);\\n            iframe.src = iframeUrl;\\n            iframe.onerror = function () {\\n              onerror('onerror');\\n            };\\n            tref = setTimeout(function () {\\n              onerror('timeout');\\n            }, 15000);\\n            unloadRef = eventUtils.unloadAdd(cleanup);\\n            return {\\n              post: post,\\n              cleanup: cleanup,\\n              loaded: unattach\\n            };\\n          }\\n        };\\n\\n        module.exports.iframeEnabled = false;\\n        if (global.document) {\\n          // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with\\n          // huge delay, or not at all.\\n          module.exports.iframeEnabled = (typeof global.postMessage === 'function' || _typeof(global.postMessage) === 'object') && !browser.isKonqueror();\\n        }\\n      }).call(this, { env: {} }, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"./browser\\\": 44, \\\"./event\\\": 46, \\\"debug\\\": 55, \\\"json3\\\": 58 }], 48: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        var logObject = {};\\n        ['log', 'debug', 'warn'].forEach(function (level) {\\n          var levelExists;\\n\\n          try {\\n            levelExists = global.console && global.console[level] && global.console[level].apply;\\n          } catch (e) {\\n            // do nothing\\n          }\\n\\n          logObject[level] = levelExists ? function () {\\n            return global.console[level].apply(global.console, arguments);\\n          } : level === 'log' ? function () {} : logObject.log;\\n        });\\n\\n        module.exports = logObject;\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, {}], 49: [function (require, module, exports) {\\n      'use strict';\\n\\n      module.exports = {\\n        isObject: function isObject(obj) {\\n          var type = typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(obj);\\n          return type === 'function' || type === 'object' && !!obj;\\n        },\\n\\n        extend: function extend(obj) {\\n          if (!this.isObject(obj)) {\\n            return obj;\\n          }\\n          var source, prop;\\n          for (var i = 1, length = arguments.length; i < length; i++) {\\n            source = arguments[i];\\n            for (prop in source) {\\n              if (Object.prototype.hasOwnProperty.call(source, prop)) {\\n                obj[prop] = source[prop];\\n              }\\n            }\\n          }\\n          return obj;\\n        }\\n      };\\n    }, {}], 50: [function (require, module, exports) {\\n      'use strict';\\n\\n      /* global crypto:true */\\n\\n      var crypto = require('crypto');\\n\\n      // This string has length 32, a power of 2, so the modulus doesn't introduce a\\n      // bias.\\n      var _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';\\n      module.exports = {\\n        string: function string(length) {\\n          var max = _randomStringChars.length;\\n          var bytes = crypto.randomBytes(length);\\n          var ret = [];\\n          for (var i = 0; i < length; i++) {\\n            ret.push(_randomStringChars.substr(bytes[i] % max, 1));\\n          }\\n          return ret.join('');\\n        },\\n\\n        number: function number(max) {\\n          return Math.floor(Math.random() * max);\\n        },\\n\\n        numberString: function numberString(max) {\\n          var t = ('' + (max - 1)).length;\\n          var p = new Array(t + 1).join('0');\\n          return (p + this.number(max)).slice(-t);\\n        }\\n      };\\n    }, { \\\"crypto\\\": 43 }], 51: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:utils:transport');\\n        }\\n\\n        module.exports = function (availableTransports) {\\n          return {\\n            filterToEnabled: function filterToEnabled(transportsWhitelist, info) {\\n              var transports = {\\n                main: [],\\n                facade: []\\n              };\\n              if (!transportsWhitelist) {\\n                transportsWhitelist = [];\\n              } else if (typeof transportsWhitelist === 'string') {\\n                transportsWhitelist = [transportsWhitelist];\\n              }\\n\\n              availableTransports.forEach(function (trans) {\\n                if (!trans) {\\n                  return;\\n                }\\n\\n                if (trans.transportName === 'websocket' && info.websocket === false) {\\n                  debug('disabled from server', 'websocket');\\n                  return;\\n                }\\n\\n                if (transportsWhitelist.length && transportsWhitelist.indexOf(trans.transportName) === -1) {\\n                  debug('not in whitelist', trans.transportName);\\n                  return;\\n                }\\n\\n                if (trans.enabled(info)) {\\n                  debug('enabled', trans.transportName);\\n                  transports.main.push(trans);\\n                  if (trans.facadeTransport) {\\n                    transports.facade.push(trans.facadeTransport);\\n                  }\\n                } else {\\n                  debug('disabled', trans.transportName);\\n                }\\n              });\\n              return transports;\\n            }\\n          };\\n        };\\n      }).call(this, { env: {} });\\n    }, { \\\"debug\\\": 55 }], 52: [function (require, module, exports) {\\n      (function (process) {\\n        'use strict';\\n\\n        var URL = require('url-parse');\\n\\n        var debug = function debug() {};\\n        if (process.env.NODE_ENV !== 'production') {\\n          debug = require('debug')('sockjs-client:utils:url');\\n        }\\n\\n        module.exports = {\\n          getOrigin: function getOrigin(url) {\\n            if (!url) {\\n              return null;\\n            }\\n\\n            var p = new URL(url);\\n            if (p.protocol === 'file:') {\\n              return null;\\n            }\\n\\n            var port = p.port;\\n            if (!port) {\\n              port = p.protocol === 'https:' ? '443' : '80';\\n            }\\n\\n            return p.protocol + '//' + p.hostname + ':' + port;\\n          },\\n\\n          isOriginEqual: function isOriginEqual(a, b) {\\n            var res = this.getOrigin(a) === this.getOrigin(b);\\n            debug('same', a, b, res);\\n            return res;\\n          },\\n\\n          isSchemeEqual: function isSchemeEqual(a, b) {\\n            return a.split(':')[0] === b.split(':')[0];\\n          },\\n\\n          addPath: function addPath(url, path) {\\n            var qs = url.split('?');\\n            return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\\n          },\\n\\n          addQuery: function addQuery(url, q) {\\n            return url + (url.indexOf('?') === -1 ? '?' + q : '&' + q);\\n          }\\n        };\\n      }).call(this, { env: {} });\\n    }, { \\\"debug\\\": 55, \\\"url-parse\\\": 61 }], 53: [function (require, module, exports) {\\n      module.exports = '1.1.4';\\n    }, {}], 54: [function (require, module, exports) {\\n      /**\\n       * Helpers.\\n       */\\n\\n      var s = 1000;\\n      var m = s * 60;\\n      var h = m * 60;\\n      var d = h * 24;\\n      var y = d * 365.25;\\n\\n      /**\\n       * Parse or format the given `val`.\\n       *\\n       * Options:\\n       *\\n       *  - `long` verbose formatting [false]\\n       *\\n       * @param {String|Number} val\\n       * @param {Object} [options]\\n       * @throws {Error} throw an error if val is not a non-empty string or a number\\n       * @return {String|Number}\\n       * @api public\\n       */\\n\\n      module.exports = function (val, options) {\\n        options = options || {};\\n        var type = typeof val === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(val);\\n        if (type === 'string' && val.length > 0) {\\n          return parse(val);\\n        } else if (type === 'number' && isNaN(val) === false) {\\n          return options.long ? fmtLong(val) : fmtShort(val);\\n        }\\n        throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\\n      };\\n\\n      /**\\n       * Parse the given `str` and return milliseconds.\\n       *\\n       * @param {String} str\\n       * @return {Number}\\n       * @api private\\n       */\\n\\n      function parse(str) {\\n        str = String(str);\\n        if (str.length > 10000) {\\n          return;\\n        }\\n        var match = /^((?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\\n        if (!match) {\\n          return;\\n        }\\n        var n = parseFloat(match[1]);\\n        var type = (match[2] || 'ms').toLowerCase();\\n        switch (type) {\\n          case 'years':\\n          case 'year':\\n          case 'yrs':\\n          case 'yr':\\n          case 'y':\\n            return n * y;\\n          case 'days':\\n          case 'day':\\n          case 'd':\\n            return n * d;\\n          case 'hours':\\n          case 'hour':\\n          case 'hrs':\\n          case 'hr':\\n          case 'h':\\n            return n * h;\\n          case 'minutes':\\n          case 'minute':\\n          case 'mins':\\n          case 'min':\\n          case 'm':\\n            return n * m;\\n          case 'seconds':\\n          case 'second':\\n          case 'secs':\\n          case 'sec':\\n          case 's':\\n            return n * s;\\n          case 'milliseconds':\\n          case 'millisecond':\\n          case 'msecs':\\n          case 'msec':\\n          case 'ms':\\n            return n;\\n          default:\\n            return undefined;\\n        }\\n      }\\n\\n      /**\\n       * Short format for `ms`.\\n       *\\n       * @param {Number} ms\\n       * @return {String}\\n       * @api private\\n       */\\n\\n      function fmtShort(ms) {\\n        if (ms >= d) {\\n          return Math.round(ms / d) + 'd';\\n        }\\n        if (ms >= h) {\\n          return Math.round(ms / h) + 'h';\\n        }\\n        if (ms >= m) {\\n          return Math.round(ms / m) + 'm';\\n        }\\n        if (ms >= s) {\\n          return Math.round(ms / s) + 's';\\n        }\\n        return ms + 'ms';\\n      }\\n\\n      /**\\n       * Long format for `ms`.\\n       *\\n       * @param {Number} ms\\n       * @return {String}\\n       * @api private\\n       */\\n\\n      function fmtLong(ms) {\\n        return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\\n      }\\n\\n      /**\\n       * Pluralization helper.\\n       */\\n\\n      function plural(ms, n, name) {\\n        if (ms < n) {\\n          return;\\n        }\\n        if (ms < n * 1.5) {\\n          return Math.floor(ms / n) + ' ' + name;\\n        }\\n        return Math.ceil(ms / n) + ' ' + name + 's';\\n      }\\n    }, {}], 55: [function (require, module, exports) {\\n      (function (process) {\\n        /**\\n         * This is the web browser implementation of `debug()`.\\n         *\\n         * Expose `debug()` as the module.\\n         */\\n\\n        exports = module.exports = require('./debug');\\n        exports.log = log;\\n        exports.formatArgs = formatArgs;\\n        exports.save = save;\\n        exports.load = load;\\n        exports.useColors = useColors;\\n        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\\n\\n        /**\\n         * Colors.\\n         */\\n\\n        exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\\n\\n        /**\\n         * Currently only WebKit-based Web Inspectors, Firefox >= v31,\\n         * and the Firebug extension (any Firefox version) are known\\n         * to support \\\"%c\\\" CSS customizations.\\n         *\\n         * TODO: add a `localStorage` variable to explicitly enable/disable colors\\n         */\\n\\n        function useColors() {\\n          // NB: In an Electron preload script, document will be defined but not fully\\n          // initialized. Since we know we're in Chrome, we'll just detect this case\\n          // explicitly\\n          if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\\n            return true;\\n          }\\n\\n          // is webkit? http://stackoverflow.com/a/16459606/376773\\n          // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\\n          return typeof document !== 'undefined' && document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||\\n          // is firebug? http://stackoverflow.com/a/398120/376773\\n          typeof window !== 'undefined' && window && window.console && (window.console.firebug || window.console.exception && window.console.table) ||\\n          // is firefox >= v31?\\n          // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\\n          typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||\\n          // double check webkit in userAgent just in case we are in a worker\\n          typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\\\/(\\\\d+)/);\\n        }\\n\\n        /**\\n         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\\n         */\\n\\n        exports.formatters.j = function (v) {\\n          try {\\n            return JSON.stringify(v);\\n          } catch (err) {\\n            return '[UnexpectedJSONParseError]: ' + err.message;\\n          }\\n        };\\n\\n        /**\\n         * Colorize log arguments if enabled.\\n         *\\n         * @api public\\n         */\\n\\n        function formatArgs(args) {\\n          var useColors = this.useColors;\\n\\n          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\\n\\n          if (!useColors) return;\\n\\n          var c = 'color: ' + this.color;\\n          args.splice(1, 0, c, 'color: inherit');\\n\\n          // the final \\\"%c\\\" is somewhat tricky, because there could be other\\n          // arguments passed either before or after the %c, so we need to\\n          // figure out the correct index to insert the CSS into\\n          var index = 0;\\n          var lastC = 0;\\n          args[0].replace(/%[a-zA-Z%]/g, function (match) {\\n            if ('%%' === match) return;\\n            index++;\\n            if ('%c' === match) {\\n              // we only are interested in the *last* %c\\n              // (the user may have provided their own)\\n              lastC = index;\\n            }\\n          });\\n\\n          args.splice(lastC, 0, c);\\n        }\\n\\n        /**\\n         * Invokes `console.log()` when available.\\n         * No-op when `console.log` is not a \\\"function\\\".\\n         *\\n         * @api public\\n         */\\n\\n        function log() {\\n          // this hackery is required for IE8/9, where\\n          // the `console.log` function doesn't have 'apply'\\n          return 'object' === (typeof console === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);\\n        }\\n\\n        /**\\n         * Save `namespaces`.\\n         *\\n         * @param {String} namespaces\\n         * @api private\\n         */\\n\\n        function save(namespaces) {\\n          try {\\n            if (null == namespaces) {\\n              exports.storage.removeItem('debug');\\n            } else {\\n              exports.storage.debug = namespaces;\\n            }\\n          } catch (e) {}\\n        }\\n\\n        /**\\n         * Load `namespaces`.\\n         *\\n         * @return {String} returns the previously persisted debug modes\\n         * @api private\\n         */\\n\\n        function load() {\\n          var r;\\n          try {\\n            r = exports.storage.debug;\\n          } catch (e) {}\\n\\n          // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\\n          if (!r && typeof process !== 'undefined' && 'env' in process) {\\n            r = process.env.DEBUG;\\n          }\\n\\n          return r;\\n        }\\n\\n        /**\\n         * Enable namespaces listed in `localStorage.debug` initially.\\n         */\\n\\n        exports.enable(load());\\n\\n        /**\\n         * Localstorage attempts to return the localstorage.\\n         *\\n         * This is necessary because safari throws\\n         * when a user disables cookies/localstorage\\n         * and you attempt to access it.\\n         *\\n         * @return {LocalStorage}\\n         * @api private\\n         */\\n\\n        function localstorage() {\\n          try {\\n            return window.localStorage;\\n          } catch (e) {}\\n        }\\n      }).call(this, { env: {} });\\n    }, { \\\"./debug\\\": 56 }], 56: [function (require, module, exports) {\\n\\n      /**\\n       * This is the common logic for both the Node.js and web browser\\n       * implementations of `debug()`.\\n       *\\n       * Expose `debug()` as the module.\\n       */\\n\\n      exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\\n      exports.coerce = coerce;\\n      exports.disable = disable;\\n      exports.enable = enable;\\n      exports.enabled = enabled;\\n      exports.humanize = require('ms');\\n\\n      /**\\n       * The currently active debug mode names, and names to skip.\\n       */\\n\\n      exports.names = [];\\n      exports.skips = [];\\n\\n      /**\\n       * Map of special \\\"%n\\\" handling functions, for the debug \\\"format\\\" argument.\\n       *\\n       * Valid key names are a single, lower or upper-case letter, i.e. \\\"n\\\" and \\\"N\\\".\\n       */\\n\\n      exports.formatters = {};\\n\\n      /**\\n       * Previous log timestamp.\\n       */\\n\\n      var prevTime;\\n\\n      /**\\n       * Select a color.\\n       * @param {String} namespace\\n       * @return {Number}\\n       * @api private\\n       */\\n\\n      function selectColor(namespace) {\\n        var hash = 0,\\n            i;\\n\\n        for (i in namespace) {\\n          hash = (hash << 5) - hash + namespace.charCodeAt(i);\\n          hash |= 0; // Convert to 32bit integer\\n        }\\n\\n        return exports.colors[Math.abs(hash) % exports.colors.length];\\n      }\\n\\n      /**\\n       * Create a debugger with the given `namespace`.\\n       *\\n       * @param {String} namespace\\n       * @return {Function}\\n       * @api public\\n       */\\n\\n      function createDebug(namespace) {\\n\\n        function debug() {\\n          // disabled?\\n          if (!debug.enabled) return;\\n\\n          var self = debug;\\n\\n          // set `diff` timestamp\\n          var curr = +new Date();\\n          var ms = curr - (prevTime || curr);\\n          self.diff = ms;\\n          self.prev = prevTime;\\n          self.curr = curr;\\n          prevTime = curr;\\n\\n          // turn the `arguments` into a proper Array\\n          var args = new Array(arguments.length);\\n          for (var i = 0; i < args.length; i++) {\\n            args[i] = arguments[i];\\n          }\\n\\n          args[0] = exports.coerce(args[0]);\\n\\n          if ('string' !== typeof args[0]) {\\n            // anything else let's inspect with %O\\n            args.unshift('%O');\\n          }\\n\\n          // apply any `formatters` transformations\\n          var index = 0;\\n          args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\\n            // if we encounter an escaped % then don't increase the array index\\n            if (match === '%%') return match;\\n            index++;\\n            var formatter = exports.formatters[format];\\n            if ('function' === typeof formatter) {\\n              var val = args[index];\\n              match = formatter.call(self, val);\\n\\n              // now we need to remove `args[index]` since it's inlined in the `format`\\n              args.splice(index, 1);\\n              index--;\\n            }\\n            return match;\\n          });\\n\\n          // apply env-specific formatting (colors, etc.)\\n          exports.formatArgs.call(self, args);\\n\\n          var logFn = debug.log || exports.log || console.log.bind(console);\\n          logFn.apply(self, args);\\n        }\\n\\n        debug.namespace = namespace;\\n        debug.enabled = exports.enabled(namespace);\\n        debug.useColors = exports.useColors();\\n        debug.color = selectColor(namespace);\\n\\n        // env-specific initialization logic for debug instances\\n        if ('function' === typeof exports.init) {\\n          exports.init(debug);\\n        }\\n\\n        return debug;\\n      }\\n\\n      /**\\n       * Enables a debug mode by namespaces. This can include modes\\n       * separated by a colon and wildcards.\\n       *\\n       * @param {String} namespaces\\n       * @api public\\n       */\\n\\n      function enable(namespaces) {\\n        exports.save(namespaces);\\n\\n        exports.names = [];\\n        exports.skips = [];\\n\\n        var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\\\s,]+/);\\n        var len = split.length;\\n\\n        for (var i = 0; i < len; i++) {\\n          if (!split[i]) continue; // ignore empty strings\\n          namespaces = split[i].replace(/\\\\*/g, '.*?');\\n          if (namespaces[0] === '-') {\\n            exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\\n          } else {\\n            exports.names.push(new RegExp('^' + namespaces + '$'));\\n          }\\n        }\\n      }\\n\\n      /**\\n       * Disable debug output.\\n       *\\n       * @api public\\n       */\\n\\n      function disable() {\\n        exports.enable('');\\n      }\\n\\n      /**\\n       * Returns true if the given mode name is enabled, false otherwise.\\n       *\\n       * @param {String} name\\n       * @return {Boolean}\\n       * @api public\\n       */\\n\\n      function enabled(name) {\\n        var i, len;\\n        for (i = 0, len = exports.skips.length; i < len; i++) {\\n          if (exports.skips[i].test(name)) {\\n            return false;\\n          }\\n        }\\n        for (i = 0, len = exports.names.length; i < len; i++) {\\n          if (exports.names[i].test(name)) {\\n            return true;\\n          }\\n        }\\n        return false;\\n      }\\n\\n      /**\\n       * Coerce `val`.\\n       *\\n       * @param {Mixed} val\\n       * @return {Mixed}\\n       * @api private\\n       */\\n\\n      function coerce(val) {\\n        if (val instanceof Error) return val.stack || val.message;\\n        return val;\\n      }\\n    }, { \\\"ms\\\": 54 }], 57: [function (require, module, exports) {\\n      if (typeof Object.create === 'function') {\\n        // implementation from standard node.js 'util' module\\n        module.exports = function inherits(ctor, superCtor) {\\n          ctor.super_ = superCtor;\\n          ctor.prototype = Object.create(superCtor.prototype, {\\n            constructor: {\\n              value: ctor,\\n              enumerable: false,\\n              writable: true,\\n              configurable: true\\n            }\\n          });\\n        };\\n      } else {\\n        // old school shim for old browsers\\n        module.exports = function inherits(ctor, superCtor) {\\n          ctor.super_ = superCtor;\\n          var TempCtor = function TempCtor() {};\\n          TempCtor.prototype = superCtor.prototype;\\n          ctor.prototype = new TempCtor();\\n          ctor.prototype.constructor = ctor;\\n        };\\n      }\\n    }, {}], 58: [function (require, module, exports) {\\n      (function (global) {\\n        /*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\\n        ;(function () {\\n          // Detect the `define` function exposed by asynchronous module loaders. The\\n          // strict `define` check is necessary for compatibility with `r.js`.\\n          var isLoader = typeof define === \\\"function\\\" && define.amd;\\n\\n          // A set of types used to distinguish objects from primitives.\\n          var objectTypes = {\\n            \\\"function\\\": true,\\n            \\\"object\\\": true\\n          };\\n\\n          // Detect the `exports` object exposed by CommonJS implementations.\\n          var freeExports = objectTypes[typeof exports === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(exports)] && exports && !exports.nodeType && exports;\\n\\n          // Use the `global` object exposed by Node (including Browserify via\\n          // `insert-module-globals`), Narwhal, and Ringo as the default context,\\n          // and the `window` object in browsers. Rhino exports a `global` function\\n          // instead.\\n          var root = objectTypes[typeof window === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(window)] && window || this,\\n              freeGlobal = freeExports && objectTypes[typeof module === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(module)] && module && !module.nodeType && (typeof global === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(global)) == \\\"object\\\" && global;\\n\\n          if (freeGlobal && (freeGlobal[\\\"global\\\"] === freeGlobal || freeGlobal[\\\"window\\\"] === freeGlobal || freeGlobal[\\\"self\\\"] === freeGlobal)) {\\n            root = freeGlobal;\\n          }\\n\\n          // Public: Initializes JSON 3 using the given `context` object, attaching the\\n          // `stringify` and `parse` functions to the specified `exports` object.\\n          function runInContext(context, exports) {\\n            context || (context = root[\\\"Object\\\"]());\\n            exports || (exports = root[\\\"Object\\\"]());\\n\\n            // Native constructor aliases.\\n            var Number = context[\\\"Number\\\"] || root[\\\"Number\\\"],\\n                String = context[\\\"String\\\"] || root[\\\"String\\\"],\\n                Object = context[\\\"Object\\\"] || root[\\\"Object\\\"],\\n                Date = context[\\\"Date\\\"] || root[\\\"Date\\\"],\\n                SyntaxError = context[\\\"SyntaxError\\\"] || root[\\\"SyntaxError\\\"],\\n                TypeError = context[\\\"TypeError\\\"] || root[\\\"TypeError\\\"],\\n                Math = context[\\\"Math\\\"] || root[\\\"Math\\\"],\\n                nativeJSON = context[\\\"JSON\\\"] || root[\\\"JSON\\\"];\\n\\n            // Delegate to the native `stringify` and `parse` implementations.\\n            if ((typeof nativeJSON === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(nativeJSON)) == \\\"object\\\" && nativeJSON) {\\n              exports.stringify = nativeJSON.stringify;\\n              exports.parse = nativeJSON.parse;\\n            }\\n\\n            // Convenience aliases.\\n            var objectProto = Object.prototype,\\n                getClass = objectProto.toString,\\n                _isProperty,\\n                _forEach,\\n                undef;\\n\\n            // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\\n            var isExtended = new Date(-3509827334573292);\\n            try {\\n              // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\\n              // results for certain dates in Opera >= 10.53.\\n              isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\\n              // Safari < 2.0.2 stores the internal millisecond time value correctly,\\n              // but clips the values returned by the date methods to the range of\\n              // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\\n              isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\\n            } catch (exception) {}\\n\\n            // Internal: Determines whether the native `JSON.stringify` and `parse`\\n            // implementations are spec-compliant. Based on work by Ken Snyder.\\n            function has(name) {\\n              if (has[name] !== undef) {\\n                // Return cached feature test result.\\n                return has[name];\\n              }\\n              var isSupported;\\n              if (name == \\\"bug-string-char-index\\\") {\\n                // IE <= 7 doesn't support accessing string characters using square\\n                // bracket notation. IE 8 only supports this for primitives.\\n                isSupported = \\\"a\\\"[0] != \\\"a\\\";\\n              } else if (name == \\\"json\\\") {\\n                // Indicates whether both `JSON.stringify` and `JSON.parse` are\\n                // supported.\\n                isSupported = has(\\\"json-stringify\\\") && has(\\\"json-parse\\\");\\n              } else {\\n                var value,\\n                    serialized = \\\"{\\\\\\\"a\\\\\\\":[1,true,false,null,\\\\\\\"\\\\\\\\u0000\\\\\\\\b\\\\\\\\n\\\\\\\\f\\\\\\\\r\\\\\\\\t\\\\\\\"]}\\\";\\n                // Test `JSON.stringify`.\\n                if (name == \\\"json-stringify\\\") {\\n                  var stringify = exports.stringify,\\n                      stringifySupported = typeof stringify == \\\"function\\\" && isExtended;\\n                  if (stringifySupported) {\\n                    // A test function object with a custom `toJSON` method.\\n                    (value = function value() {\\n                      return 1;\\n                    }).toJSON = value;\\n                    try {\\n                      stringifySupported =\\n                      // Firefox 3.1b1 and b2 serialize string, number, and boolean\\n                      // primitives as object literals.\\n                      stringify(0) === \\\"0\\\" &&\\n                      // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\\n                      // literals.\\n                      stringify(new Number()) === \\\"0\\\" && stringify(new String()) == '\\\"\\\"' &&\\n                      // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\\n                      // does not define a canonical JSON representation (this applies to\\n                      // objects with `toJSON` properties as well, *unless* they are nested\\n                      // within an object or array).\\n                      stringify(getClass) === undef &&\\n                      // IE 8 serializes `undefined` as `\\\"undefined\\\"`. Safari <= 5.1.7 and\\n                      // FF 3.1b3 pass this test.\\n                      stringify(undef) === undef &&\\n                      // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\\n                      // respectively, if the value is omitted entirely.\\n                      stringify() === undef &&\\n                      // FF 3.1b1, 2 throw an error if the given value is not a number,\\n                      // string, array, object, Boolean, or `null` literal. This applies to\\n                      // objects with custom `toJSON` methods as well, unless they are nested\\n                      // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\\n                      // methods entirely.\\n                      stringify(value) === \\\"1\\\" && stringify([value]) == \\\"[1]\\\" &&\\n                      // Prototype <= 1.6.1 serializes `[undefined]` as `\\\"[]\\\"` instead of\\n                      // `\\\"[null]\\\"`.\\n                      stringify([undef]) == \\\"[null]\\\" &&\\n                      // YUI 3.0.0b1 fails to serialize `null` literals.\\n                      stringify(null) == \\\"null\\\" &&\\n                      // FF 3.1b1, 2 halts serialization if an array contains a function:\\n                      // `[1, true, getClass, 1]` serializes as \\\"[1,true,],\\\". FF 3.1b3\\n                      // elides non-JSON values from objects and arrays, unless they\\n                      // define custom `toJSON` methods.\\n                      stringify([undef, getClass, null]) == \\\"[null,null,null]\\\" &&\\n                      // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\\n                      // where character escape codes are expected (e.g., `\\\\b` => `\\\\u0008`).\\n                      stringify({ \\\"a\\\": [value, true, false, null, \\\"\\\\x00\\\\b\\\\n\\\\f\\\\r\\\\t\\\"] }) == serialized &&\\n                      // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\\n                      stringify(null, value) === \\\"1\\\" && stringify([1, 2], null, 1) == \\\"[\\\\n 1,\\\\n 2\\\\n]\\\" &&\\n                      // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\\n                      // serialize extended years.\\n                      stringify(new Date(-8.64e15)) == '\\\"-271821-04-20T00:00:00.000Z\\\"' &&\\n                      // The milliseconds are optional in ES 5, but required in 5.1.\\n                      stringify(new Date(8.64e15)) == '\\\"+275760-09-13T00:00:00.000Z\\\"' &&\\n                      // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\\n                      // four-digit years instead of six-digit years. Credits: @Yaffle.\\n                      stringify(new Date(-621987552e5)) == '\\\"-000001-01-01T00:00:00.000Z\\\"' &&\\n                      // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\\n                      // values less than 1000. Credits: @Yaffle.\\n                      stringify(new Date(-1)) == '\\\"1969-12-31T23:59:59.999Z\\\"';\\n                    } catch (exception) {\\n                      stringifySupported = false;\\n                    }\\n                  }\\n                  isSupported = stringifySupported;\\n                }\\n                // Test `JSON.parse`.\\n                if (name == \\\"json-parse\\\") {\\n                  var parse = exports.parse;\\n                  if (typeof parse == \\\"function\\\") {\\n                    try {\\n                      // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\\n                      // Conforming implementations should also coerce the initial argument to\\n                      // a string prior to parsing.\\n                      if (parse(\\\"0\\\") === 0 && !parse(false)) {\\n                        // Simple parsing test.\\n                        value = parse(serialized);\\n                        var parseSupported = value[\\\"a\\\"].length == 5 && value[\\\"a\\\"][0] === 1;\\n                        if (parseSupported) {\\n                          try {\\n                            // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\\n                            parseSupported = !parse('\\\"\\\\t\\\"');\\n                          } catch (exception) {}\\n                          if (parseSupported) {\\n                            try {\\n                              // FF 4.0 and 4.0.1 allow leading `+` signs and leading\\n                              // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\\n                              // certain octal literals.\\n                              parseSupported = parse(\\\"01\\\") !== 1;\\n                            } catch (exception) {}\\n                          }\\n                          if (parseSupported) {\\n                            try {\\n                              // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\\n                              // points. These environments, along with FF 3.1b1 and 2,\\n                              // also allow trailing commas in JSON objects and arrays.\\n                              parseSupported = parse(\\\"1.\\\") !== 1;\\n                            } catch (exception) {}\\n                          }\\n                        }\\n                      }\\n                    } catch (exception) {\\n                      parseSupported = false;\\n                    }\\n                  }\\n                  isSupported = parseSupported;\\n                }\\n              }\\n              return has[name] = !!isSupported;\\n            }\\n\\n            if (!has(\\\"json\\\")) {\\n              // Common `[[Class]]` name aliases.\\n              var functionClass = \\\"[object Function]\\\",\\n                  dateClass = \\\"[object Date]\\\",\\n                  numberClass = \\\"[object Number]\\\",\\n                  stringClass = \\\"[object String]\\\",\\n                  arrayClass = \\\"[object Array]\\\",\\n                  booleanClass = \\\"[object Boolean]\\\";\\n\\n              // Detect incomplete support for accessing string characters by index.\\n              var charIndexBuggy = has(\\\"bug-string-char-index\\\");\\n\\n              // Define additional utility methods if the `Date` methods are buggy.\\n              if (!isExtended) {\\n                var floor = Math.floor;\\n                // A mapping between the months of the year and the number of days between\\n                // January 1st and the first of the respective month.\\n                var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\\n                // Internal: Calculates the number of days between the Unix epoch and the\\n                // first day of the given month.\\n                var getDay = function getDay(year, month) {\\n                  return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\\n                };\\n              }\\n\\n              // Internal: Determines if a property is a direct property of the given\\n              // object. Delegates to the native `Object#hasOwnProperty` method.\\n              if (!(_isProperty = objectProto.hasOwnProperty)) {\\n                _isProperty = function isProperty(property) {\\n                  var members = {},\\n                      constructor;\\n                  if ((members.__proto__ = null, members.__proto__ = {\\n                    // The *proto* property cannot be set multiple times in recent\\n                    // versions of Firefox and SeaMonkey.\\n                    \\\"toString\\\": 1\\n                  }, members).toString != getClass) {\\n                    // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\\n                    // supports the mutable *proto* property.\\n                    _isProperty = function isProperty(property) {\\n                      // Capture and break the object's prototype chain (see section 8.6.2\\n                      // of the ES 5.1 spec). The parenthesized expression prevents an\\n                      // unsafe transformation by the Closure Compiler.\\n                      var original = this.__proto__,\\n                          result = property in (this.__proto__ = null, this);\\n                      // Restore the original prototype chain.\\n                      this.__proto__ = original;\\n                      return result;\\n                    };\\n                  } else {\\n                    // Capture a reference to the top-level `Object` constructor.\\n                    constructor = members.constructor;\\n                    // Use the `constructor` property to simulate `Object#hasOwnProperty` in\\n                    // other environments.\\n                    _isProperty = function isProperty(property) {\\n                      var parent = (this.constructor || constructor).prototype;\\n                      return property in this && !(property in parent && this[property] === parent[property]);\\n                    };\\n                  }\\n                  members = null;\\n                  return _isProperty.call(this, property);\\n                };\\n              }\\n\\n              // Internal: Normalizes the `for...in` iteration algorithm across\\n              // environments. Each enumerated key is yielded to a `callback` function.\\n              _forEach = function forEach(object, callback) {\\n                var size = 0,\\n                    Properties,\\n                    members,\\n                    property;\\n\\n                // Tests for bugs in the current environment's `for...in` algorithm. The\\n                // `valueOf` property inherits the non-enumerable flag from\\n                // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\\n                (Properties = function Properties() {\\n                  this.valueOf = 0;\\n                }).prototype.valueOf = 0;\\n\\n                // Iterate over a new instance of the `Properties` class.\\n                members = new Properties();\\n                for (property in members) {\\n                  // Ignore all properties inherited from `Object.prototype`.\\n                  if (_isProperty.call(members, property)) {\\n                    size++;\\n                  }\\n                }\\n                Properties = members = null;\\n\\n                // Normalize the iteration algorithm.\\n                if (!size) {\\n                  // A list of non-enumerable properties inherited from `Object.prototype`.\\n                  members = [\\\"valueOf\\\", \\\"toString\\\", \\\"toLocaleString\\\", \\\"propertyIsEnumerable\\\", \\\"isPrototypeOf\\\", \\\"hasOwnProperty\\\", \\\"constructor\\\"];\\n                  // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\\n                  // properties.\\n                  _forEach = function forEach(object, callback) {\\n                    var isFunction = getClass.call(object) == functionClass,\\n                        property,\\n                        length;\\n                    var hasProperty = !isFunction && typeof object.constructor != \\\"function\\\" && objectTypes[_typeof(object.hasOwnProperty)] && object.hasOwnProperty || _isProperty;\\n                    for (property in object) {\\n                      // Gecko <= 1.0 enumerates the `prototype` property of functions under\\n                      // certain conditions; IE does not.\\n                      if (!(isFunction && property == \\\"prototype\\\") && hasProperty.call(object, property)) {\\n                        callback(property);\\n                      }\\n                    }\\n                    // Manually invoke the callback for each non-enumerable property.\\n                    for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property)) {}\\n                  };\\n                } else if (size == 2) {\\n                  // Safari <= 2.0.4 enumerates shadowed properties twice.\\n                  _forEach = function forEach(object, callback) {\\n                    // Create a set of iterated properties.\\n                    var members = {},\\n                        isFunction = getClass.call(object) == functionClass,\\n                        property;\\n                    for (property in object) {\\n                      // Store each property name to prevent double enumeration. The\\n                      // `prototype` property of functions is not enumerated due to cross-\\n                      // environment inconsistencies.\\n                      if (!(isFunction && property == \\\"prototype\\\") && !_isProperty.call(members, property) && (members[property] = 1) && _isProperty.call(object, property)) {\\n                        callback(property);\\n                      }\\n                    }\\n                  };\\n                } else {\\n                  // No bugs detected; use the standard `for...in` algorithm.\\n                  _forEach = function forEach(object, callback) {\\n                    var isFunction = getClass.call(object) == functionClass,\\n                        property,\\n                        isConstructor;\\n                    for (property in object) {\\n                      if (!(isFunction && property == \\\"prototype\\\") && _isProperty.call(object, property) && !(isConstructor = property === \\\"constructor\\\")) {\\n                        callback(property);\\n                      }\\n                    }\\n                    // Manually invoke the callback for the `constructor` property due to\\n                    // cross-environment inconsistencies.\\n                    if (isConstructor || _isProperty.call(object, property = \\\"constructor\\\")) {\\n                      callback(property);\\n                    }\\n                  };\\n                }\\n                return _forEach(object, callback);\\n              };\\n\\n              // Public: Serializes a JavaScript `value` as a JSON string. The optional\\n              // `filter` argument may specify either a function that alters how object and\\n              // array members are serialized, or an array of strings and numbers that\\n              // indicates which properties should be serialized. The optional `width`\\n              // argument may be either a string or number that specifies the indentation\\n              // level of the output.\\n              if (!has(\\\"json-stringify\\\")) {\\n                // Internal: A map of control characters and their escaped equivalents.\\n                var Escapes = {\\n                  92: \\\"\\\\\\\\\\\\\\\\\\\",\\n                  34: '\\\\\\\\\\\"',\\n                  8: \\\"\\\\\\\\b\\\",\\n                  12: \\\"\\\\\\\\f\\\",\\n                  10: \\\"\\\\\\\\n\\\",\\n                  13: \\\"\\\\\\\\r\\\",\\n                  9: \\\"\\\\\\\\t\\\"\\n                };\\n\\n                // Internal: Converts `value` into a zero-padded string such that its\\n                // length is at least equal to `width`. The `width` must be <= 6.\\n                var leadingZeroes = \\\"000000\\\";\\n                var toPaddedString = function toPaddedString(width, value) {\\n                  // The `|| 0` expression is necessary to work around a bug in\\n                  // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \\\"0\\\"`.\\n                  return (leadingZeroes + (value || 0)).slice(-width);\\n                };\\n\\n                // Internal: Double-quotes a string `value`, replacing all ASCII control\\n                // characters (characters with code unit values between 0 and 31) with\\n                // their escaped equivalents. This is an implementation of the\\n                // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\\n                var unicodePrefix = \\\"\\\\\\\\u00\\\";\\n                var quote = function quote(value) {\\n                  var result = '\\\"',\\n                      index = 0,\\n                      length = value.length,\\n                      useCharIndex = !charIndexBuggy || length > 10;\\n                  var symbols = useCharIndex && (charIndexBuggy ? value.split(\\\"\\\") : value);\\n                  for (; index < length; index++) {\\n                    var charCode = value.charCodeAt(index);\\n                    // If the character is a control character, append its Unicode or\\n                    // shorthand escape sequence; otherwise, append the character as-is.\\n                    switch (charCode) {\\n                      case 8:case 9:case 10:case 12:case 13:case 34:case 92:\\n                        result += Escapes[charCode];\\n                        break;\\n                      default:\\n                        if (charCode < 32) {\\n                          result += unicodePrefix + toPaddedString(2, charCode.toString(16));\\n                          break;\\n                        }\\n                        result += useCharIndex ? symbols[index] : value.charAt(index);\\n                    }\\n                  }\\n                  return result + '\\\"';\\n                };\\n\\n                // Internal: Recursively serializes an object. Implements the\\n                // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\\n                var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {\\n                  var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\\n                  try {\\n                    // Necessary for host object support.\\n                    value = object[property];\\n                  } catch (exception) {}\\n                  if ((typeof value === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(value)) == \\\"object\\\" && value) {\\n                    className = getClass.call(value);\\n                    if (className == dateClass && !_isProperty.call(value, \\\"toJSON\\\")) {\\n                      if (value > -1 / 0 && value < 1 / 0) {\\n                        // Dates are serialized according to the `Date#toJSON` method\\n                        // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\\n                        // for the ISO 8601 date time string format.\\n                        if (getDay) {\\n                          // Manually compute the year, month, date, hours, minutes,\\n                          // seconds, and milliseconds if the `getUTC*` methods are\\n                          // buggy. Adapted from @Yaffle's `date-shim` project.\\n                          date = floor(value / 864e5);\\n                          for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++) {}\\n                          for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++) {}\\n                          date = 1 + date - getDay(year, month);\\n                          // The `time` value specifies the time within the day (see ES\\n                          // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\\n                          // to compute `A modulo B`, as the `%` operator does not\\n                          // correspond to the `modulo` operation for negative numbers.\\n                          time = (value % 864e5 + 864e5) % 864e5;\\n                          // The hours, minutes, seconds, and milliseconds are obtained by\\n                          // decomposing the time within the day. See section 15.9.1.10.\\n                          hours = floor(time / 36e5) % 24;\\n                          minutes = floor(time / 6e4) % 60;\\n                          seconds = floor(time / 1e3) % 60;\\n                          milliseconds = time % 1e3;\\n                        } else {\\n                          year = value.getUTCFullYear();\\n                          month = value.getUTCMonth();\\n                          date = value.getUTCDate();\\n                          hours = value.getUTCHours();\\n                          minutes = value.getUTCMinutes();\\n                          seconds = value.getUTCSeconds();\\n                          milliseconds = value.getUTCMilliseconds();\\n                        }\\n                        // Serialize extended years correctly.\\n                        value = (year <= 0 || year >= 1e4 ? (year < 0 ? \\\"-\\\" : \\\"+\\\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \\\"-\\\" + toPaddedString(2, month + 1) + \\\"-\\\" + toPaddedString(2, date) +\\n                        // Months, dates, hours, minutes, and seconds should have two\\n                        // digits; milliseconds should have three.\\n                        \\\"T\\\" + toPaddedString(2, hours) + \\\":\\\" + toPaddedString(2, minutes) + \\\":\\\" + toPaddedString(2, seconds) +\\n                        // Milliseconds are optional in ES 5.0, but required in 5.1.\\n                        \\\".\\\" + toPaddedString(3, milliseconds) + \\\"Z\\\";\\n                      } else {\\n                        value = null;\\n                      }\\n                    } else if (typeof value.toJSON == \\\"function\\\" && (className != numberClass && className != stringClass && className != arrayClass || _isProperty.call(value, \\\"toJSON\\\"))) {\\n                      // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\\n                      // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\\n                      // ignores all `toJSON` methods on these objects unless they are\\n                      // defined directly on an instance.\\n                      value = value.toJSON(property);\\n                    }\\n                  }\\n                  if (callback) {\\n                    // If a replacement function was provided, call it to obtain the value\\n                    // for serialization.\\n                    value = callback.call(object, property, value);\\n                  }\\n                  if (value === null) {\\n                    return \\\"null\\\";\\n                  }\\n                  className = getClass.call(value);\\n                  if (className == booleanClass) {\\n                    // Booleans are represented literally.\\n                    return \\\"\\\" + value;\\n                  } else if (className == numberClass) {\\n                    // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\\n                    // `\\\"null\\\"`.\\n                    return value > -1 / 0 && value < 1 / 0 ? \\\"\\\" + value : \\\"null\\\";\\n                  } else if (className == stringClass) {\\n                    // Strings are double-quoted and escaped.\\n                    return quote(\\\"\\\" + value);\\n                  }\\n                  // Recursively serialize objects and arrays.\\n                  if ((typeof value === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(value)) == \\\"object\\\") {\\n                    // Check for cyclic structures. This is a linear search; performance\\n                    // is inversely proportional to the number of unique nested objects.\\n                    for (length = stack.length; length--;) {\\n                      if (stack[length] === value) {\\n                        // Cyclic structures cannot be serialized by `JSON.stringify`.\\n                        throw TypeError();\\n                      }\\n                    }\\n                    // Add the object to the stack of traversed objects.\\n                    stack.push(value);\\n                    results = [];\\n                    // Save the current indentation level and indent one additional level.\\n                    prefix = indentation;\\n                    indentation += whitespace;\\n                    if (className == arrayClass) {\\n                      // Recursively serialize array elements.\\n                      for (index = 0, length = value.length; index < length; index++) {\\n                        element = serialize(index, value, callback, properties, whitespace, indentation, stack);\\n                        results.push(element === undef ? \\\"null\\\" : element);\\n                      }\\n                      result = results.length ? whitespace ? \\\"[\\\\n\\\" + indentation + results.join(\\\",\\\\n\\\" + indentation) + \\\"\\\\n\\\" + prefix + \\\"]\\\" : \\\"[\\\" + results.join(\\\",\\\") + \\\"]\\\" : \\\"[]\\\";\\n                    } else {\\n                      // Recursively serialize object members. Members are selected from\\n                      // either a user-specified list of property names, or the object\\n                      // itself.\\n                      _forEach(properties || value, function (property) {\\n                        var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\\n                        if (element !== undef) {\\n                          // According to ES 5.1 section 15.12.3: \\\"If `gap` {whitespace}\\n                          // is not the empty string, let `member` {quote(property) + \\\":\\\"}\\n                          // be the concatenation of `member` and the `space` character.\\\"\\n                          // The \\\"`space` character\\\" refers to the literal space\\n                          // character, not the `space` {width} argument provided to\\n                          // `JSON.stringify`.\\n                          results.push(quote(property) + \\\":\\\" + (whitespace ? \\\" \\\" : \\\"\\\") + element);\\n                        }\\n                      });\\n                      result = results.length ? whitespace ? \\\"{\\\\n\\\" + indentation + results.join(\\\",\\\\n\\\" + indentation) + \\\"\\\\n\\\" + prefix + \\\"}\\\" : \\\"{\\\" + results.join(\\\",\\\") + \\\"}\\\" : \\\"{}\\\";\\n                    }\\n                    // Remove the object from the traversed object stack.\\n                    stack.pop();\\n                    return result;\\n                  }\\n                };\\n\\n                // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\\n                exports.stringify = function (source, filter, width) {\\n                  var whitespace, callback, properties, className;\\n                  if (objectTypes[typeof filter === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(filter)] && filter) {\\n                    if ((className = getClass.call(filter)) == functionClass) {\\n                      callback = filter;\\n                    } else if (className == arrayClass) {\\n                      // Convert the property names array into a makeshift set.\\n                      properties = {};\\n                      for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1)) {}\\n                    }\\n                  }\\n                  if (width) {\\n                    if ((className = getClass.call(width)) == numberClass) {\\n                      // Convert the `width` to an integer and create a string containing\\n                      // `width` number of space characters.\\n                      if ((width -= width % 1) > 0) {\\n                        for (whitespace = \\\"\\\", width > 10 && (width = 10); whitespace.length < width; whitespace += \\\" \\\") {}\\n                      }\\n                    } else if (className == stringClass) {\\n                      whitespace = width.length <= 10 ? width : width.slice(0, 10);\\n                    }\\n                  }\\n                  // Opera <= 7.54u2 discards the values associated with empty string keys\\n                  // (`\\\"\\\"`) only if they are used directly within an object member list\\n                  // (e.g., `!(\\\"\\\" in { \\\"\\\": 1})`).\\n                  return serialize(\\\"\\\", (value = {}, value[\\\"\\\"] = source, value), callback, properties, whitespace, \\\"\\\", []);\\n                };\\n              }\\n\\n              // Public: Parses a JSON source string.\\n              if (!has(\\\"json-parse\\\")) {\\n                var fromCharCode = String.fromCharCode;\\n\\n                // Internal: A map of escaped control characters and their unescaped\\n                // equivalents.\\n                var Unescapes = {\\n                  92: \\\"\\\\\\\\\\\",\\n                  34: '\\\"',\\n                  47: \\\"/\\\",\\n                  98: \\\"\\\\b\\\",\\n                  116: \\\"\\\\t\\\",\\n                  110: \\\"\\\\n\\\",\\n                  102: \\\"\\\\f\\\",\\n                  114: \\\"\\\\r\\\"\\n                };\\n\\n                // Internal: Stores the parser state.\\n                var Index, Source;\\n\\n                // Internal: Resets the parser state and throws a `SyntaxError`.\\n                var abort = function abort() {\\n                  Index = Source = null;\\n                  throw SyntaxError();\\n                };\\n\\n                // Internal: Returns the next token, or `\\\"$\\\"` if the parser has reached\\n                // the end of the source string. A token may be a string, number, `null`\\n                // literal, or Boolean literal.\\n                var lex = function lex() {\\n                  var source = Source,\\n                      length = source.length,\\n                      value,\\n                      begin,\\n                      position,\\n                      isSigned,\\n                      charCode;\\n                  while (Index < length) {\\n                    charCode = source.charCodeAt(Index);\\n                    switch (charCode) {\\n                      case 9:case 10:case 13:case 32:\\n                        // Skip whitespace tokens, including tabs, carriage returns, line\\n                        // feeds, and space characters.\\n                        Index++;\\n                        break;\\n                      case 123:case 125:case 91:case 93:case 58:case 44:\\n                        // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\\n                        // the current position.\\n                        value = charIndexBuggy ? source.charAt(Index) : source[Index];\\n                        Index++;\\n                        return value;\\n                      case 34:\\n                        // `\\\"` delimits a JSON string; advance to the next character and\\n                        // begin parsing the string. String tokens are prefixed with the\\n                        // sentinel `@` character to distinguish them from punctuators and\\n                        // end-of-string tokens.\\n                        for (value = \\\"@\\\", Index++; Index < length;) {\\n                          charCode = source.charCodeAt(Index);\\n                          if (charCode < 32) {\\n                            // Unescaped ASCII control characters (those with a code unit\\n                            // less than the space character) are not permitted.\\n                            abort();\\n                          } else if (charCode == 92) {\\n                            // A reverse solidus (`\\\\`) marks the beginning of an escaped\\n                            // control character (including `\\\"`, `\\\\`, and `/`) or Unicode\\n                            // escape sequence.\\n                            charCode = source.charCodeAt(++Index);\\n                            switch (charCode) {\\n                              case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:\\n                                // Revive escaped control characters.\\n                                value += Unescapes[charCode];\\n                                Index++;\\n                                break;\\n                              case 117:\\n                                // `\\\\u` marks the beginning of a Unicode escape sequence.\\n                                // Advance to the first character and validate the\\n                                // four-digit code point.\\n                                begin = ++Index;\\n                                for (position = Index + 4; Index < position; Index++) {\\n                                  charCode = source.charCodeAt(Index);\\n                                  // A valid sequence comprises four hexdigits (case-\\n                                  // insensitive) that form a single hexadecimal value.\\n                                  if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\\n                                    // Invalid Unicode escape sequence.\\n                                    abort();\\n                                  }\\n                                }\\n                                // Revive the escaped character.\\n                                value += fromCharCode(\\\"0x\\\" + source.slice(begin, Index));\\n                                break;\\n                              default:\\n                                // Invalid escape sequence.\\n                                abort();\\n                            }\\n                          } else {\\n                            if (charCode == 34) {\\n                              // An unescaped double-quote character marks the end of the\\n                              // string.\\n                              break;\\n                            }\\n                            charCode = source.charCodeAt(Index);\\n                            begin = Index;\\n                            // Optimize for the common case where a string is valid.\\n                            while (charCode >= 32 && charCode != 92 && charCode != 34) {\\n                              charCode = source.charCodeAt(++Index);\\n                            }\\n                            // Append the string as-is.\\n                            value += source.slice(begin, Index);\\n                          }\\n                        }\\n                        if (source.charCodeAt(Index) == 34) {\\n                          // Advance to the next character and return the revived string.\\n                          Index++;\\n                          return value;\\n                        }\\n                        // Unterminated string.\\n                        abort();\\n                      default:\\n                        // Parse numbers and literals.\\n                        begin = Index;\\n                        // Advance past the negative sign, if one is specified.\\n                        if (charCode == 45) {\\n                          isSigned = true;\\n                          charCode = source.charCodeAt(++Index);\\n                        }\\n                        // Parse an integer or floating-point value.\\n                        if (charCode >= 48 && charCode <= 57) {\\n                          // Leading zeroes are interpreted as octal literals.\\n                          if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\\n                            // Illegal octal literal.\\n                            abort();\\n                          }\\n                          isSigned = false;\\n                          // Parse the integer component.\\n                          for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++) {}\\n                          // Floats cannot contain a leading decimal point; however, this\\n                          // case is already accounted for by the parser.\\n                          if (source.charCodeAt(Index) == 46) {\\n                            position = ++Index;\\n                            // Parse the decimal component.\\n                            for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {}\\n                            if (position == Index) {\\n                              // Illegal trailing decimal.\\n                              abort();\\n                            }\\n                            Index = position;\\n                          }\\n                          // Parse exponents. The `e` denoting the exponent is\\n                          // case-insensitive.\\n                          charCode = source.charCodeAt(Index);\\n                          if (charCode == 101 || charCode == 69) {\\n                            charCode = source.charCodeAt(++Index);\\n                            // Skip past the sign following the exponent, if one is\\n                            // specified.\\n                            if (charCode == 43 || charCode == 45) {\\n                              Index++;\\n                            }\\n                            // Parse the exponential component.\\n                            for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {}\\n                            if (position == Index) {\\n                              // Illegal empty exponent.\\n                              abort();\\n                            }\\n                            Index = position;\\n                          }\\n                          // Coerce the parsed value to a JavaScript number.\\n                          return +source.slice(begin, Index);\\n                        }\\n                        // A negative sign may only precede numbers.\\n                        if (isSigned) {\\n                          abort();\\n                        }\\n                        // `true`, `false`, and `null` literals.\\n                        if (source.slice(Index, Index + 4) == \\\"true\\\") {\\n                          Index += 4;\\n                          return true;\\n                        } else if (source.slice(Index, Index + 5) == \\\"false\\\") {\\n                          Index += 5;\\n                          return false;\\n                        } else if (source.slice(Index, Index + 4) == \\\"null\\\") {\\n                          Index += 4;\\n                          return null;\\n                        }\\n                        // Unrecognized token.\\n                        abort();\\n                    }\\n                  }\\n                  // Return the sentinel `$` character if the parser has reached the end\\n                  // of the source string.\\n                  return \\\"$\\\";\\n                };\\n\\n                // Internal: Parses a JSON `value` token.\\n                var get = function get(value) {\\n                  var results, hasMembers;\\n                  if (value == \\\"$\\\") {\\n                    // Unexpected end of input.\\n                    abort();\\n                  }\\n                  if (typeof value == \\\"string\\\") {\\n                    if ((charIndexBuggy ? value.charAt(0) : value[0]) == \\\"@\\\") {\\n                      // Remove the sentinel `@` character.\\n                      return value.slice(1);\\n                    }\\n                    // Parse object and array literals.\\n                    if (value == \\\"[\\\") {\\n                      // Parses a JSON array, returning a new JavaScript array.\\n                      results = [];\\n                      for (;; hasMembers || (hasMembers = true)) {\\n                        value = lex();\\n                        // A closing square bracket marks the end of the array literal.\\n                        if (value == \\\"]\\\") {\\n                          break;\\n                        }\\n                        // If the array literal contains elements, the current token\\n                        // should be a comma separating the previous element from the\\n                        // next.\\n                        if (hasMembers) {\\n                          if (value == \\\",\\\") {\\n                            value = lex();\\n                            if (value == \\\"]\\\") {\\n                              // Unexpected trailing `,` in array literal.\\n                              abort();\\n                            }\\n                          } else {\\n                            // A `,` must separate each array element.\\n                            abort();\\n                          }\\n                        }\\n                        // Elisions and leading commas are not permitted.\\n                        if (value == \\\",\\\") {\\n                          abort();\\n                        }\\n                        results.push(get(value));\\n                      }\\n                      return results;\\n                    } else if (value == \\\"{\\\") {\\n                      // Parses a JSON object, returning a new JavaScript object.\\n                      results = {};\\n                      for (;; hasMembers || (hasMembers = true)) {\\n                        value = lex();\\n                        // A closing curly brace marks the end of the object literal.\\n                        if (value == \\\"}\\\") {\\n                          break;\\n                        }\\n                        // If the object literal contains members, the current token\\n                        // should be a comma separator.\\n                        if (hasMembers) {\\n                          if (value == \\\",\\\") {\\n                            value = lex();\\n                            if (value == \\\"}\\\") {\\n                              // Unexpected trailing `,` in object literal.\\n                              abort();\\n                            }\\n                          } else {\\n                            // A `,` must separate each object member.\\n                            abort();\\n                          }\\n                        }\\n                        // Leading commas are not permitted, object property names must be\\n                        // double-quoted strings, and a `:` must separate each property\\n                        // name and value.\\n                        if (value == \\\",\\\" || typeof value != \\\"string\\\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \\\"@\\\" || lex() != \\\":\\\") {\\n                          abort();\\n                        }\\n                        results[value.slice(1)] = get(lex());\\n                      }\\n                      return results;\\n                    }\\n                    // Unexpected token encountered.\\n                    abort();\\n                  }\\n                  return value;\\n                };\\n\\n                // Internal: Updates a traversed object member.\\n                var update = function update(source, property, callback) {\\n                  var element = walk(source, property, callback);\\n                  if (element === undef) {\\n                    delete source[property];\\n                  } else {\\n                    source[property] = element;\\n                  }\\n                };\\n\\n                // Internal: Recursively traverses a parsed JSON object, invoking the\\n                // `callback` function for each value. This is an implementation of the\\n                // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\\n                var walk = function walk(source, property, callback) {\\n                  var value = source[property],\\n                      length;\\n                  if ((typeof value === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(value)) == \\\"object\\\" && value) {\\n                    // `forEach` can't be used to traverse an array in Opera <= 8.54\\n                    // because its `Object#hasOwnProperty` implementation returns `false`\\n                    // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\\\"0\\\")`).\\n                    if (getClass.call(value) == arrayClass) {\\n                      for (length = value.length; length--;) {\\n                        update(value, length, callback);\\n                      }\\n                    } else {\\n                      _forEach(value, function (property) {\\n                        update(value, property, callback);\\n                      });\\n                    }\\n                  }\\n                  return callback.call(source, property, value);\\n                };\\n\\n                // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\\n                exports.parse = function (source, callback) {\\n                  var result, value;\\n                  Index = 0;\\n                  Source = \\\"\\\" + source;\\n                  result = get(lex());\\n                  // If a JSON string contains multiple tokens, it is invalid.\\n                  if (lex() != \\\"$\\\") {\\n                    abort();\\n                  }\\n                  // Reset the parser state.\\n                  Index = Source = null;\\n                  return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\\\"\\\"] = result, value), \\\"\\\", callback) : result;\\n                };\\n              }\\n            }\\n\\n            exports[\\\"runInContext\\\"] = runInContext;\\n            return exports;\\n          }\\n\\n          if (freeExports && !isLoader) {\\n            // Export for CommonJS environments.\\n            runInContext(root, freeExports);\\n          } else {\\n            // Export for web browsers and JavaScript engines.\\n            var nativeJSON = root.JSON,\\n                previousJSON = root[\\\"JSON3\\\"],\\n                isRestored = false;\\n\\n            var JSON3 = runInContext(root, root[\\\"JSON3\\\"] = {\\n              // Public: Restores the original value of the global `JSON` object and\\n              // returns a reference to the `JSON3` object.\\n              \\\"noConflict\\\": function noConflict() {\\n                if (!isRestored) {\\n                  isRestored = true;\\n                  root.JSON = nativeJSON;\\n                  root[\\\"JSON3\\\"] = previousJSON;\\n                  nativeJSON = previousJSON = null;\\n                }\\n                return JSON3;\\n              }\\n            });\\n\\n            root.JSON = {\\n              \\\"parse\\\": JSON3.parse,\\n              \\\"stringify\\\": JSON3.stringify\\n            };\\n          }\\n\\n          // Export for asynchronous module loaders.\\n          if (isLoader) {\\n            define(function () {\\n              return JSON3;\\n            });\\n          }\\n        }).call(this);\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, {}], 59: [function (require, module, exports) {\\n      'use strict';\\n\\n      var has = Object.prototype.hasOwnProperty;\\n\\n      /**\\n       * Simple query string parser.\\n       *\\n       * @param {String} query The query string that needs to be parsed.\\n       * @returns {Object}\\n       * @api public\\n       */\\n      function querystring(query) {\\n        var parser = /([^=?&]+)=?([^&]*)/g,\\n            result = {},\\n            part;\\n\\n        //\\n        // Little nifty parsing hack, leverage the fact that RegExp.exec increments\\n        // the lastIndex property so we can continue executing this loop until we've\\n        // parsed all results.\\n        //\\n        for (; part = parser.exec(query); result[decodeURIComponent(part[1])] = decodeURIComponent(part[2])) {}\\n\\n        return result;\\n      }\\n\\n      /**\\n       * Transform a query string to an object.\\n       *\\n       * @param {Object} obj Object that should be transformed.\\n       * @param {String} prefix Optional prefix.\\n       * @returns {String}\\n       * @api public\\n       */\\n      function querystringify(obj, prefix) {\\n        prefix = prefix || '';\\n\\n        var pairs = [];\\n\\n        //\\n        // Optionally prefix with a '?' if needed\\n        //\\n        if ('string' !== typeof prefix) prefix = '?';\\n\\n        for (var key in obj) {\\n          if (has.call(obj, key)) {\\n            pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\\n          }\\n        }\\n\\n        return pairs.length ? prefix + pairs.join('&') : '';\\n      }\\n\\n      //\\n      // Expose the module.\\n      //\\n      exports.stringify = querystringify;\\n      exports.parse = querystring;\\n    }, {}], 60: [function (require, module, exports) {\\n      'use strict';\\n\\n      /**\\n       * Check if we're required to add a port number.\\n       *\\n       * @see https://url.spec.whatwg.org/#default-port\\n       * @param {Number|String} port Port number we need to check\\n       * @param {String} protocol Protocol we need to check against.\\n       * @returns {Boolean} Is it a default port for the given protocol\\n       * @api private\\n       */\\n\\n      module.exports = function required(port, protocol) {\\n        protocol = protocol.split(':')[0];\\n        port = +port;\\n\\n        if (!port) return false;\\n\\n        switch (protocol) {\\n          case 'http':\\n          case 'ws':\\n            return port !== 80;\\n\\n          case 'https':\\n          case 'wss':\\n            return port !== 443;\\n\\n          case 'ftp':\\n            return port !== 21;\\n\\n          case 'gopher':\\n            return port !== 70;\\n\\n          case 'file':\\n            return false;\\n        }\\n\\n        return port !== 0;\\n      };\\n    }, {}], 61: [function (require, module, exports) {\\n      'use strict';\\n\\n      var required = require('requires-port'),\\n          lolcation = require('./lolcation'),\\n          qs = require('querystringify'),\\n          protocolre = /^([a-z][a-z0-9.+-]*:)?(\\\\/\\\\/)?([\\\\S\\\\s]*)/i;\\n\\n      /**\\n       * These are the parse rules for the URL parser, it informs the parser\\n       * about:\\n       *\\n       * 0. The char it Needs to parse, if it's a string it should be done using\\n       *    indexOf, RegExp using exec and NaN means set as current value.\\n       * 1. The property we should set when parsing this value.\\n       * 2. Indication if it's backwards or forward parsing, when set as number it's\\n       *    the value of extra chars that should be split off.\\n       * 3. Inherit from location if non existing in the parser.\\n       * 4. `toLowerCase` the resulting value.\\n       */\\n      var rules = [['#', 'hash'], // Extract from the back.\\n      ['?', 'query'], // Extract from the back.\\n      ['/', 'pathname'], // Extract from the back.\\n      ['@', 'auth', 1], // Extract from the front.\\n      [NaN, 'host', undefined, 1, 1], // Set left over value.\\n      [/:(\\\\d+)$/, 'port', undefined, 1], // RegExp the back.\\n      [NaN, 'hostname', undefined, 1, 1] // Set left over.\\n      ];\\n\\n      /**\\n       * @typedef ProtocolExtract\\n       * @type Object\\n       * @property {String} protocol Protocol matched in the URL, in lowercase.\\n       * @property {Boolean} slashes `true` if protocol is followed by \\\"//\\\", else `false`.\\n       * @property {String} rest Rest of the URL that is not part of the protocol.\\n       */\\n\\n      /**\\n       * Extract protocol information from a URL with/without double slash (\\\"//\\\").\\n       *\\n       * @param {String} address URL we want to extract from.\\n       * @return {ProtocolExtract} Extracted information.\\n       * @api private\\n       */\\n      function extractProtocol(address) {\\n        var match = protocolre.exec(address);\\n\\n        return {\\n          protocol: match[1] ? match[1].toLowerCase() : '',\\n          slashes: !!match[2],\\n          rest: match[3]\\n        };\\n      }\\n\\n      /**\\n       * Resolve a relative URL pathname against a base URL pathname.\\n       *\\n       * @param {String} relative Pathname of the relative URL.\\n       * @param {String} base Pathname of the base URL.\\n       * @return {String} Resolved pathname.\\n       * @api private\\n       */\\n      function resolve(relative, base) {\\n        var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),\\n            i = path.length,\\n            last = path[i - 1],\\n            unshift = false,\\n            up = 0;\\n\\n        while (i--) {\\n          if (path[i] === '.') {\\n            path.splice(i, 1);\\n          } else if (path[i] === '..') {\\n            path.splice(i, 1);\\n            up++;\\n          } else if (up) {\\n            if (i === 0) unshift = true;\\n            path.splice(i, 1);\\n            up--;\\n          }\\n        }\\n\\n        if (unshift) path.unshift('');\\n        if (last === '.' || last === '..') path.push('');\\n\\n        return path.join('/');\\n      }\\n\\n      /**\\n       * The actual URL instance. Instead of returning an object we've opted-in to\\n       * create an actual constructor as it's much more memory efficient and\\n       * faster and it pleases my OCD.\\n       *\\n       * @constructor\\n       * @param {String} address URL we want to parse.\\n       * @param {Object|String} location Location defaults for relative paths.\\n       * @param {Boolean|Function} parser Parser for the query string.\\n       * @api public\\n       */\\n      function URL(address, location, parser) {\\n        if (!(this instanceof URL)) {\\n          return new URL(address, location, parser);\\n        }\\n\\n        var relative,\\n            extracted,\\n            parse,\\n            instruction,\\n            index,\\n            key,\\n            instructions = rules.slice(),\\n            type = typeof location === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(location),\\n            url = this,\\n            i = 0;\\n\\n        //\\n        // The following if statements allows this module two have compatibility with\\n        // 2 different API:\\n        //\\n        // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\\n        //    where the boolean indicates that the query string should also be parsed.\\n        //\\n        // 2. The `URL` interface of the browser which accepts a URL, object as\\n        //    arguments. The supplied object will be used as default values / fall-back\\n        //    for relative paths.\\n        //\\n        if ('object' !== type && 'string' !== type) {\\n          parser = location;\\n          location = null;\\n        }\\n\\n        if (parser && 'function' !== typeof parser) parser = qs.parse;\\n\\n        location = lolcation(location);\\n\\n        //\\n        // Extract protocol information before running the instructions.\\n        //\\n        extracted = extractProtocol(address || '');\\n        relative = !extracted.protocol && !extracted.slashes;\\n        url.slashes = extracted.slashes || relative && location.slashes;\\n        url.protocol = extracted.protocol || location.protocol || '';\\n        address = extracted.rest;\\n\\n        //\\n        // When the authority component is absent the URL starts with a path\\n        // component.\\n        //\\n        if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\\n\\n        for (; i < instructions.length; i++) {\\n          instruction = instructions[i];\\n          parse = instruction[0];\\n          key = instruction[1];\\n\\n          if (parse !== parse) {\\n            url[key] = address;\\n          } else if ('string' === typeof parse) {\\n            if (~(index = address.indexOf(parse))) {\\n              if ('number' === typeof instruction[2]) {\\n                url[key] = address.slice(0, index);\\n                address = address.slice(index + instruction[2]);\\n              } else {\\n                url[key] = address.slice(index);\\n                address = address.slice(0, index);\\n              }\\n            }\\n          } else if (index = parse.exec(address)) {\\n            url[key] = index[1];\\n            address = address.slice(0, index.index);\\n          }\\n\\n          url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : '');\\n\\n          //\\n          // Hostname, host and protocol should be lowercased so they can be used to\\n          // create a proper `origin`.\\n          //\\n          if (instruction[4]) url[key] = url[key].toLowerCase();\\n        }\\n\\n        //\\n        // Also parse the supplied query string in to an object. If we're supplied\\n        // with a custom parser as function use that instead of the default build-in\\n        // parser.\\n        //\\n        if (parser) url.query = parser(url.query);\\n\\n        //\\n        // If the URL is relative, resolve the pathname against the base URL.\\n        //\\n        if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {\\n          url.pathname = resolve(url.pathname, location.pathname);\\n        }\\n\\n        //\\n        // We should not add port numbers if they are already the default port number\\n        // for a given protocol. As the host also contains the port number we're going\\n        // override it with the hostname which contains no port number.\\n        //\\n        if (!required(url.port, url.protocol)) {\\n          url.host = url.hostname;\\n          url.port = '';\\n        }\\n\\n        //\\n        // Parse down the `auth` for the username and password.\\n        //\\n        url.username = url.password = '';\\n        if (url.auth) {\\n          instruction = url.auth.split(':');\\n          url.username = instruction[0] || '';\\n          url.password = instruction[1] || '';\\n        }\\n\\n        url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\\n\\n        //\\n        // The href is just the compiled result.\\n        //\\n        url.href = url.toString();\\n      }\\n\\n      /**\\n       * This is convenience method for changing properties in the URL instance to\\n       * insure that they all propagate correctly.\\n       *\\n       * @param {String} part          Property we need to adjust.\\n       * @param {Mixed} value          The newly assigned value.\\n       * @param {Boolean|Function} fn  When setting the query, it will be the function\\n       *                               used to parse the query.\\n       *                               When setting the protocol, double slash will be\\n       *                               removed from the final url if it is true.\\n       * @returns {URL}\\n       * @api public\\n       */\\n      function set(part, value, fn) {\\n        var url = this;\\n\\n        switch (part) {\\n          case 'query':\\n            if ('string' === typeof value && value.length) {\\n              value = (fn || qs.parse)(value);\\n            }\\n\\n            url[part] = value;\\n            break;\\n\\n          case 'port':\\n            url[part] = value;\\n\\n            if (!required(value, url.protocol)) {\\n              url.host = url.hostname;\\n              url[part] = '';\\n            } else if (value) {\\n              url.host = url.hostname + ':' + value;\\n            }\\n\\n            break;\\n\\n          case 'hostname':\\n            url[part] = value;\\n\\n            if (url.port) value += ':' + url.port;\\n            url.host = value;\\n            break;\\n\\n          case 'host':\\n            url[part] = value;\\n\\n            if (/:\\\\d+$/.test(value)) {\\n              value = value.split(':');\\n              url.port = value.pop();\\n              url.hostname = value.join(':');\\n            } else {\\n              url.hostname = value;\\n              url.port = '';\\n            }\\n\\n            break;\\n\\n          case 'protocol':\\n            url.protocol = value.toLowerCase();\\n            url.slashes = !fn;\\n            break;\\n\\n          case 'pathname':\\n            url.pathname = value.length && value.charAt(0) !== '/' ? '/' + value : value;\\n\\n            break;\\n\\n          default:\\n            url[part] = value;\\n        }\\n\\n        for (var i = 0; i < rules.length; i++) {\\n          var ins = rules[i];\\n\\n          if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\\n        }\\n\\n        url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\\n\\n        url.href = url.toString();\\n\\n        return url;\\n      };\\n\\n      /**\\n       * Transform the properties back in to a valid and full URL string.\\n       *\\n       * @param {Function} stringify Optional query stringify function.\\n       * @returns {String}\\n       * @api public\\n       */\\n      function toString(stringify) {\\n        if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\\n\\n        var query,\\n            url = this,\\n            protocol = url.protocol;\\n\\n        if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\\n\\n        var result = protocol + (url.slashes ? '//' : '');\\n\\n        if (url.username) {\\n          result += url.username;\\n          if (url.password) result += ':' + url.password;\\n          result += '@';\\n        }\\n\\n        result += url.host + url.pathname;\\n\\n        query = 'object' === _typeof(url.query) ? stringify(url.query) : url.query;\\n        if (query) result += '?' !== query.charAt(0) ? '?' + query : query;\\n\\n        if (url.hash) result += url.hash;\\n\\n        return result;\\n      }\\n\\n      URL.prototype = { set: set, toString: toString };\\n\\n      //\\n      // Expose the URL parser and some additional properties that might be useful for\\n      // others or testing.\\n      //\\n      URL.extractProtocol = extractProtocol;\\n      URL.location = lolcation;\\n      URL.qs = qs;\\n\\n      module.exports = URL;\\n    }, { \\\"./lolcation\\\": 62, \\\"querystringify\\\": 59, \\\"requires-port\\\": 60 }], 62: [function (require, module, exports) {\\n      (function (global) {\\n        'use strict';\\n\\n        var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\\\/\\\\//;\\n\\n        /**\\n         * These properties should not be copied or inherited from. This is only needed\\n         * for all non blob URL's as a blob URL does not include a hash, only the\\n         * origin.\\n         *\\n         * @type {Object}\\n         * @private\\n         */\\n        var ignore = { hash: 1, query: 1 },\\n            URL;\\n\\n        /**\\n         * The location object differs when your code is loaded through a normal page,\\n         * Worker or through a worker using a blob. And with the blobble begins the\\n         * trouble as the location object will contain the URL of the blob, not the\\n         * location of the page where our code is loaded in. The actual origin is\\n         * encoded in the `pathname` so we can thankfully generate a good \\\"default\\\"\\n         * location from it so we can generate proper relative URL's again.\\n         *\\n         * @param {Object|String} loc Optional default location object.\\n         * @returns {Object} lolcation object.\\n         * @api public\\n         */\\n        module.exports = function lolcation(loc) {\\n          loc = loc || global.location || {};\\n          URL = URL || require('./');\\n\\n          var finaldestination = {},\\n              type = typeof loc === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(loc),\\n              key;\\n\\n          if ('blob:' === loc.protocol) {\\n            finaldestination = new URL(unescape(loc.pathname), {});\\n          } else if ('string' === type) {\\n            finaldestination = new URL(loc, {});\\n            for (key in ignore) {\\n              delete finaldestination[key];\\n            }\\n          } else if ('object' === type) {\\n            for (key in loc) {\\n              if (key in ignore) continue;\\n              finaldestination[key] = loc[key];\\n            }\\n\\n            if (finaldestination.slashes === undefined) {\\n              finaldestination.slashes = slashes.test(loc.href);\\n            }\\n          }\\n\\n          return finaldestination;\\n        };\\n      }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {});\\n    }, { \\\"./\\\": 61 }] }, {}, [1])(1);\\n});\\n\\n//# sourceMappingURL=sockjs.js.map\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 8)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9kaXN0L3NvY2tqcy5qcz85YmUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBLENBQUMsVUFBUyxHQUFHO01BQUcsT0FBTyxxQ0FBVSxZQUFVLE9BQU8sV0FBUyxhQUFhO1dBQU8sVUFBWTtBQUE5RSxhQUFzRixJQUFtQyxFQUFLO3FDQUFPLHNDQUFNO0FBQUE7QUFBQTtBQUFBO0FBQXhELFNBQTZELFVBQW1LO0FBQWhVLEdBQWtVLFlBQVc7TUFBSSxRQUFPLFFBQU8sUUFBUSxnQkFBaUIsRUFBRSxHQUFFLEdBQUUsR0FBRzthQUFTLEVBQUUsR0FBRSxHQUFHO1VBQUcsQ0FBQyxFQUFFLElBQUk7WUFBRyxDQUFDLEVBQUUsSUFBSTtjQUFJLElBQUUsT0FBTyxXQUFTLGNBQVksUUFBUSxJQUFHLENBQUMsS0FBRyxHQUFFLE9BQU8sUUFBRSxHQUFFLENBQUMsR0FBRyxJQUFHLEdBQUUsT0FBTyxFQUFFLEdBQUUsQ0FBQyxHQUFHLElBQUksSUFBRSxJQUFJLE1BQU0seUJBQXVCLElBQUUsS0FBSyxNQUFNLEVBQUUsT0FBSyxvQkFBcUI7YUFBSSxJQUFFLEVBQUUsS0FBRyxFQUFDLFNBQVEsT0FBTSxHQUFHLEdBQUcsS0FBSyxFQUFFLFNBQVEsVUFBUyxHQUFHO2NBQUksSUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLE9BQU8sRUFBRSxJQUFFLElBQUs7QUFBcEUsV0FBcUUsR0FBRSxFQUFFLFNBQVEsR0FBRSxHQUFFLEdBQUs7Y0FBTyxFQUFFLEdBQVc7U0FBSSxJQUFFLE9BQU8sV0FBUyxjQUFZLFFBQVEsS0FBSSxJQUFJLElBQUUsR0FBRSxJQUFFLEVBQUUsUUFBTyxLQUFJO1FBQUUsRUFBRTtBQUFJLFlBQVM7QUFBemIsR0FBQyxDQUEwYixFQUFDLElBQUcsVUFBUyxTQUFRLFFBQU8sU0FDcjBCO09BQUMsVUFBVSxRQUNYO0FBRUE7O1lBQUksZ0JBQWdC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RUFBRSxNQUFNLEdBQUcsT0FBTztZQUcvQjs7QUFZQTs7Ozs7Ozs7Ozs7O2VBQU8sVUFBVSxTQUFTLFVBQVUsS0FDbEM7Z0JBQU0sT0FBTyxPQUFPLFlBQ3BCO2dCQUFNLE9BQU8sUUFFYjs7Y0FBSSxtQkFBbUI7Y0FDbkIsY0FBYztjQUdsQjs7Y0FBSSxZQUFZLElBQUksVUFDbEI7K0JBQW1CLElBQUksSUFBSSxTQUFTLElBQUksV0FDekM7QUFGRCxxQkFFVyxhQUFhLE1BQ3RCOytCQUFtQixJQUFJLElBQUksS0FDM0I7aUJBQUssT0FBTyxRQUFRO3FCQUFPLGlCQUFpQjtBQUM3QztBQUhNLGlCQUdBLElBQUksYUFBYSxNQUN0QjtpQkFBSyxPQUFPLEtBQ1Y7a0JBQUksT0FBTyxRQUNYOytCQUFpQixPQUFPLElBQ3pCO0FBRUQ7O2dCQUFJLGlCQUFpQixZQUFZLFdBQy9COytCQUFpQixVQUFVLFFBQVEsS0FBSyxJQUN6QztBQUNGO0FBRUQ7O2lCQUNEO0FBRUE7QUF2REQsU0F1REcsS0FBSyxNQUFLLE9BQU8sV0FBVyxjQUFjLFNBQVMsT0FBTyxTQUFTLGNBQWMsT0FBTyxPQUFPLFdBQVcsY0FBYyxTQUUxSDtBQTFEK0QsT0EwRDlELEVBQUMsTUFBSyxTQUFNLElBQUcsQ0FBQyxJQUNqQjtBQWhtTEQ7O0FBbW1MQSxrQyIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHNvY2tqcy1jbGllbnQgdjEuMS40IHwgaHR0cDovL3NvY2tqcy5vcmcgfCBNSVQgbGljZW5zZSAqL1xuKGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09XCJvYmplY3RcIiYmdHlwZW9mIG1vZHVsZSE9PVwidW5kZWZpbmVkXCIpe21vZHVsZS5leHBvcnRzPWYoKX1lbHNlIGlmKHR5cGVvZiBkZWZpbmU9PT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT1cInVuZGVmaW5lZFwiKXtnPXdpbmRvd31lbHNlIGlmKHR5cGVvZiBnbG9iYWwhPT1cInVuZGVmaW5lZFwiKXtnPWdsb2JhbH1lbHNlIGlmKHR5cGVvZiBzZWxmIT09XCJ1bmRlZmluZWRcIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuU29ja0pTID0gZigpfX0pKGZ1bmN0aW9uKCl7dmFyIGRlZmluZSxtb2R1bGUsZXhwb3J0cztyZXR1cm4gKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkoezE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdHJhbnNwb3J0TGlzdCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0LWxpc3QnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL21haW4nKSh0cmFuc3BvcnRMaXN0KTtcblxuLy8gVE9ETyBjYW4ndCBnZXQgcmlkIG9mIHRoaXMgdW50aWwgYWxsIHNlcnZlcnMgZG9cbmlmICgnX3NvY2tqc19vbmxvYWQnIGluIGdsb2JhbCkge1xuICBzZXRUaW1lb3V0KGdsb2JhbC5fc29ja2pzX29ubG9hZCwgMSk7XG59XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vbWFpblwiOjE0LFwiLi90cmFuc3BvcnQtbGlzdFwiOjE2fV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudCA9IHJlcXVpcmUoJy4vZXZlbnQnKVxuICA7XG5cbmZ1bmN0aW9uIENsb3NlRXZlbnQoKSB7XG4gIEV2ZW50LmNhbGwodGhpcyk7XG4gIHRoaXMuaW5pdEV2ZW50KCdjbG9zZScsIGZhbHNlLCBmYWxzZSk7XG4gIHRoaXMud2FzQ2xlYW4gPSBmYWxzZTtcbiAgdGhpcy5jb2RlID0gMDtcbiAgdGhpcy5yZWFzb24gPSAnJztcbn1cblxuaW5oZXJpdHMoQ2xvc2VFdmVudCwgRXZlbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENsb3NlRXZlbnQ7XG5cbn0se1wiLi9ldmVudFwiOjQsXCJpbmhlcml0c1wiOjU3fV0sMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudFRhcmdldCA9IHJlcXVpcmUoJy4vZXZlbnR0YXJnZXQnKVxuICA7XG5cbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgRXZlbnRUYXJnZXQuY2FsbCh0aGlzKTtcbn1cblxuaW5oZXJpdHMoRXZlbnRFbWl0dGVyLCBFdmVudFRhcmdldCk7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID0gZnVuY3Rpb24odHlwZSkge1xuICBpZiAodHlwZSkge1xuICAgIGRlbGV0ZSB0aGlzLl9saXN0ZW5lcnNbdHlwZV07XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzID0ge307XG4gIH1cbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICAgICwgZmlyZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBnKCkge1xuICAgIHNlbGYucmVtb3ZlTGlzdGVuZXIodHlwZSwgZyk7XG5cbiAgICBpZiAoIWZpcmVkKSB7XG4gICAgICBmaXJlZCA9IHRydWU7XG4gICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIHRoaXMub24odHlwZSwgZyk7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHR5cGUgPSBhcmd1bWVudHNbMF07XG4gIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbdHlwZV07XG4gIGlmICghbGlzdGVuZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIGVxdWl2YWxlbnQgb2YgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgdmFyIGwgPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgYXJncyA9IG5ldyBBcnJheShsIC0gMSk7XG4gIGZvciAodmFyIGFpID0gMTsgYWkgPCBsOyBhaSsrKSB7XG4gICAgYXJnc1thaSAtIDFdID0gYXJndW1lbnRzW2FpXTtcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgIGxpc3RlbmVyc1tpXS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfVxufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbiA9IEV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBFdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcjtcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPSBFdmVudFRhcmdldC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lcjtcblxubW9kdWxlLmV4cG9ydHMuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG59LHtcIi4vZXZlbnR0YXJnZXRcIjo1LFwiaW5oZXJpdHNcIjo1N31dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBFdmVudChldmVudFR5cGUpIHtcbiAgdGhpcy50eXBlID0gZXZlbnRUeXBlO1xufVxuXG5FdmVudC5wcm90b3R5cGUuaW5pdEV2ZW50ID0gZnVuY3Rpb24oZXZlbnRUeXBlLCBjYW5CdWJibGUsIGNhbmNlbGFibGUpIHtcbiAgdGhpcy50eXBlID0gZXZlbnRUeXBlO1xuICB0aGlzLmJ1YmJsZXMgPSBjYW5CdWJibGU7XG4gIHRoaXMuY2FuY2VsYWJsZSA9IGNhbmNlbGFibGU7XG4gIHRoaXMudGltZVN0YW1wID0gK25ldyBEYXRlKCk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnQucHJvdG90eXBlLnN0b3BQcm9wYWdhdGlvbiA9IGZ1bmN0aW9uKCkge307XG5FdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbigpIHt9O1xuXG5FdmVudC5DQVBUVVJJTkdfUEhBU0UgPSAxO1xuRXZlbnQuQVRfVEFSR0VUID0gMjtcbkV2ZW50LkJVQkJMSU5HX1BIQVNFID0gMztcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudDtcblxufSx7fV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8qIFNpbXBsaWZpZWQgaW1wbGVtZW50YXRpb24gb2YgRE9NMiBFdmVudFRhcmdldC5cbiAqICAgaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTItRXZlbnRzL2V2ZW50cy5odG1sI0V2ZW50cy1FdmVudFRhcmdldFxuICovXG5cbmZ1bmN0aW9uIEV2ZW50VGFyZ2V0KCkge1xuICB0aGlzLl9saXN0ZW5lcnMgPSB7fTtcbn1cblxuRXZlbnRUYXJnZXQucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudFR5cGUsIGxpc3RlbmVyKSB7XG4gIGlmICghKGV2ZW50VHlwZSBpbiB0aGlzLl9saXN0ZW5lcnMpKSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV0gPSBbXTtcbiAgfVxuICB2YXIgYXJyID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV07XG4gIC8vICM0XG4gIGlmIChhcnIuaW5kZXhPZihsaXN0ZW5lcikgPT09IC0xKSB7XG4gICAgLy8gTWFrZSBhIGNvcHkgc28gYXMgbm90IHRvIGludGVyZmVyZSB3aXRoIGEgY3VycmVudCBkaXNwYXRjaEV2ZW50LlxuICAgIGFyciA9IGFyci5jb25jYXQoW2xpc3RlbmVyXSk7XG4gIH1cbiAgdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV0gPSBhcnI7XG59O1xuXG5FdmVudFRhcmdldC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50VHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGFyciA9IHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdO1xuICBpZiAoIWFycikge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgaWR4ID0gYXJyLmluZGV4T2YobGlzdGVuZXIpO1xuICBpZiAoaWR4ICE9PSAtMSkge1xuICAgIGlmIChhcnIubGVuZ3RoID4gMSkge1xuICAgICAgLy8gTWFrZSBhIGNvcHkgc28gYXMgbm90IHRvIGludGVyZmVyZSB3aXRoIGEgY3VycmVudCBkaXNwYXRjaEV2ZW50LlxuICAgICAgdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV0gPSBhcnIuc2xpY2UoMCwgaWR4KS5jb25jYXQoYXJyLnNsaWNlKGlkeCArIDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cbn07XG5cbkV2ZW50VGFyZ2V0LnByb3RvdHlwZS5kaXNwYXRjaEV2ZW50ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBldmVudCA9IGFyZ3VtZW50c1swXTtcbiAgdmFyIHQgPSBldmVudC50eXBlO1xuICAvLyBlcXVpdmFsZW50IG9mIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMCk7XG4gIHZhciBhcmdzID0gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IFtldmVudF0gOiBBcnJheS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICAvLyBUT0RPOiBUaGlzIGRvZXNuJ3QgbWF0Y2ggdGhlIHJlYWwgYmVoYXZpb3I7IHBlciBzcGVjLCBvbmZvbyBnZXRcbiAgLy8gdGhlaXIgcGxhY2UgaW4gbGluZSBmcm9tIHRoZSAvZmlyc3QvIHRpbWUgdGhleSdyZSBzZXQgZnJvbVxuICAvLyBub24tbnVsbC4gQWx0aG91Z2ggV2ViS2l0IGJ1bXBzIGl0IHRvIHRoZSBlbmQgZXZlcnkgdGltZSBpdCdzXG4gIC8vIHNldC5cbiAgaWYgKHRoaXNbJ29uJyArIHRdKSB7XG4gICAgdGhpc1snb24nICsgdF0uYXBwbHkodGhpcywgYXJncyk7XG4gIH1cbiAgaWYgKHQgaW4gdGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgLy8gR3JhYiBhIHJlZmVyZW5jZSB0byB0aGUgbGlzdGVuZXJzIGxpc3QuIHJlbW92ZUV2ZW50TGlzdGVuZXIgbWF5IGFsdGVyIHRoZSBsaXN0LlxuICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbdF07XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxpc3RlbmVyc1tpXS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRUYXJnZXQ7XG5cbn0se31dLDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50JylcbiAgO1xuXG5mdW5jdGlvbiBUcmFuc3BvcnRNZXNzYWdlRXZlbnQoZGF0YSkge1xuICBFdmVudC5jYWxsKHRoaXMpO1xuICB0aGlzLmluaXRFdmVudCgnbWVzc2FnZScsIGZhbHNlLCBmYWxzZSk7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG59XG5cbmluaGVyaXRzKFRyYW5zcG9ydE1lc3NhZ2VFdmVudCwgRXZlbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRyYW5zcG9ydE1lc3NhZ2VFdmVudDtcblxufSx7XCIuL2V2ZW50XCI6NCxcImluaGVyaXRzXCI6NTd9XSw3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIGlmcmFtZVV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9pZnJhbWUnKVxuICA7XG5cbmZ1bmN0aW9uIEZhY2FkZUpTKHRyYW5zcG9ydCkge1xuICB0aGlzLl90cmFuc3BvcnQgPSB0cmFuc3BvcnQ7XG4gIHRyYW5zcG9ydC5vbignbWVzc2FnZScsIHRoaXMuX3RyYW5zcG9ydE1lc3NhZ2UuYmluZCh0aGlzKSk7XG4gIHRyYW5zcG9ydC5vbignY2xvc2UnLCB0aGlzLl90cmFuc3BvcnRDbG9zZS5iaW5kKHRoaXMpKTtcbn1cblxuRmFjYWRlSlMucHJvdG90eXBlLl90cmFuc3BvcnRDbG9zZSA9IGZ1bmN0aW9uKGNvZGUsIHJlYXNvbikge1xuICBpZnJhbWVVdGlscy5wb3N0TWVzc2FnZSgnYycsIEpTT04zLnN0cmluZ2lmeShbY29kZSwgcmVhc29uXSkpO1xufTtcbkZhY2FkZUpTLnByb3RvdHlwZS5fdHJhbnNwb3J0TWVzc2FnZSA9IGZ1bmN0aW9uKGZyYW1lKSB7XG4gIGlmcmFtZVV0aWxzLnBvc3RNZXNzYWdlKCd0JywgZnJhbWUpO1xufTtcbkZhY2FkZUpTLnByb3RvdHlwZS5fc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgdGhpcy5fdHJhbnNwb3J0LnNlbmQoZGF0YSk7XG59O1xuRmFjYWRlSlMucHJvdG90eXBlLl9jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl90cmFuc3BvcnQuY2xvc2UoKTtcbiAgdGhpcy5fdHJhbnNwb3J0LnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBGYWNhZGVKUztcblxufSx7XCIuL3V0aWxzL2lmcmFtZVwiOjQ3LFwianNvbjNcIjo1OH1dLDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHVybFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy91cmwnKVxuICAsIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL2V2ZW50JylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBGYWNhZGVKUyA9IHJlcXVpcmUoJy4vZmFjYWRlJylcbiAgLCBJbmZvSWZyYW1lUmVjZWl2ZXIgPSByZXF1aXJlKCcuL2luZm8taWZyYW1lLXJlY2VpdmVyJylcbiAgLCBpZnJhbWVVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvaWZyYW1lJylcbiAgLCBsb2MgPSByZXF1aXJlKCcuL2xvY2F0aW9uJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OmlmcmFtZS1ib290c3RyYXAnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihTb2NrSlMsIGF2YWlsYWJsZVRyYW5zcG9ydHMpIHtcbiAgdmFyIHRyYW5zcG9ydE1hcCA9IHt9O1xuICBhdmFpbGFibGVUcmFuc3BvcnRzLmZvckVhY2goZnVuY3Rpb24oYXQpIHtcbiAgICBpZiAoYXQuZmFjYWRlVHJhbnNwb3J0KSB7XG4gICAgICB0cmFuc3BvcnRNYXBbYXQuZmFjYWRlVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWVdID0gYXQuZmFjYWRlVHJhbnNwb3J0O1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gaGFyZC1jb2RlZCBmb3IgdGhlIGluZm8gaWZyYW1lXG4gIC8vIFRPRE8gc2VlIGlmIHdlIGNhbiBtYWtlIHRoaXMgbW9yZSBkeW5hbWljXG4gIHRyYW5zcG9ydE1hcFtJbmZvSWZyYW1lUmVjZWl2ZXIudHJhbnNwb3J0TmFtZV0gPSBJbmZvSWZyYW1lUmVjZWl2ZXI7XG4gIHZhciBwYXJlbnRPcmlnaW47XG5cbiAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4gIFNvY2tKUy5ib290c3RyYXBfaWZyYW1lID0gZnVuY3Rpb24oKSB7XG4gICAgLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cbiAgICB2YXIgZmFjYWRlO1xuICAgIGlmcmFtZVV0aWxzLmN1cnJlbnRXaW5kb3dJZCA9IGxvYy5oYXNoLnNsaWNlKDEpO1xuICAgIHZhciBvbk1lc3NhZ2UgPSBmdW5jdGlvbihlKSB7XG4gICAgICBpZiAoZS5zb3VyY2UgIT09IHBhcmVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHBhcmVudE9yaWdpbiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcGFyZW50T3JpZ2luID0gZS5vcmlnaW47XG4gICAgICB9XG4gICAgICBpZiAoZS5vcmlnaW4gIT09IHBhcmVudE9yaWdpbikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBpZnJhbWVNZXNzYWdlO1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWZyYW1lTWVzc2FnZSA9IEpTT04zLnBhcnNlKGUuZGF0YSk7XG4gICAgICB9IGNhdGNoIChpZ25vcmVkKSB7XG4gICAgICAgIGRlYnVnKCdiYWQganNvbicsIGUuZGF0YSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlmcmFtZU1lc3NhZ2Uud2luZG93SWQgIT09IGlmcmFtZVV0aWxzLmN1cnJlbnRXaW5kb3dJZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzd2l0Y2ggKGlmcmFtZU1lc3NhZ2UudHlwZSkge1xuICAgICAgY2FzZSAncyc6XG4gICAgICAgIHZhciBwO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHAgPSBKU09OMy5wYXJzZShpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgICB9IGNhdGNoIChpZ25vcmVkKSB7XG4gICAgICAgICAgZGVidWcoJ2JhZCBqc29uJywgaWZyYW1lTWVzc2FnZS5kYXRhKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICB2YXIgdmVyc2lvbiA9IHBbMF07XG4gICAgICAgIHZhciB0cmFuc3BvcnQgPSBwWzFdO1xuICAgICAgICB2YXIgdHJhbnNVcmwgPSBwWzJdO1xuICAgICAgICB2YXIgYmFzZVVybCA9IHBbM107XG4gICAgICAgIGRlYnVnKHZlcnNpb24sIHRyYW5zcG9ydCwgdHJhbnNVcmwsIGJhc2VVcmwpO1xuICAgICAgICAvLyBjaGFuZ2UgdGhpcyB0byBzZW12ZXIgbG9naWNcbiAgICAgICAgaWYgKHZlcnNpb24gIT09IFNvY2tKUy52ZXJzaW9uKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvbXBhdGlibGUgU29ja0pTISBNYWluIHNpdGUgdXNlczonICtcbiAgICAgICAgICAgICAgICAgICAgJyBcIicgKyB2ZXJzaW9uICsgJ1wiLCB0aGUgaWZyYW1lOicgK1xuICAgICAgICAgICAgICAgICAgICAnIFwiJyArIFNvY2tKUy52ZXJzaW9uICsgJ1wiLicpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF1cmxVdGlscy5pc09yaWdpbkVxdWFsKHRyYW5zVXJsLCBsb2MuaHJlZikgfHxcbiAgICAgICAgICAgICF1cmxVdGlscy5pc09yaWdpbkVxdWFsKGJhc2VVcmwsIGxvYy5ocmVmKSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2FuXFwndCBjb25uZWN0IHRvIGRpZmZlcmVudCBkb21haW4gZnJvbSB3aXRoaW4gYW4gJyArXG4gICAgICAgICAgICAgICAgICAgICdpZnJhbWUuICgnICsgbG9jLmhyZWYgKyAnLCAnICsgdHJhbnNVcmwgKyAnLCAnICsgYmFzZVVybCArICcpJyk7XG4gICAgICAgIH1cbiAgICAgICAgZmFjYWRlID0gbmV3IEZhY2FkZUpTKG5ldyB0cmFuc3BvcnRNYXBbdHJhbnNwb3J0XSh0cmFuc1VybCwgYmFzZVVybCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ20nOlxuICAgICAgICBmYWNhZGUuX3NlbmQoaWZyYW1lTWVzc2FnZS5kYXRhKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjJzpcbiAgICAgICAgaWYgKGZhY2FkZSkge1xuICAgICAgICAgIGZhY2FkZS5fY2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgICBmYWNhZGUgPSBudWxsO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZXZlbnRVdGlscy5hdHRhY2hFdmVudCgnbWVzc2FnZScsIG9uTWVzc2FnZSk7XG5cbiAgICAvLyBTdGFydFxuICAgIGlmcmFtZVV0aWxzLnBvc3RNZXNzYWdlKCdzJyk7XG4gIH07XG59O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiLi9mYWNhZGVcIjo3LFwiLi9pbmZvLWlmcmFtZS1yZWNlaXZlclwiOjEwLFwiLi9sb2NhdGlvblwiOjEzLFwiLi91dGlscy9ldmVudFwiOjQ2LFwiLi91dGlscy9pZnJhbWVcIjo0NyxcIi4vdXRpbHMvdXJsXCI6NTIsXCJkZWJ1Z1wiOjU1LFwianNvbjNcIjo1OH1dLDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIG9iamVjdFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9vYmplY3QnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6aW5mby1hamF4Jyk7XG59XG5cbmZ1bmN0aW9uIEluZm9BamF4KHVybCwgQWpheE9iamVjdCkge1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciB0MCA9ICtuZXcgRGF0ZSgpO1xuICB0aGlzLnhvID0gbmV3IEFqYXhPYmplY3QoJ0dFVCcsIHVybCk7XG5cbiAgdGhpcy54by5vbmNlKCdmaW5pc2gnLCBmdW5jdGlvbihzdGF0dXMsIHRleHQpIHtcbiAgICB2YXIgaW5mbywgcnR0O1xuICAgIGlmIChzdGF0dXMgPT09IDIwMCkge1xuICAgICAgcnR0ID0gKCtuZXcgRGF0ZSgpKSAtIHQwO1xuICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpbmZvID0gSlNPTjMucGFyc2UodGV4dCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBkZWJ1ZygnYmFkIGpzb24nLCB0ZXh0KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIW9iamVjdFV0aWxzLmlzT2JqZWN0KGluZm8pKSB7XG4gICAgICAgIGluZm8gPSB7fTtcbiAgICAgIH1cbiAgICB9XG4gICAgc2VsZi5lbWl0KCdmaW5pc2gnLCBpbmZvLCBydHQpO1xuICAgIHNlbGYucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIH0pO1xufVxuXG5pbmhlcml0cyhJbmZvQWpheCwgRXZlbnRFbWl0dGVyKTtcblxuSW5mb0FqYXgucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHRoaXMueG8uY2xvc2UoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW5mb0FqYXg7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCIuL3V0aWxzL29iamVjdFwiOjQ5LFwiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3LFwianNvbjNcIjo1OH1dLDEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIFhIUkxvY2FsT2JqZWN0ID0gcmVxdWlyZSgnLi90cmFuc3BvcnQvc2VuZGVyL3hoci1sb2NhbCcpXG4gICwgSW5mb0FqYXggPSByZXF1aXJlKCcuL2luZm8tYWpheCcpXG4gIDtcblxuZnVuY3Rpb24gSW5mb1JlY2VpdmVySWZyYW1lKHRyYW5zVXJsKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgdGhpcy5pciA9IG5ldyBJbmZvQWpheCh0cmFuc1VybCwgWEhSTG9jYWxPYmplY3QpO1xuICB0aGlzLmlyLm9uY2UoJ2ZpbmlzaCcsIGZ1bmN0aW9uKGluZm8sIHJ0dCkge1xuICAgIHNlbGYuaXIgPSBudWxsO1xuICAgIHNlbGYuZW1pdCgnbWVzc2FnZScsIEpTT04zLnN0cmluZ2lmeShbaW5mbywgcnR0XSkpO1xuICB9KTtcbn1cblxuaW5oZXJpdHMoSW5mb1JlY2VpdmVySWZyYW1lLCBFdmVudEVtaXR0ZXIpO1xuXG5JbmZvUmVjZWl2ZXJJZnJhbWUudHJhbnNwb3J0TmFtZSA9ICdpZnJhbWUtaW5mby1yZWNlaXZlcic7XG5cbkluZm9SZWNlaXZlcklmcmFtZS5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgaWYgKHRoaXMuaXIpIHtcbiAgICB0aGlzLmlyLmNsb3NlKCk7XG4gICAgdGhpcy5pciA9IG51bGw7XG4gIH1cbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW5mb1JlY2VpdmVySWZyYW1lO1xuXG59LHtcIi4vaW5mby1hamF4XCI6OSxcIi4vdHJhbnNwb3J0L3NlbmRlci94aHItbG9jYWxcIjozNyxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3LFwianNvbjNcIjo1OH1dLDExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2VzcyxnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL2V2ZW50JylcbiAgLCBJZnJhbWVUcmFuc3BvcnQgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9pZnJhbWUnKVxuICAsIEluZm9SZWNlaXZlcklmcmFtZSA9IHJlcXVpcmUoJy4vaW5mby1pZnJhbWUtcmVjZWl2ZXInKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6aW5mby1pZnJhbWUnKTtcbn1cblxuZnVuY3Rpb24gSW5mb0lmcmFtZShiYXNlVXJsLCB1cmwpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaWZyID0gc2VsZi5pZnIgPSBuZXcgSWZyYW1lVHJhbnNwb3J0KEluZm9SZWNlaXZlcklmcmFtZS50cmFuc3BvcnROYW1lLCB1cmwsIGJhc2VVcmwpO1xuXG4gICAgaWZyLm9uY2UoJ21lc3NhZ2UnLCBmdW5jdGlvbihtc2cpIHtcbiAgICAgIGlmIChtc2cpIHtcbiAgICAgICAgdmFyIGQ7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZCA9IEpTT04zLnBhcnNlKG1zZyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBkZWJ1ZygnYmFkIGpzb24nLCBtc2cpO1xuICAgICAgICAgIHNlbGYuZW1pdCgnZmluaXNoJyk7XG4gICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpbmZvID0gZFswXSwgcnR0ID0gZFsxXTtcbiAgICAgICAgc2VsZi5lbWl0KCdmaW5pc2gnLCBpbmZvLCBydHQpO1xuICAgICAgfVxuICAgICAgc2VsZi5jbG9zZSgpO1xuICAgIH0pO1xuXG4gICAgaWZyLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oKSB7XG4gICAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcpO1xuICAgICAgc2VsZi5jbG9zZSgpO1xuICAgIH0pO1xuICB9O1xuXG4gIC8vIFRPRE8gdGhpcyBzZWVtcyB0aGUgc2FtZSBhcyB0aGUgJ25lZWRCb2R5JyBmcm9tIHRyYW5zcG9ydHNcbiAgaWYgKCFnbG9iYWwuZG9jdW1lbnQuYm9keSkge1xuICAgIHV0aWxzLmF0dGFjaEV2ZW50KCdsb2FkJywgZ28pO1xuICB9IGVsc2Uge1xuICAgIGdvKCk7XG4gIH1cbn1cblxuaW5oZXJpdHMoSW5mb0lmcmFtZSwgRXZlbnRFbWl0dGVyKTtcblxuSW5mb0lmcmFtZS5lbmFibGVkID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBJZnJhbWVUcmFuc3BvcnQuZW5hYmxlZCgpO1xufTtcblxuSW5mb0lmcmFtZS5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgaWYgKHRoaXMuaWZyKSB7XG4gICAgdGhpcy5pZnIuY2xvc2UoKTtcbiAgfVxuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICB0aGlzLmlmciA9IG51bGw7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEluZm9JZnJhbWU7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vaW5mby1pZnJhbWUtcmVjZWl2ZXJcIjoxMCxcIi4vdHJhbnNwb3J0L2lmcmFtZVwiOjIyLFwiLi91dGlscy9ldmVudFwiOjQ2LFwiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3LFwianNvbjNcIjo1OH1dLDEyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvdXJsJylcbiAgLCBYRFIgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9zZW5kZXIveGRyJylcbiAgLCBYSFJDb3JzID0gcmVxdWlyZSgnLi90cmFuc3BvcnQvc2VuZGVyL3hoci1jb3JzJylcbiAgLCBYSFJMb2NhbCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L3NlbmRlci94aHItbG9jYWwnKVxuICAsIFhIUkZha2UgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWZha2UnKVxuICAsIEluZm9JZnJhbWUgPSByZXF1aXJlKCcuL2luZm8taWZyYW1lJylcbiAgLCBJbmZvQWpheCA9IHJlcXVpcmUoJy4vaW5mby1hamF4JylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OmluZm8tcmVjZWl2ZXInKTtcbn1cblxuZnVuY3Rpb24gSW5mb1JlY2VpdmVyKGJhc2VVcmwsIHVybEluZm8pIHtcbiAgZGVidWcoYmFzZVVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBzZWxmLmRvWGhyKGJhc2VVcmwsIHVybEluZm8pO1xuICB9LCAwKTtcbn1cblxuaW5oZXJpdHMoSW5mb1JlY2VpdmVyLCBFdmVudEVtaXR0ZXIpO1xuXG4vLyBUT0RPIHRoaXMgaXMgY3VycmVudGx5IGlnbm9yaW5nIHRoZSBsaXN0IG9mIGF2YWlsYWJsZSB0cmFuc3BvcnRzIGFuZCB0aGUgd2hpdGVsaXN0XG5cbkluZm9SZWNlaXZlci5fZ2V0UmVjZWl2ZXIgPSBmdW5jdGlvbihiYXNlVXJsLCB1cmwsIHVybEluZm8pIHtcbiAgLy8gZGV0ZXJtaW5lIG1ldGhvZCBvZiBDT1JTIHN1cHBvcnQgKGlmIG5lZWRlZClcbiAgaWYgKHVybEluZm8uc2FtZU9yaWdpbikge1xuICAgIHJldHVybiBuZXcgSW5mb0FqYXgodXJsLCBYSFJMb2NhbCk7XG4gIH1cbiAgaWYgKFhIUkNvcnMuZW5hYmxlZCkge1xuICAgIHJldHVybiBuZXcgSW5mb0FqYXgodXJsLCBYSFJDb3JzKTtcbiAgfVxuICBpZiAoWERSLmVuYWJsZWQgJiYgdXJsSW5mby5zYW1lU2NoZW1lKSB7XG4gICAgcmV0dXJuIG5ldyBJbmZvQWpheCh1cmwsIFhEUik7XG4gIH1cbiAgaWYgKEluZm9JZnJhbWUuZW5hYmxlZCgpKSB7XG4gICAgcmV0dXJuIG5ldyBJbmZvSWZyYW1lKGJhc2VVcmwsIHVybCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBJbmZvQWpheCh1cmwsIFhIUkZha2UpO1xufTtcblxuSW5mb1JlY2VpdmVyLnByb3RvdHlwZS5kb1hociA9IGZ1bmN0aW9uKGJhc2VVcmwsIHVybEluZm8pIHtcbiAgdmFyIHNlbGYgPSB0aGlzXG4gICAgLCB1cmwgPSB1cmxVdGlscy5hZGRQYXRoKGJhc2VVcmwsICcvaW5mbycpXG4gICAgO1xuICBkZWJ1ZygnZG9YaHInLCB1cmwpO1xuXG4gIHRoaXMueG8gPSBJbmZvUmVjZWl2ZXIuX2dldFJlY2VpdmVyKGJhc2VVcmwsIHVybCwgdXJsSW5mbyk7XG5cbiAgdGhpcy50aW1lb3V0UmVmID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygndGltZW91dCcpO1xuICAgIHNlbGYuX2NsZWFudXAoZmFsc2UpO1xuICAgIHNlbGYuZW1pdCgnZmluaXNoJyk7XG4gIH0sIEluZm9SZWNlaXZlci50aW1lb3V0KTtcblxuICB0aGlzLnhvLm9uY2UoJ2ZpbmlzaCcsIGZ1bmN0aW9uKGluZm8sIHJ0dCkge1xuICAgIGRlYnVnKCdmaW5pc2gnLCBpbmZvLCBydHQpO1xuICAgIHNlbGYuX2NsZWFudXAodHJ1ZSk7XG4gICAgc2VsZi5lbWl0KCdmaW5pc2gnLCBpbmZvLCBydHQpO1xuICB9KTtcbn07XG5cbkluZm9SZWNlaXZlci5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbih3YXNDbGVhbikge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dFJlZik7XG4gIHRoaXMudGltZW91dFJlZiA9IG51bGw7XG4gIGlmICghd2FzQ2xlYW4gJiYgdGhpcy54bykge1xuICAgIHRoaXMueG8uY2xvc2UoKTtcbiAgfVxuICB0aGlzLnhvID0gbnVsbDtcbn07XG5cbkluZm9SZWNlaXZlci5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Nsb3NlJyk7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHRoaXMuX2NsZWFudXAoZmFsc2UpO1xufTtcblxuSW5mb1JlY2VpdmVyLnRpbWVvdXQgPSA4MDAwO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEluZm9SZWNlaXZlcjtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9KVxuXG59LHtcIi4vaW5mby1hamF4XCI6OSxcIi4vaW5mby1pZnJhbWVcIjoxMSxcIi4vdHJhbnNwb3J0L3NlbmRlci94ZHJcIjozNCxcIi4vdHJhbnNwb3J0L3NlbmRlci94aHItY29yc1wiOjM1LFwiLi90cmFuc3BvcnQvc2VuZGVyL3hoci1mYWtlXCI6MzYsXCIuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWxvY2FsXCI6MzcsXCIuL3V0aWxzL3VybFwiOjUyLFwiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5sb2NhdGlvbiB8fCB7XG4gIG9yaWdpbjogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAnXG4sIHByb3RvY29sOiAnaHR0cCdcbiwgaG9zdDogJ2xvY2FsaG9zdCdcbiwgcG9ydDogODBcbiwgaHJlZjogJ2h0dHA6Ly9sb2NhbGhvc3QvJ1xuLCBoYXNoOiAnJ1xufTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDE0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2VzcyxnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCcuL3NoaW1zJyk7XG5cbnZhciBVUkwgPSByZXF1aXJlKCd1cmwtcGFyc2UnKVxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4vdXRpbHMvcmFuZG9tJylcbiAgLCBlc2NhcGUgPSByZXF1aXJlKCcuL3V0aWxzL2VzY2FwZScpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL3VybCcpXG4gICwgZXZlbnRVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvZXZlbnQnKVxuICAsIHRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdXRpbHMvdHJhbnNwb3J0JylcbiAgLCBvYmplY3RVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvb2JqZWN0JylcbiAgLCBicm93c2VyID0gcmVxdWlyZSgnLi91dGlscy9icm93c2VyJylcbiAgLCBsb2cgPSByZXF1aXJlKCcuL3V0aWxzL2xvZycpXG4gICwgRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50L2V2ZW50JylcbiAgLCBFdmVudFRhcmdldCA9IHJlcXVpcmUoJy4vZXZlbnQvZXZlbnR0YXJnZXQnKVxuICAsIGxvYyA9IHJlcXVpcmUoJy4vbG9jYXRpb24nKVxuICAsIENsb3NlRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50L2Nsb3NlJylcbiAgLCBUcmFuc3BvcnRNZXNzYWdlRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50L3RyYW5zLW1lc3NhZ2UnKVxuICAsIEluZm9SZWNlaXZlciA9IHJlcXVpcmUoJy4vaW5mby1yZWNlaXZlcicpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDptYWluJyk7XG59XG5cbnZhciB0cmFuc3BvcnRzO1xuXG4vLyBmb2xsb3cgY29uc3RydWN0b3Igc3RlcHMgZGVmaW5lZCBhdCBodHRwOi8vZGV2LnczLm9yZy9odG1sNS93ZWJzb2NrZXRzLyN0aGUtd2Vic29ja2V0LWludGVyZmFjZVxuZnVuY3Rpb24gU29ja0pTKHVybCwgcHJvdG9jb2xzLCBvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTb2NrSlMpKSB7XG4gICAgcmV0dXJuIG5ldyBTb2NrSlModXJsLCBwcm90b2NvbHMsIG9wdGlvbnMpO1xuICB9XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdTb2NrSlM6IDEgYXJndW1lbnQgcmVxdWlyZWQsIGJ1dCBvbmx5IDAgcHJlc2VudFwiKTtcbiAgfVxuICBFdmVudFRhcmdldC5jYWxsKHRoaXMpO1xuXG4gIHRoaXMucmVhZHlTdGF0ZSA9IFNvY2tKUy5DT05ORUNUSU5HO1xuICB0aGlzLmV4dGVuc2lvbnMgPSAnJztcbiAgdGhpcy5wcm90b2NvbCA9ICcnO1xuXG4gIC8vIG5vbi1zdGFuZGFyZCBleHRlbnNpb25cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGlmIChvcHRpb25zLnByb3RvY29sc193aGl0ZWxpc3QpIHtcbiAgICBsb2cud2FybihcIidwcm90b2NvbHNfd2hpdGVsaXN0JyBpcyBERVBSRUNBVEVELiBVc2UgJ3RyYW5zcG9ydHMnIGluc3RlYWQuXCIpO1xuICB9XG4gIHRoaXMuX3RyYW5zcG9ydHNXaGl0ZWxpc3QgPSBvcHRpb25zLnRyYW5zcG9ydHM7XG4gIHRoaXMuX3RyYW5zcG9ydE9wdGlvbnMgPSBvcHRpb25zLnRyYW5zcG9ydE9wdGlvbnMgfHwge307XG5cbiAgdmFyIHNlc3Npb25JZCA9IG9wdGlvbnMuc2Vzc2lvbklkIHx8IDg7XG4gIGlmICh0eXBlb2Ygc2Vzc2lvbklkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhpcy5fZ2VuZXJhdGVTZXNzaW9uSWQgPSBzZXNzaW9uSWQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHNlc3Npb25JZCA9PT0gJ251bWJlcicpIHtcbiAgICB0aGlzLl9nZW5lcmF0ZVNlc3Npb25JZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHJhbmRvbS5zdHJpbmcoc2Vzc2lvbklkKTtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0lmIHNlc3Npb25JZCBpcyB1c2VkIGluIHRoZSBvcHRpb25zLCBpdCBuZWVkcyB0byBiZSBhIG51bWJlciBvciBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdGhpcy5fc2VydmVyID0gb3B0aW9ucy5zZXJ2ZXIgfHwgcmFuZG9tLm51bWJlclN0cmluZygxMDAwKTtcblxuICAvLyBTdGVwIDEgb2YgV1Mgc3BlYyAtIHBhcnNlIGFuZCB2YWxpZGF0ZSB0aGUgdXJsLiBJc3N1ZSAjOFxuICB2YXIgcGFyc2VkVXJsID0gbmV3IFVSTCh1cmwpO1xuICBpZiAoIXBhcnNlZFVybC5ob3N0IHx8ICFwYXJzZWRVcmwucHJvdG9jb2wpIHtcbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUaGUgVVJMICdcIiArIHVybCArIFwiJyBpcyBpbnZhbGlkXCIpO1xuICB9IGVsc2UgaWYgKHBhcnNlZFVybC5oYXNoKSB7XG4gICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdUaGUgVVJMIG11c3Qgbm90IGNvbnRhaW4gYSBmcmFnbWVudCcpO1xuICB9IGVsc2UgaWYgKHBhcnNlZFVybC5wcm90b2NvbCAhPT0gJ2h0dHA6JyAmJiBwYXJzZWRVcmwucHJvdG9jb2wgIT09ICdodHRwczonKSB7XG4gICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiVGhlIFVSTCdzIHNjaGVtZSBtdXN0IGJlIGVpdGhlciAnaHR0cDonIG9yICdodHRwczonLiAnXCIgKyBwYXJzZWRVcmwucHJvdG9jb2wgKyBcIicgaXMgbm90IGFsbG93ZWQuXCIpO1xuICB9XG5cbiAgdmFyIHNlY3VyZSA9IHBhcnNlZFVybC5wcm90b2NvbCA9PT0gJ2h0dHBzOic7XG4gIC8vIFN0ZXAgMiAtIGRvbid0IGFsbG93IHNlY3VyZSBvcmlnaW4gd2l0aCBhbiBpbnNlY3VyZSBwcm90b2NvbFxuICBpZiAobG9jLnByb3RvY29sID09PSAnaHR0cHMnICYmICFzZWN1cmUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlY3VyaXR5RXJyb3I6IEFuIGluc2VjdXJlIFNvY2tKUyBjb25uZWN0aW9uIG1heSBub3QgYmUgaW5pdGlhdGVkIGZyb20gYSBwYWdlIGxvYWRlZCBvdmVyIEhUVFBTJyk7XG4gIH1cblxuICAvLyBTdGVwIDMgLSBjaGVjayBwb3J0IGFjY2VzcyAtIG5vIG5lZWQgaGVyZVxuICAvLyBTdGVwIDQgLSBwYXJzZSBwcm90b2NvbHMgYXJndW1lbnRcbiAgaWYgKCFwcm90b2NvbHMpIHtcbiAgICBwcm90b2NvbHMgPSBbXTtcbiAgfSBlbHNlIGlmICghQXJyYXkuaXNBcnJheShwcm90b2NvbHMpKSB7XG4gICAgcHJvdG9jb2xzID0gW3Byb3RvY29sc107XG4gIH1cblxuICAvLyBTdGVwIDUgLSBjaGVjayBwcm90b2NvbHMgYXJndW1lbnRcbiAgdmFyIHNvcnRlZFByb3RvY29scyA9IHByb3RvY29scy5zb3J0KCk7XG4gIHNvcnRlZFByb3RvY29scy5mb3JFYWNoKGZ1bmN0aW9uKHByb3RvLCBpKSB7XG4gICAgaWYgKCFwcm90bykge1xuICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiVGhlIHByb3RvY29scyBlbnRyeSAnXCIgKyBwcm90byArIFwiJyBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG4gICAgaWYgKGkgPCAoc29ydGVkUHJvdG9jb2xzLmxlbmd0aCAtIDEpICYmIHByb3RvID09PSBzb3J0ZWRQcm90b2NvbHNbaSArIDFdKSB7XG4gICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUaGUgcHJvdG9jb2xzIGVudHJ5ICdcIiArIHByb3RvICsgXCInIGlzIGR1cGxpY2F0ZWQuXCIpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gU3RlcCA2IC0gY29udmVydCBvcmlnaW5cbiAgdmFyIG8gPSB1cmxVdGlscy5nZXRPcmlnaW4obG9jLmhyZWYpO1xuICB0aGlzLl9vcmlnaW4gPSBvID8gby50b0xvd2VyQ2FzZSgpIDogbnVsbDtcblxuICAvLyByZW1vdmUgdGhlIHRyYWlsaW5nIHNsYXNoXG4gIHBhcnNlZFVybC5zZXQoJ3BhdGhuYW1lJywgcGFyc2VkVXJsLnBhdGhuYW1lLnJlcGxhY2UoL1xcLyskLywgJycpKTtcblxuICAvLyBzdG9yZSB0aGUgc2FuaXRpemVkIHVybFxuICB0aGlzLnVybCA9IHBhcnNlZFVybC5ocmVmO1xuICBkZWJ1ZygndXNpbmcgdXJsJywgdGhpcy51cmwpO1xuXG4gIC8vIFN0ZXAgNyAtIHN0YXJ0IGNvbm5lY3Rpb24gaW4gYmFja2dyb3VuZFxuICAvLyBvYnRhaW4gc2VydmVyIGluZm9cbiAgLy8gaHR0cDovL3NvY2tqcy5naXRodWIuaW8vc29ja2pzLXByb3RvY29sL3NvY2tqcy1wcm90b2NvbC0wLjMuMy5odG1sI3NlY3Rpb24tMjZcbiAgdGhpcy5fdXJsSW5mbyA9IHtcbiAgICBudWxsT3JpZ2luOiAhYnJvd3Nlci5oYXNEb21haW4oKVxuICAsIHNhbWVPcmlnaW46IHVybFV0aWxzLmlzT3JpZ2luRXF1YWwodGhpcy51cmwsIGxvYy5ocmVmKVxuICAsIHNhbWVTY2hlbWU6IHVybFV0aWxzLmlzU2NoZW1lRXF1YWwodGhpcy51cmwsIGxvYy5ocmVmKVxuICB9O1xuXG4gIHRoaXMuX2lyID0gbmV3IEluZm9SZWNlaXZlcih0aGlzLnVybCwgdGhpcy5fdXJsSW5mbyk7XG4gIHRoaXMuX2lyLm9uY2UoJ2ZpbmlzaCcsIHRoaXMuX3JlY2VpdmVJbmZvLmJpbmQodGhpcykpO1xufVxuXG5pbmhlcml0cyhTb2NrSlMsIEV2ZW50VGFyZ2V0KTtcblxuZnVuY3Rpb24gdXNlclNldENvZGUoY29kZSkge1xuICByZXR1cm4gY29kZSA9PT0gMTAwMCB8fCAoY29kZSA+PSAzMDAwICYmIGNvZGUgPD0gNDk5OSk7XG59XG5cblNvY2tKUy5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbihjb2RlLCByZWFzb24pIHtcbiAgLy8gU3RlcCAxXG4gIGlmIChjb2RlICYmICF1c2VyU2V0Q29kZShjb2RlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZEFjY2Vzc0Vycm9yOiBJbnZhbGlkIGNvZGUnKTtcbiAgfVxuICAvLyBTdGVwIDIuNCBzdGF0ZXMgdGhlIG1heCBpcyAxMjMgYnl0ZXMsIGJ1dCB3ZSBhcmUganVzdCBjaGVja2luZyBsZW5ndGhcbiAgaWYgKHJlYXNvbiAmJiByZWFzb24ubGVuZ3RoID4gMTIzKSB7XG4gICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdyZWFzb24gYXJndW1lbnQgaGFzIGFuIGludmFsaWQgbGVuZ3RoJyk7XG4gIH1cblxuICAvLyBTdGVwIDMuMVxuICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ0xPU0lORyB8fCB0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DTE9TRUQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBUT0RPIGxvb2sgYXQgZG9jcyB0byBkZXRlcm1pbmUgaG93IHRvIHNldCB0aGlzXG4gIHZhciB3YXNDbGVhbiA9IHRydWU7XG4gIHRoaXMuX2Nsb3NlKGNvZGUgfHwgMTAwMCwgcmVhc29uIHx8ICdOb3JtYWwgY2xvc3VyZScsIHdhc0NsZWFuKTtcbn07XG5cblNvY2tKUy5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgLy8gIzEzIC0gY29udmVydCBhbnl0aGluZyBub24tc3RyaW5nIHRvIHN0cmluZ1xuICAvLyBUT0RPIHRoaXMgY3VycmVudGx5IHR1cm5zIG9iamVjdHMgaW50byBbb2JqZWN0IE9iamVjdF1cbiAgaWYgKHR5cGVvZiBkYXRhICE9PSAnc3RyaW5nJykge1xuICAgIGRhdGEgPSAnJyArIGRhdGE7XG4gIH1cbiAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gU29ja0pTLkNPTk5FQ1RJTkcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWRTdGF0ZUVycm9yOiBUaGUgY29ubmVjdGlvbiBoYXMgbm90IGJlZW4gZXN0YWJsaXNoZWQgeWV0Jyk7XG4gIH1cbiAgaWYgKHRoaXMucmVhZHlTdGF0ZSAhPT0gU29ja0pTLk9QRU4pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy5fdHJhbnNwb3J0LnNlbmQoZXNjYXBlLnF1b3RlKGRhdGEpKTtcbn07XG5cblNvY2tKUy52ZXJzaW9uID0gcmVxdWlyZSgnLi92ZXJzaW9uJyk7XG5cblNvY2tKUy5DT05ORUNUSU5HID0gMDtcblNvY2tKUy5PUEVOID0gMTtcblNvY2tKUy5DTE9TSU5HID0gMjtcblNvY2tKUy5DTE9TRUQgPSAzO1xuXG5Tb2NrSlMucHJvdG90eXBlLl9yZWNlaXZlSW5mbyA9IGZ1bmN0aW9uKGluZm8sIHJ0dCkge1xuICBkZWJ1ZygnX3JlY2VpdmVJbmZvJywgcnR0KTtcbiAgdGhpcy5faXIgPSBudWxsO1xuICBpZiAoIWluZm8pIHtcbiAgICB0aGlzLl9jbG9zZSgxMDAyLCAnQ2Fubm90IGNvbm5lY3QgdG8gc2VydmVyJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gZXN0YWJsaXNoIGEgcm91bmQtdHJpcCB0aW1lb3V0IChSVE8pIGJhc2VkIG9uIHRoZVxuICAvLyByb3VuZC10cmlwIHRpbWUgKFJUVClcbiAgdGhpcy5fcnRvID0gdGhpcy5jb3VudFJUTyhydHQpO1xuICAvLyBhbGxvdyBzZXJ2ZXIgdG8gb3ZlcnJpZGUgdXJsIHVzZWQgZm9yIHRoZSBhY3R1YWwgdHJhbnNwb3J0XG4gIHRoaXMuX3RyYW5zVXJsID0gaW5mby5iYXNlX3VybCA/IGluZm8uYmFzZV91cmwgOiB0aGlzLnVybDtcbiAgaW5mbyA9IG9iamVjdFV0aWxzLmV4dGVuZChpbmZvLCB0aGlzLl91cmxJbmZvKTtcbiAgZGVidWcoJ2luZm8nLCBpbmZvKTtcbiAgLy8gZGV0ZXJtaW5lIGxpc3Qgb2YgZGVzaXJlZCBhbmQgc3VwcG9ydGVkIHRyYW5zcG9ydHNcbiAgdmFyIGVuYWJsZWRUcmFuc3BvcnRzID0gdHJhbnNwb3J0cy5maWx0ZXJUb0VuYWJsZWQodGhpcy5fdHJhbnNwb3J0c1doaXRlbGlzdCwgaW5mbyk7XG4gIHRoaXMuX3RyYW5zcG9ydHMgPSBlbmFibGVkVHJhbnNwb3J0cy5tYWluO1xuICBkZWJ1Zyh0aGlzLl90cmFuc3BvcnRzLmxlbmd0aCArICcgZW5hYmxlZCB0cmFuc3BvcnRzJyk7XG5cbiAgdGhpcy5fY29ubmVjdCgpO1xufTtcblxuU29ja0pTLnByb3RvdHlwZS5fY29ubmVjdCA9IGZ1bmN0aW9uKCkge1xuICBmb3IgKHZhciBUcmFuc3BvcnQgPSB0aGlzLl90cmFuc3BvcnRzLnNoaWZ0KCk7IFRyYW5zcG9ydDsgVHJhbnNwb3J0ID0gdGhpcy5fdHJhbnNwb3J0cy5zaGlmdCgpKSB7XG4gICAgZGVidWcoJ2F0dGVtcHQnLCBUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSk7XG4gICAgaWYgKFRyYW5zcG9ydC5uZWVkQm9keSkge1xuICAgICAgaWYgKCFnbG9iYWwuZG9jdW1lbnQuYm9keSB8fFxuICAgICAgICAgICh0eXBlb2YgZ2xvYmFsLmRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICAgICAgICBnbG9iYWwuZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gJ2NvbXBsZXRlJyAmJlxuICAgICAgICAgICAgZ2xvYmFsLmRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICdpbnRlcmFjdGl2ZScpKSB7XG4gICAgICAgIGRlYnVnKCd3YWl0aW5nIGZvciBib2R5Jyk7XG4gICAgICAgIHRoaXMuX3RyYW5zcG9ydHMudW5zaGlmdChUcmFuc3BvcnQpO1xuICAgICAgICBldmVudFV0aWxzLmF0dGFjaEV2ZW50KCdsb2FkJywgdGhpcy5fY29ubmVjdC5iaW5kKHRoaXMpKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNhbGN1bGF0ZSB0aW1lb3V0IGJhc2VkIG9uIFJUTyBhbmQgcm91bmQgdHJpcHMuIERlZmF1bHQgdG8gNXNcbiAgICB2YXIgdGltZW91dE1zID0gKHRoaXMuX3J0byAqIFRyYW5zcG9ydC5yb3VuZFRyaXBzKSB8fCA1MDAwO1xuICAgIHRoaXMuX3RyYW5zcG9ydFRpbWVvdXRJZCA9IHNldFRpbWVvdXQodGhpcy5fdHJhbnNwb3J0VGltZW91dC5iaW5kKHRoaXMpLCB0aW1lb3V0TXMpO1xuICAgIGRlYnVnKCd1c2luZyB0aW1lb3V0JywgdGltZW91dE1zKTtcblxuICAgIHZhciB0cmFuc3BvcnRVcmwgPSB1cmxVdGlscy5hZGRQYXRoKHRoaXMuX3RyYW5zVXJsLCAnLycgKyB0aGlzLl9zZXJ2ZXIgKyAnLycgKyB0aGlzLl9nZW5lcmF0ZVNlc3Npb25JZCgpKTtcbiAgICB2YXIgb3B0aW9ucyA9IHRoaXMuX3RyYW5zcG9ydE9wdGlvbnNbVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWVdO1xuICAgIGRlYnVnKCd0cmFuc3BvcnQgdXJsJywgdHJhbnNwb3J0VXJsKTtcbiAgICB2YXIgdHJhbnNwb3J0T2JqID0gbmV3IFRyYW5zcG9ydCh0cmFuc3BvcnRVcmwsIHRoaXMuX3RyYW5zVXJsLCBvcHRpb25zKTtcbiAgICB0cmFuc3BvcnRPYmoub24oJ21lc3NhZ2UnLCB0aGlzLl90cmFuc3BvcnRNZXNzYWdlLmJpbmQodGhpcykpO1xuICAgIHRyYW5zcG9ydE9iai5vbmNlKCdjbG9zZScsIHRoaXMuX3RyYW5zcG9ydENsb3NlLmJpbmQodGhpcykpO1xuICAgIHRyYW5zcG9ydE9iai50cmFuc3BvcnROYW1lID0gVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWU7XG4gICAgdGhpcy5fdHJhbnNwb3J0ID0gdHJhbnNwb3J0T2JqO1xuXG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMuX2Nsb3NlKDIwMDAsICdBbGwgdHJhbnNwb3J0cyBmYWlsZWQnLCBmYWxzZSk7XG59O1xuXG5Tb2NrSlMucHJvdG90eXBlLl90cmFuc3BvcnRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfdHJhbnNwb3J0VGltZW91dCcpO1xuICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ09OTkVDVElORykge1xuICAgIHRoaXMuX3RyYW5zcG9ydENsb3NlKDIwMDcsICdUcmFuc3BvcnQgdGltZWQgb3V0Jyk7XG4gIH1cbn07XG5cblNvY2tKUy5wcm90b3R5cGUuX3RyYW5zcG9ydE1lc3NhZ2UgPSBmdW5jdGlvbihtc2cpIHtcbiAgZGVidWcoJ190cmFuc3BvcnRNZXNzYWdlJywgbXNnKTtcbiAgdmFyIHNlbGYgPSB0aGlzXG4gICAgLCB0eXBlID0gbXNnLnNsaWNlKDAsIDEpXG4gICAgLCBjb250ZW50ID0gbXNnLnNsaWNlKDEpXG4gICAgLCBwYXlsb2FkXG4gICAgO1xuXG4gIC8vIGZpcnN0IGNoZWNrIGZvciBtZXNzYWdlcyB0aGF0IGRvbid0IG5lZWQgYSBwYXlsb2FkXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ28nOlxuICAgICAgdGhpcy5fb3BlbigpO1xuICAgICAgcmV0dXJuO1xuICAgIGNhc2UgJ2gnOlxuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnaGVhcnRiZWF0JykpO1xuICAgICAgZGVidWcoJ2hlYXJ0YmVhdCcsIHRoaXMudHJhbnNwb3J0KTtcbiAgICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChjb250ZW50KSB7XG4gICAgdHJ5IHtcbiAgICAgIHBheWxvYWQgPSBKU09OMy5wYXJzZShjb250ZW50KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBkZWJ1ZygnYmFkIGpzb24nLCBjb250ZW50KTtcbiAgICB9XG4gIH1cblxuICBpZiAodHlwZW9mIHBheWxvYWQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZGVidWcoJ2VtcHR5IHBheWxvYWQnLCBjb250ZW50KTtcbiAgICByZXR1cm47XG4gIH1cblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdhJzpcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHBheWxvYWQpKSB7XG4gICAgICAgIHBheWxvYWQuZm9yRWFjaChmdW5jdGlvbihwKSB7XG4gICAgICAgICAgZGVidWcoJ21lc3NhZ2UnLCBzZWxmLnRyYW5zcG9ydCwgcCk7XG4gICAgICAgICAgc2VsZi5kaXNwYXRjaEV2ZW50KG5ldyBUcmFuc3BvcnRNZXNzYWdlRXZlbnQocCkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ20nOlxuICAgICAgZGVidWcoJ21lc3NhZ2UnLCB0aGlzLnRyYW5zcG9ydCwgcGF5bG9hZCk7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IFRyYW5zcG9ydE1lc3NhZ2VFdmVudChwYXlsb2FkKSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdjJzpcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHBheWxvYWQpICYmIHBheWxvYWQubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIHRoaXMuX2Nsb3NlKHBheWxvYWRbMF0sIHBheWxvYWRbMV0sIHRydWUpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gIH1cbn07XG5cblNvY2tKUy5wcm90b3R5cGUuX3RyYW5zcG9ydENsb3NlID0gZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gIGRlYnVnKCdfdHJhbnNwb3J0Q2xvc2UnLCB0aGlzLnRyYW5zcG9ydCwgY29kZSwgcmVhc29uKTtcbiAgaWYgKHRoaXMuX3RyYW5zcG9ydCkge1xuICAgIHRoaXMuX3RyYW5zcG9ydC5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl90cmFuc3BvcnQgPSBudWxsO1xuICAgIHRoaXMudHJhbnNwb3J0ID0gbnVsbDtcbiAgfVxuXG4gIGlmICghdXNlclNldENvZGUoY29kZSkgJiYgY29kZSAhPT0gMjAwMCAmJiB0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DT05ORUNUSU5HKSB7XG4gICAgdGhpcy5fY29ubmVjdCgpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuX2Nsb3NlKGNvZGUsIHJlYXNvbik7XG59O1xuXG5Tb2NrSlMucHJvdG90eXBlLl9vcGVuID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfb3BlbicsIHRoaXMuX3RyYW5zcG9ydC50cmFuc3BvcnROYW1lLCB0aGlzLnJlYWR5U3RhdGUpO1xuICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ09OTkVDVElORykge1xuICAgIGlmICh0aGlzLl90cmFuc3BvcnRUaW1lb3V0SWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90cmFuc3BvcnRUaW1lb3V0SWQpO1xuICAgICAgdGhpcy5fdHJhbnNwb3J0VGltZW91dElkID0gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gU29ja0pTLk9QRU47XG4gICAgdGhpcy50cmFuc3BvcnQgPSB0aGlzLl90cmFuc3BvcnQudHJhbnNwb3J0TmFtZTtcbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdvcGVuJykpO1xuICAgIGRlYnVnKCdjb25uZWN0ZWQnLCB0aGlzLnRyYW5zcG9ydCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gVGhlIHNlcnZlciBtaWdodCBoYXZlIGJlZW4gcmVzdGFydGVkLCBhbmQgbG9zdCB0cmFjayBvZiBvdXJcbiAgICAvLyBjb25uZWN0aW9uLlxuICAgIHRoaXMuX2Nsb3NlKDEwMDYsICdTZXJ2ZXIgbG9zdCBzZXNzaW9uJyk7XG4gIH1cbn07XG5cblNvY2tKUy5wcm90b3R5cGUuX2Nsb3NlID0gZnVuY3Rpb24oY29kZSwgcmVhc29uLCB3YXNDbGVhbikge1xuICBkZWJ1ZygnX2Nsb3NlJywgdGhpcy50cmFuc3BvcnQsIGNvZGUsIHJlYXNvbiwgd2FzQ2xlYW4sIHRoaXMucmVhZHlTdGF0ZSk7XG4gIHZhciBmb3JjZUZhaWwgPSBmYWxzZTtcblxuICBpZiAodGhpcy5faXIpIHtcbiAgICBmb3JjZUZhaWwgPSB0cnVlO1xuICAgIHRoaXMuX2lyLmNsb3NlKCk7XG4gICAgdGhpcy5faXIgPSBudWxsO1xuICB9XG4gIGlmICh0aGlzLl90cmFuc3BvcnQpIHtcbiAgICB0aGlzLl90cmFuc3BvcnQuY2xvc2UoKTtcbiAgICB0aGlzLl90cmFuc3BvcnQgPSBudWxsO1xuICAgIHRoaXMudHJhbnNwb3J0ID0gbnVsbDtcbiAgfVxuXG4gIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DTE9TRUQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWRTdGF0ZUVycm9yOiBTb2NrSlMgaGFzIGFscmVhZHkgYmVlbiBjbG9zZWQnKTtcbiAgfVxuXG4gIHRoaXMucmVhZHlTdGF0ZSA9IFNvY2tKUy5DTE9TSU5HO1xuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVhZHlTdGF0ZSA9IFNvY2tKUy5DTE9TRUQ7XG5cbiAgICBpZiAoZm9yY2VGYWlsKSB7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdlcnJvcicpKTtcbiAgICB9XG5cbiAgICB2YXIgZSA9IG5ldyBDbG9zZUV2ZW50KCdjbG9zZScpO1xuICAgIGUud2FzQ2xlYW4gPSB3YXNDbGVhbiB8fCBmYWxzZTtcbiAgICBlLmNvZGUgPSBjb2RlIHx8IDEwMDA7XG4gICAgZS5yZWFzb24gPSByZWFzb247XG5cbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQoZSk7XG4gICAgdGhpcy5vbm1lc3NhZ2UgPSB0aGlzLm9uY2xvc2UgPSB0aGlzLm9uZXJyb3IgPSBudWxsO1xuICAgIGRlYnVnKCdkaXNjb25uZWN0ZWQnKTtcbiAgfS5iaW5kKHRoaXMpLCAwKTtcbn07XG5cbi8vIFNlZTogaHR0cDovL3d3dy5lcmcuYWJkbi5hYy51ay9+Z2Vycml0L2RjY3Avbm90ZXMvY2NpZDIvcnRvX2VzdGltYXRvci9cbi8vIGFuZCBSRkMgMjk4OC5cblNvY2tKUy5wcm90b3R5cGUuY291bnRSVE8gPSBmdW5jdGlvbihydHQpIHtcbiAgLy8gSW4gYSBsb2NhbCBlbnZpcm9ubWVudCwgd2hlbiB1c2luZyBJRTgvOSBhbmQgdGhlIGBqc29ucC1wb2xsaW5nYFxuICAvLyB0cmFuc3BvcnQgdGhlIHRpbWUgbmVlZGVkIHRvIGVzdGFibGlzaCBhIGNvbm5lY3Rpb24gKHRoZSB0aW1lIHRoYXQgcGFzc1xuICAvLyBmcm9tIHRoZSBvcGVuaW5nIG9mIHRoZSB0cmFuc3BvcnQgdG8gdGhlIGNhbGwgb2YgYF9kaXNwYXRjaE9wZW5gKSBpc1xuICAvLyBhcm91bmQgMjAwbXNlYyAodGhlIGxvd2VyIGJvdW5kIHVzZWQgaW4gdGhlIGFydGljbGUgYWJvdmUpIGFuZCB0aGlzXG4gIC8vIGNhdXNlcyBzcHVyaW91cyB0aW1lb3V0cy4gRm9yIHRoaXMgcmVhc29uIHdlIGNhbGN1bGF0ZSBhIHZhbHVlIHNsaWdodGx5XG4gIC8vIGxhcmdlciB0aGFuIHRoYXQgdXNlZCBpbiB0aGUgYXJ0aWNsZS5cbiAgaWYgKHJ0dCA+IDEwMCkge1xuICAgIHJldHVybiA0ICogcnR0OyAvLyBydG8gPiA0MDBtc2VjXG4gIH1cbiAgcmV0dXJuIDMwMCArIHJ0dDsgLy8gMzAwbXNlYyA8IHJ0byA8PSA0MDBtc2VjXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGF2YWlsYWJsZVRyYW5zcG9ydHMpIHtcbiAgdHJhbnNwb3J0cyA9IHRyYW5zcG9ydChhdmFpbGFibGVUcmFuc3BvcnRzKTtcbiAgcmVxdWlyZSgnLi9pZnJhbWUtYm9vdHN0cmFwJykoU29ja0pTLCBhdmFpbGFibGVUcmFuc3BvcnRzKTtcbiAgcmV0dXJuIFNvY2tKUztcbn07XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vZXZlbnQvY2xvc2VcIjoyLFwiLi9ldmVudC9ldmVudFwiOjQsXCIuL2V2ZW50L2V2ZW50dGFyZ2V0XCI6NSxcIi4vZXZlbnQvdHJhbnMtbWVzc2FnZVwiOjYsXCIuL2lmcmFtZS1ib290c3RyYXBcIjo4LFwiLi9pbmZvLXJlY2VpdmVyXCI6MTIsXCIuL2xvY2F0aW9uXCI6MTMsXCIuL3NoaW1zXCI6MTUsXCIuL3V0aWxzL2Jyb3dzZXJcIjo0NCxcIi4vdXRpbHMvZXNjYXBlXCI6NDUsXCIuL3V0aWxzL2V2ZW50XCI6NDYsXCIuL3V0aWxzL2xvZ1wiOjQ4LFwiLi91dGlscy9vYmplY3RcIjo0OSxcIi4vdXRpbHMvcmFuZG9tXCI6NTAsXCIuL3V0aWxzL3RyYW5zcG9ydFwiOjUxLFwiLi91dGlscy91cmxcIjo1MixcIi4vdmVyc2lvblwiOjUzLFwiZGVidWdcIjo1NSxcImluaGVyaXRzXCI6NTcsXCJqc29uM1wiOjU4LFwidXJsLXBhcnNlXCI6NjF9XSwxNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoganNjczogZGlzYWJsZSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyBwdWxsZWQgc3BlY2lmaWMgc2hpbXMgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZXMtc2hpbXMvZXM1LXNoaW1cblxudmFyIEFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xudmFyIE9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG52YXIgRnVuY3Rpb25Qcm90b3R5cGUgPSBGdW5jdGlvbi5wcm90b3R5cGU7XG52YXIgU3RyaW5nUHJvdG90eXBlID0gU3RyaW5nLnByb3RvdHlwZTtcbnZhciBhcnJheV9zbGljZSA9IEFycmF5UHJvdG90eXBlLnNsaWNlO1xuXG52YXIgX3RvU3RyaW5nID0gT2JqZWN0UHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiAodmFsKSB7XG4gICAgcmV0dXJuIE9iamVjdFByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG59O1xudmFyIGlzQXJyYXkgPSBmdW5jdGlvbiBpc0FycmF5KG9iaikge1xuICAgIHJldHVybiBfdG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcbnZhciBpc1N0cmluZyA9IGZ1bmN0aW9uIGlzU3RyaW5nKG9iaikge1xuICAgIHJldHVybiBfdG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBTdHJpbmddJztcbn07XG5cbnZhciBzdXBwb3J0c0Rlc2NyaXB0b3JzID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIChmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAneCcsIHt9KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkgeyAvKiB0aGlzIGlzIEVTMyAqL1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufSgpKTtcblxuLy8gRGVmaW5lIGNvbmZpZ3VyYWJsZSwgd3JpdGFibGUgYW5kIG5vbi1lbnVtZXJhYmxlIHByb3BzXG4vLyBpZiB0aGV5IGRvbid0IGV4aXN0LlxudmFyIGRlZmluZVByb3BlcnR5O1xuaWYgKHN1cHBvcnRzRGVzY3JpcHRvcnMpIHtcbiAgICBkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWUsIG1ldGhvZCwgZm9yY2VBc3NpZ24pIHtcbiAgICAgICAgaWYgKCFmb3JjZUFzc2lnbiAmJiAobmFtZSBpbiBvYmplY3QpKSB7IHJldHVybjsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBuYW1lLCB7XG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IG1ldGhvZFxuICAgICAgICB9KTtcbiAgICB9O1xufSBlbHNlIHtcbiAgICBkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWUsIG1ldGhvZCwgZm9yY2VBc3NpZ24pIHtcbiAgICAgICAgaWYgKCFmb3JjZUFzc2lnbiAmJiAobmFtZSBpbiBvYmplY3QpKSB7IHJldHVybjsgfVxuICAgICAgICBvYmplY3RbbmFtZV0gPSBtZXRob2Q7XG4gICAgfTtcbn1cbnZhciBkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG9iamVjdCwgbWFwLCBmb3JjZUFzc2lnbikge1xuICAgIGZvciAodmFyIG5hbWUgaW4gbWFwKSB7XG4gICAgICAgIGlmIChPYmplY3RQcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtYXAsIG5hbWUpKSB7XG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkob2JqZWN0LCBuYW1lLCBtYXBbbmFtZV0sIGZvcmNlQXNzaWduKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbnZhciB0b09iamVjdCA9IGZ1bmN0aW9uIChvKSB7XG4gICAgaWYgKG8gPT0gbnVsbCkgeyAvLyB0aGlzIG1hdGNoZXMgYm90aCBudWxsIGFuZCB1bmRlZmluZWRcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImNhbid0IGNvbnZlcnQgXCIgKyBvICsgJyB0byBvYmplY3QnKTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdChvKTtcbn07XG5cbi8vXG4vLyBVdGlsXG4vLyA9PT09PT1cbi8vXG5cbi8vIEVTNSA5LjRcbi8vIGh0dHA6Ly9lczUuZ2l0aHViLmNvbS8jeDkuNFxuLy8gaHR0cDovL2pzcGVyZi5jb20vdG8taW50ZWdlclxuXG5mdW5jdGlvbiB0b0ludGVnZXIobnVtKSB7XG4gICAgdmFyIG4gPSArbnVtO1xuICAgIGlmIChuICE9PSBuKSB7IC8vIGlzTmFOXG4gICAgICAgIG4gPSAwO1xuICAgIH0gZWxzZSBpZiAobiAhPT0gMCAmJiBuICE9PSAoMSAvIDApICYmIG4gIT09IC0oMSAvIDApKSB7XG4gICAgICAgIG4gPSAobiA+IDAgfHwgLTEpICogTWF0aC5mbG9vcihNYXRoLmFicyhuKSk7XG4gICAgfVxuICAgIHJldHVybiBuO1xufVxuXG5mdW5jdGlvbiBUb1VpbnQzMih4KSB7XG4gICAgcmV0dXJuIHggPj4+IDA7XG59XG5cbi8vXG4vLyBGdW5jdGlvblxuLy8gPT09PT09PT1cbi8vXG5cbi8vIEVTLTUgMTUuMy40LjVcbi8vIGh0dHA6Ly9lczUuZ2l0aHViLmNvbS8jeDE1LjMuNC41XG5cbmZ1bmN0aW9uIEVtcHR5KCkge31cblxuZGVmaW5lUHJvcGVydGllcyhGdW5jdGlvblByb3RvdHlwZSwge1xuICAgIGJpbmQ6IGZ1bmN0aW9uIGJpbmQodGhhdCkgeyAvLyAubGVuZ3RoIGlzIDFcbiAgICAgICAgLy8gMS4gTGV0IFRhcmdldCBiZSB0aGUgdGhpcyB2YWx1ZS5cbiAgICAgICAgdmFyIHRhcmdldCA9IHRoaXM7XG4gICAgICAgIC8vIDIuIElmIElzQ2FsbGFibGUoVGFyZ2V0KSBpcyBmYWxzZSwgdGhyb3cgYSBUeXBlRXJyb3IgZXhjZXB0aW9uLlxuICAgICAgICBpZiAoIWlzRnVuY3Rpb24odGFyZ2V0KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSAnICsgdGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICAvLyAzLiBMZXQgQSBiZSBhIG5ldyAocG9zc2libHkgZW1wdHkpIGludGVybmFsIGxpc3Qgb2YgYWxsIG9mIHRoZVxuICAgICAgICAvLyAgIGFyZ3VtZW50IHZhbHVlcyBwcm92aWRlZCBhZnRlciB0aGlzQXJnIChhcmcxLCBhcmcyIGV0YyksIGluIG9yZGVyLlxuICAgICAgICAvLyBYWFggc2xpY2VkQXJncyB3aWxsIHN0YW5kIGluIGZvciBcIkFcIiBpZiB1c2VkXG4gICAgICAgIHZhciBhcmdzID0gYXJyYXlfc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpOyAvLyBmb3Igbm9ybWFsIGNhbGxcbiAgICAgICAgLy8gNC4gTGV0IEYgYmUgYSBuZXcgbmF0aXZlIEVDTUFTY3JpcHQgb2JqZWN0LlxuICAgICAgICAvLyAxMS4gU2V0IHRoZSBbW1Byb3RvdHlwZV1dIGludGVybmFsIHByb3BlcnR5IG9mIEYgdG8gdGhlIHN0YW5kYXJkXG4gICAgICAgIC8vICAgYnVpbHQtaW4gRnVuY3Rpb24gcHJvdG90eXBlIG9iamVjdCBhcyBzcGVjaWZpZWQgaW4gMTUuMy4zLjEuXG4gICAgICAgIC8vIDEyLiBTZXQgdGhlIFtbQ2FsbF1dIGludGVybmFsIHByb3BlcnR5IG9mIEYgYXMgZGVzY3JpYmVkIGluXG4gICAgICAgIC8vICAgMTUuMy40LjUuMS5cbiAgICAgICAgLy8gMTMuIFNldCB0aGUgW1tDb25zdHJ1Y3RdXSBpbnRlcm5hbCBwcm9wZXJ0eSBvZiBGIGFzIGRlc2NyaWJlZCBpblxuICAgICAgICAvLyAgIDE1LjMuNC41LjIuXG4gICAgICAgIC8vIDE0LiBTZXQgdGhlIFtbSGFzSW5zdGFuY2VdXSBpbnRlcm5hbCBwcm9wZXJ0eSBvZiBGIGFzIGRlc2NyaWJlZCBpblxuICAgICAgICAvLyAgIDE1LjMuNC41LjMuXG4gICAgICAgIHZhciBiaW5kZXIgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIGlmICh0aGlzIGluc3RhbmNlb2YgYm91bmQpIHtcbiAgICAgICAgICAgICAgICAvLyAxNS4zLjQuNS4yIFtbQ29uc3RydWN0XV1cbiAgICAgICAgICAgICAgICAvLyBXaGVuIHRoZSBbW0NvbnN0cnVjdF1dIGludGVybmFsIG1ldGhvZCBvZiBhIGZ1bmN0aW9uIG9iamVjdCxcbiAgICAgICAgICAgICAgICAvLyBGIHRoYXQgd2FzIGNyZWF0ZWQgdXNpbmcgdGhlIGJpbmQgZnVuY3Rpb24gaXMgY2FsbGVkIHdpdGggYVxuICAgICAgICAgICAgICAgIC8vIGxpc3Qgb2YgYXJndW1lbnRzIEV4dHJhQXJncywgdGhlIGZvbGxvd2luZyBzdGVwcyBhcmUgdGFrZW46XG4gICAgICAgICAgICAgICAgLy8gMS4gTGV0IHRhcmdldCBiZSB0aGUgdmFsdWUgb2YgRidzIFtbVGFyZ2V0RnVuY3Rpb25dXVxuICAgICAgICAgICAgICAgIC8vICAgaW50ZXJuYWwgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gMi4gSWYgdGFyZ2V0IGhhcyBubyBbW0NvbnN0cnVjdF1dIGludGVybmFsIG1ldGhvZCwgYVxuICAgICAgICAgICAgICAgIC8vICAgVHlwZUVycm9yIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG4gICAgICAgICAgICAgICAgLy8gMy4gTGV0IGJvdW5kQXJncyBiZSB0aGUgdmFsdWUgb2YgRidzIFtbQm91bmRBcmdzXV0gaW50ZXJuYWxcbiAgICAgICAgICAgICAgICAvLyAgIHByb3BlcnR5LlxuICAgICAgICAgICAgICAgIC8vIDQuIExldCBhcmdzIGJlIGEgbmV3IGxpc3QgY29udGFpbmluZyB0aGUgc2FtZSB2YWx1ZXMgYXMgdGhlXG4gICAgICAgICAgICAgICAgLy8gICBsaXN0IGJvdW5kQXJncyBpbiB0aGUgc2FtZSBvcmRlciBmb2xsb3dlZCBieSB0aGUgc2FtZVxuICAgICAgICAgICAgICAgIC8vICAgdmFsdWVzIGFzIHRoZSBsaXN0IEV4dHJhQXJncyBpbiB0aGUgc2FtZSBvcmRlci5cbiAgICAgICAgICAgICAgICAvLyA1LiBSZXR1cm4gdGhlIHJlc3VsdCBvZiBjYWxsaW5nIHRoZSBbW0NvbnN0cnVjdF1dIGludGVybmFsXG4gICAgICAgICAgICAgICAgLy8gICBtZXRob2Qgb2YgdGFyZ2V0IHByb3ZpZGluZyBhcmdzIGFzIHRoZSBhcmd1bWVudHMuXG5cbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gdGFyZ2V0LmFwcGx5KFxuICAgICAgICAgICAgICAgICAgICB0aGlzLFxuICAgICAgICAgICAgICAgICAgICBhcmdzLmNvbmNhdChhcnJheV9zbGljZS5jYWxsKGFyZ3VtZW50cykpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0KHJlc3VsdCkgPT09IHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyAxNS4zLjQuNS4xIFtbQ2FsbF1dXG4gICAgICAgICAgICAgICAgLy8gV2hlbiB0aGUgW1tDYWxsXV0gaW50ZXJuYWwgbWV0aG9kIG9mIGEgZnVuY3Rpb24gb2JqZWN0LCBGLFxuICAgICAgICAgICAgICAgIC8vIHdoaWNoIHdhcyBjcmVhdGVkIHVzaW5nIHRoZSBiaW5kIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aXRoIGFcbiAgICAgICAgICAgICAgICAvLyB0aGlzIHZhbHVlIGFuZCBhIGxpc3Qgb2YgYXJndW1lbnRzIEV4dHJhQXJncywgdGhlIGZvbGxvd2luZ1xuICAgICAgICAgICAgICAgIC8vIHN0ZXBzIGFyZSB0YWtlbjpcbiAgICAgICAgICAgICAgICAvLyAxLiBMZXQgYm91bmRBcmdzIGJlIHRoZSB2YWx1ZSBvZiBGJ3MgW1tCb3VuZEFyZ3NdXSBpbnRlcm5hbFxuICAgICAgICAgICAgICAgIC8vICAgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gMi4gTGV0IGJvdW5kVGhpcyBiZSB0aGUgdmFsdWUgb2YgRidzIFtbQm91bmRUaGlzXV0gaW50ZXJuYWxcbiAgICAgICAgICAgICAgICAvLyAgIHByb3BlcnR5LlxuICAgICAgICAgICAgICAgIC8vIDMuIExldCB0YXJnZXQgYmUgdGhlIHZhbHVlIG9mIEYncyBbW1RhcmdldEZ1bmN0aW9uXV0gaW50ZXJuYWxcbiAgICAgICAgICAgICAgICAvLyAgIHByb3BlcnR5LlxuICAgICAgICAgICAgICAgIC8vIDQuIExldCBhcmdzIGJlIGEgbmV3IGxpc3QgY29udGFpbmluZyB0aGUgc2FtZSB2YWx1ZXMgYXMgdGhlXG4gICAgICAgICAgICAgICAgLy8gICBsaXN0IGJvdW5kQXJncyBpbiB0aGUgc2FtZSBvcmRlciBmb2xsb3dlZCBieSB0aGUgc2FtZVxuICAgICAgICAgICAgICAgIC8vICAgdmFsdWVzIGFzIHRoZSBsaXN0IEV4dHJhQXJncyBpbiB0aGUgc2FtZSBvcmRlci5cbiAgICAgICAgICAgICAgICAvLyA1LiBSZXR1cm4gdGhlIHJlc3VsdCBvZiBjYWxsaW5nIHRoZSBbW0NhbGxdXSBpbnRlcm5hbCBtZXRob2RcbiAgICAgICAgICAgICAgICAvLyAgIG9mIHRhcmdldCBwcm92aWRpbmcgYm91bmRUaGlzIGFzIHRoZSB0aGlzIHZhbHVlIGFuZFxuICAgICAgICAgICAgICAgIC8vICAgcHJvdmlkaW5nIGFyZ3MgYXMgdGhlIGFyZ3VtZW50cy5cblxuICAgICAgICAgICAgICAgIC8vIGVxdWl2OiB0YXJnZXQuY2FsbCh0aGlzLCAuLi5ib3VuZEFyZ3MsIC4uLmFyZ3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseShcbiAgICAgICAgICAgICAgICAgICAgdGhhdCxcbiAgICAgICAgICAgICAgICAgICAgYXJncy5jb25jYXQoYXJyYXlfc2xpY2UuY2FsbChhcmd1bWVudHMpKVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIDE1LiBJZiB0aGUgW1tDbGFzc11dIGludGVybmFsIHByb3BlcnR5IG9mIFRhcmdldCBpcyBcIkZ1bmN0aW9uXCIsIHRoZW5cbiAgICAgICAgLy8gICAgIGEuIExldCBMIGJlIHRoZSBsZW5ndGggcHJvcGVydHkgb2YgVGFyZ2V0IG1pbnVzIHRoZSBsZW5ndGggb2YgQS5cbiAgICAgICAgLy8gICAgIGIuIFNldCB0aGUgbGVuZ3RoIG93biBwcm9wZXJ0eSBvZiBGIHRvIGVpdGhlciAwIG9yIEwsIHdoaWNoZXZlciBpc1xuICAgICAgICAvLyAgICAgICBsYXJnZXIuXG4gICAgICAgIC8vIDE2LiBFbHNlIHNldCB0aGUgbGVuZ3RoIG93biBwcm9wZXJ0eSBvZiBGIHRvIDAuXG5cbiAgICAgICAgdmFyIGJvdW5kTGVuZ3RoID0gTWF0aC5tYXgoMCwgdGFyZ2V0Lmxlbmd0aCAtIGFyZ3MubGVuZ3RoKTtcblxuICAgICAgICAvLyAxNy4gU2V0IHRoZSBhdHRyaWJ1dGVzIG9mIHRoZSBsZW5ndGggb3duIHByb3BlcnR5IG9mIEYgdG8gdGhlIHZhbHVlc1xuICAgICAgICAvLyAgIHNwZWNpZmllZCBpbiAxNS4zLjUuMS5cbiAgICAgICAgdmFyIGJvdW5kQXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvdW5kTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGJvdW5kQXJncy5wdXNoKCckJyArIGkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gWFhYIEJ1aWxkIGEgZHluYW1pYyBmdW5jdGlvbiB3aXRoIGRlc2lyZWQgYW1vdW50IG9mIGFyZ3VtZW50cyBpcyB0aGUgb25seVxuICAgICAgICAvLyB3YXkgdG8gc2V0IHRoZSBsZW5ndGggcHJvcGVydHkgb2YgYSBmdW5jdGlvbi5cbiAgICAgICAgLy8gSW4gZW52aXJvbm1lbnRzIHdoZXJlIENvbnRlbnQgU2VjdXJpdHkgUG9saWNpZXMgZW5hYmxlZCAoQ2hyb21lIGV4dGVuc2lvbnMsXG4gICAgICAgIC8vIGZvciBleC4pIGFsbCB1c2Ugb2YgZXZhbCBvciBGdW5jdGlvbiBjb3N0cnVjdG9yIHRocm93cyBhbiBleGNlcHRpb24uXG4gICAgICAgIC8vIEhvd2V2ZXIgaW4gYWxsIG9mIHRoZXNlIGVudmlyb25tZW50cyBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCBleGlzdHNcbiAgICAgICAgLy8gYW5kIHNvIHRoaXMgY29kZSB3aWxsIG5ldmVyIGJlIGV4ZWN1dGVkLlxuICAgICAgICB2YXIgYm91bmQgPSBGdW5jdGlvbignYmluZGVyJywgJ3JldHVybiBmdW5jdGlvbiAoJyArIGJvdW5kQXJncy5qb2luKCcsJykgKyAnKXsgcmV0dXJuIGJpbmRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9JykoYmluZGVyKTtcblxuICAgICAgICBpZiAodGFyZ2V0LnByb3RvdHlwZSkge1xuICAgICAgICAgICAgRW1wdHkucHJvdG90eXBlID0gdGFyZ2V0LnByb3RvdHlwZTtcbiAgICAgICAgICAgIGJvdW5kLnByb3RvdHlwZSA9IG5ldyBFbXB0eSgpO1xuICAgICAgICAgICAgLy8gQ2xlYW4gdXAgZGFuZ2xpbmcgcmVmZXJlbmNlcy5cbiAgICAgICAgICAgIEVtcHR5LnByb3RvdHlwZSA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUT0RPXG4gICAgICAgIC8vIDE4LiBTZXQgdGhlIFtbRXh0ZW5zaWJsZV1dIGludGVybmFsIHByb3BlcnR5IG9mIEYgdG8gdHJ1ZS5cblxuICAgICAgICAvLyBUT0RPXG4gICAgICAgIC8vIDE5LiBMZXQgdGhyb3dlciBiZSB0aGUgW1tUaHJvd1R5cGVFcnJvcl1dIGZ1bmN0aW9uIE9iamVjdCAoMTMuMi4zKS5cbiAgICAgICAgLy8gMjAuIENhbGwgdGhlIFtbRGVmaW5lT3duUHJvcGVydHldXSBpbnRlcm5hbCBtZXRob2Qgb2YgRiB3aXRoXG4gICAgICAgIC8vICAgYXJndW1lbnRzIFwiY2FsbGVyXCIsIFByb3BlcnR5RGVzY3JpcHRvciB7W1tHZXRdXTogdGhyb3dlciwgW1tTZXRdXTpcbiAgICAgICAgLy8gICB0aHJvd2VyLCBbW0VudW1lcmFibGVdXTogZmFsc2UsIFtbQ29uZmlndXJhYmxlXV06IGZhbHNlfSwgYW5kXG4gICAgICAgIC8vICAgZmFsc2UuXG4gICAgICAgIC8vIDIxLiBDYWxsIHRoZSBbW0RlZmluZU93blByb3BlcnR5XV0gaW50ZXJuYWwgbWV0aG9kIG9mIEYgd2l0aFxuICAgICAgICAvLyAgIGFyZ3VtZW50cyBcImFyZ3VtZW50c1wiLCBQcm9wZXJ0eURlc2NyaXB0b3Ige1tbR2V0XV06IHRocm93ZXIsXG4gICAgICAgIC8vICAgW1tTZXRdXTogdGhyb3dlciwgW1tFbnVtZXJhYmxlXV06IGZhbHNlLCBbW0NvbmZpZ3VyYWJsZV1dOiBmYWxzZX0sXG4gICAgICAgIC8vICAgYW5kIGZhbHNlLlxuXG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgLy8gTk9URSBGdW5jdGlvbiBvYmplY3RzIGNyZWF0ZWQgdXNpbmcgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgZG8gbm90XG4gICAgICAgIC8vIGhhdmUgYSBwcm90b3R5cGUgcHJvcGVydHkgb3IgdGhlIFtbQ29kZV1dLCBbW0Zvcm1hbFBhcmFtZXRlcnNdXSwgYW5kXG4gICAgICAgIC8vIFtbU2NvcGVdXSBpbnRlcm5hbCBwcm9wZXJ0aWVzLlxuICAgICAgICAvLyBYWFggY2FuJ3QgZGVsZXRlIHByb3RvdHlwZSBpbiBwdXJlLWpzLlxuXG4gICAgICAgIC8vIDIyLiBSZXR1cm4gRi5cbiAgICAgICAgcmV0dXJuIGJvdW5kO1xuICAgIH1cbn0pO1xuXG4vL1xuLy8gQXJyYXlcbi8vID09PT09XG4vL1xuXG4vLyBFUzUgMTUuNC4zLjJcbi8vIGh0dHA6Ly9lczUuZ2l0aHViLmNvbS8jeDE1LjQuMy4yXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9BcnJheS9pc0FycmF5XG5kZWZpbmVQcm9wZXJ0aWVzKEFycmF5LCB7IGlzQXJyYXk6IGlzQXJyYXkgfSk7XG5cblxudmFyIGJveGVkU3RyaW5nID0gT2JqZWN0KCdhJyk7XG52YXIgc3BsaXRTdHJpbmcgPSBib3hlZFN0cmluZ1swXSAhPT0gJ2EnIHx8ICEoMCBpbiBib3hlZFN0cmluZyk7XG5cbnZhciBwcm9wZXJseUJveGVzQ29udGV4dCA9IGZ1bmN0aW9uIHByb3Blcmx5Qm94ZWQobWV0aG9kKSB7XG4gICAgLy8gQ2hlY2sgbm9kZSAwLjYuMjEgYnVnIHdoZXJlIHRoaXJkIHBhcmFtZXRlciBpcyBub3QgYm94ZWRcbiAgICB2YXIgcHJvcGVybHlCb3hlc05vblN0cmljdCA9IHRydWU7XG4gICAgdmFyIHByb3Blcmx5Qm94ZXNTdHJpY3QgPSB0cnVlO1xuICAgIGlmIChtZXRob2QpIHtcbiAgICAgICAgbWV0aG9kLmNhbGwoJ2ZvbycsIGZ1bmN0aW9uIChfLCBfXywgY29udGV4dCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZXh0ICE9PSAnb2JqZWN0JykgeyBwcm9wZXJseUJveGVzTm9uU3RyaWN0ID0gZmFsc2U7IH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWV0aG9kLmNhbGwoWzFdLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAndXNlIHN0cmljdCc7XG4gICAgICAgICAgICBwcm9wZXJseUJveGVzU3RyaWN0ID0gdHlwZW9mIHRoaXMgPT09ICdzdHJpbmcnO1xuICAgICAgICB9LCAneCcpO1xuICAgIH1cbiAgICByZXR1cm4gISFtZXRob2QgJiYgcHJvcGVybHlCb3hlc05vblN0cmljdCAmJiBwcm9wZXJseUJveGVzU3RyaWN0O1xufTtcblxuZGVmaW5lUHJvcGVydGllcyhBcnJheVByb3RvdHlwZSwge1xuICAgIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goZnVuIC8qLCB0aGlzcCovKSB7XG4gICAgICAgIHZhciBvYmplY3QgPSB0b09iamVjdCh0aGlzKSxcbiAgICAgICAgICAgIHNlbGYgPSBzcGxpdFN0cmluZyAmJiBpc1N0cmluZyh0aGlzKSA/IHRoaXMuc3BsaXQoJycpIDogb2JqZWN0LFxuICAgICAgICAgICAgdGhpc3AgPSBhcmd1bWVudHNbMV0sXG4gICAgICAgICAgICBpID0gLTEsXG4gICAgICAgICAgICBsZW5ndGggPSBzZWxmLmxlbmd0aCA+Pj4gMDtcblxuICAgICAgICAvLyBJZiBubyBjYWxsYmFjayBmdW5jdGlvbiBvciBpZiBjYWxsYmFjayBpcyBub3QgYSBjYWxsYWJsZSBmdW5jdGlvblxuICAgICAgICBpZiAoIWlzRnVuY3Rpb24oZnVuKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigpOyAvLyBUT0RPIG1lc3NhZ2VcbiAgICAgICAgfVxuXG4gICAgICAgIHdoaWxlICgrK2kgPCBsZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChpIGluIHNlbGYpIHtcbiAgICAgICAgICAgICAgICAvLyBJbnZva2UgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHdpdGggY2FsbCwgcGFzc2luZyBhcmd1bWVudHM6XG4gICAgICAgICAgICAgICAgLy8gY29udGV4dCwgcHJvcGVydHkgdmFsdWUsIHByb3BlcnR5IGtleSwgdGhpc0FyZyBvYmplY3RcbiAgICAgICAgICAgICAgICAvLyBjb250ZXh0XG4gICAgICAgICAgICAgICAgZnVuLmNhbGwodGhpc3AsIHNlbGZbaV0sIGksIG9iamVjdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59LCAhcHJvcGVybHlCb3hlc0NvbnRleHQoQXJyYXlQcm90b3R5cGUuZm9yRWFjaCkpO1xuXG4vLyBFUzUgMTUuNC40LjE0XG4vLyBodHRwOi8vZXM1LmdpdGh1Yi5jb20vI3gxNS40LjQuMTRcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FycmF5L2luZGV4T2ZcbnZhciBoYXNGaXJlZm94MkluZGV4T2ZCdWcgPSBBcnJheS5wcm90b3R5cGUuaW5kZXhPZiAmJiBbMCwgMV0uaW5kZXhPZigxLCAyKSAhPT0gLTE7XG5kZWZpbmVQcm9wZXJ0aWVzKEFycmF5UHJvdG90eXBlLCB7XG4gICAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzb3VnaHQgLyosIGZyb21JbmRleCAqLyApIHtcbiAgICAgICAgdmFyIHNlbGYgPSBzcGxpdFN0cmluZyAmJiBpc1N0cmluZyh0aGlzKSA/IHRoaXMuc3BsaXQoJycpIDogdG9PYmplY3QodGhpcyksXG4gICAgICAgICAgICBsZW5ndGggPSBzZWxmLmxlbmd0aCA+Pj4gMDtcblxuICAgICAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIGkgPSB0b0ludGVnZXIoYXJndW1lbnRzWzFdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGhhbmRsZSBuZWdhdGl2ZSBpbmRpY2VzXG4gICAgICAgIGkgPSBpID49IDAgPyBpIDogTWF0aC5tYXgoMCwgbGVuZ3RoICsgaSk7XG4gICAgICAgIGZvciAoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChpIGluIHNlbGYgJiYgc2VsZltpXSA9PT0gc291Z2h0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbn0sIGhhc0ZpcmVmb3gySW5kZXhPZkJ1Zyk7XG5cbi8vXG4vLyBTdHJpbmdcbi8vID09PT09PVxuLy9cblxuLy8gRVM1IDE1LjUuNC4xNFxuLy8gaHR0cDovL2VzNS5naXRodWIuY29tLyN4MTUuNS40LjE0XG5cbi8vIFtidWdmaXgsIElFIGx0IDksIGZpcmVmb3ggNCwgS29ucXVlcm9yLCBPcGVyYSwgb2JzY3VyZSBicm93c2Vyc11cbi8vIE1hbnkgYnJvd3NlcnMgZG8gbm90IHNwbGl0IHByb3Blcmx5IHdpdGggcmVndWxhciBleHByZXNzaW9ucyBvciB0aGV5XG4vLyBkbyBub3QgcGVyZm9ybSB0aGUgc3BsaXQgY29ycmVjdGx5IHVuZGVyIG9ic2N1cmUgY29uZGl0aW9ucy5cbi8vIFNlZSBodHRwOi8vYmxvZy5zdGV2ZW5sZXZpdGhhbi5jb20vYXJjaGl2ZXMvY3Jvc3MtYnJvd3Nlci1zcGxpdFxuLy8gSSd2ZSB0ZXN0ZWQgaW4gbWFueSBicm93c2VycyBhbmQgdGhpcyBzZWVtcyB0byBjb3ZlciB0aGUgZGV2aWFudCBvbmVzOlxuLy8gICAgJ2FiJy5zcGxpdCgvKD86YWIpKi8pIHNob3VsZCBiZSBbXCJcIiwgXCJcIl0sIG5vdCBbXCJcIl1cbi8vICAgICcuJy5zcGxpdCgvKC4/KSguPykvKSBzaG91bGQgYmUgW1wiXCIsIFwiLlwiLCBcIlwiLCBcIlwiXSwgbm90IFtcIlwiLCBcIlwiXVxuLy8gICAgJ3Rlc3N0Jy5zcGxpdCgvKHMpKi8pIHNob3VsZCBiZSBbXCJ0XCIsIHVuZGVmaW5lZCwgXCJlXCIsIFwic1wiLCBcInRcIl0sIG5vdFxuLy8gICAgICAgW3VuZGVmaW5lZCwgXCJ0XCIsIHVuZGVmaW5lZCwgXCJlXCIsIC4uLl1cbi8vICAgICcnLnNwbGl0KC8uPy8pIHNob3VsZCBiZSBbXSwgbm90IFtcIlwiXVxuLy8gICAgJy4nLnNwbGl0KC8oKSgpLykgc2hvdWxkIGJlIFtcIi5cIl0sIG5vdCBbXCJcIiwgXCJcIiwgXCIuXCJdXG5cbnZhciBzdHJpbmdfc3BsaXQgPSBTdHJpbmdQcm90b3R5cGUuc3BsaXQ7XG5pZiAoXG4gICAgJ2FiJy5zcGxpdCgvKD86YWIpKi8pLmxlbmd0aCAhPT0gMiB8fFxuICAgICcuJy5zcGxpdCgvKC4/KSguPykvKS5sZW5ndGggIT09IDQgfHxcbiAgICAndGVzc3QnLnNwbGl0KC8ocykqLylbMV0gPT09ICd0JyB8fFxuICAgICd0ZXN0Jy5zcGxpdCgvKD86KS8sIC0xKS5sZW5ndGggIT09IDQgfHxcbiAgICAnJy5zcGxpdCgvLj8vKS5sZW5ndGggfHxcbiAgICAnLicuc3BsaXQoLygpKCkvKS5sZW5ndGggPiAxXG4pIHtcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29tcGxpYW50RXhlY05wY2cgPSAvKCk/Py8uZXhlYygnJylbMV0gPT09IHZvaWQgMDsgLy8gTlBDRzogbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXBcblxuICAgICAgICBTdHJpbmdQcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgICAgICAgdmFyIHN0cmluZyA9IHRoaXM7XG4gICAgICAgICAgICBpZiAoc2VwYXJhdG9yID09PSB2b2lkIDAgJiYgbGltaXQgPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIElmIGBzZXBhcmF0b3JgIGlzIG5vdCBhIHJlZ2V4LCB1c2UgbmF0aXZlIHNwbGl0XG4gICAgICAgICAgICBpZiAoX3RvU3RyaW5nLmNhbGwoc2VwYXJhdG9yKSAhPT0gJ1tvYmplY3QgUmVnRXhwXScpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nX3NwbGl0LmNhbGwodGhpcywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBvdXRwdXQgPSBbXSxcbiAgICAgICAgICAgICAgICBmbGFncyA9IChzZXBhcmF0b3IuaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLm11bHRpbGluZSAgPyAnbScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5leHRlbmRlZCAgID8gJ3gnIDogJycpICsgLy8gUHJvcG9zZWQgZm9yIEVTNlxuICAgICAgICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5zdGlja3kgICAgID8gJ3knIDogJycpLCAvLyBGaXJlZm94IDMrXG4gICAgICAgICAgICAgICAgbGFzdExhc3RJbmRleCA9IDAsXG4gICAgICAgICAgICAgICAgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHlcbiAgICAgICAgICAgICAgICBzZXBhcmF0b3IyLCBtYXRjaCwgbGFzdEluZGV4LCBsYXN0TGVuZ3RoO1xuICAgICAgICAgICAgc2VwYXJhdG9yID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7XG4gICAgICAgICAgICBzdHJpbmcgKz0gJyc7IC8vIFR5cGUtY29udmVydFxuICAgICAgICAgICAgaWYgKCFjb21wbGlhbnRFeGVjTnBjZykge1xuICAgICAgICAgICAgICAgIC8vIERvZXNuJ3QgbmVlZCBmbGFncyBneSwgYnV0IHRoZXkgZG9uJ3QgaHVydFxuICAgICAgICAgICAgICAgIHNlcGFyYXRvcjIgPSBuZXcgUmVnRXhwKCdeJyArIHNlcGFyYXRvci5zb3VyY2UgKyAnJCg/IVxcXFxzKScsIGZsYWdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8qIFZhbHVlcyBmb3IgYGxpbWl0YCwgcGVyIHRoZSBzcGVjOlxuICAgICAgICAgICAgICogSWYgdW5kZWZpbmVkOiA0Mjk0OTY3Mjk1IC8vIE1hdGgucG93KDIsIDMyKSAtIDFcbiAgICAgICAgICAgICAqIElmIDAsIEluZmluaXR5LCBvciBOYU46IDBcbiAgICAgICAgICAgICAqIElmIHBvc2l0aXZlIG51bWJlcjogbGltaXQgPSBNYXRoLmZsb29yKGxpbWl0KTsgaWYgKGxpbWl0ID4gNDI5NDk2NzI5NSkgbGltaXQgLT0gNDI5NDk2NzI5NjtcbiAgICAgICAgICAgICAqIElmIG5lZ2F0aXZlIG51bWJlcjogNDI5NDk2NzI5NiAtIE1hdGguZmxvb3IoTWF0aC5hYnMobGltaXQpKVxuICAgICAgICAgICAgICogSWYgb3RoZXI6IFR5cGUtY29udmVydCwgdGhlbiB1c2UgdGhlIGFib3ZlIHJ1bGVzXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGxpbWl0ID0gbGltaXQgPT09IHZvaWQgMCA/XG4gICAgICAgICAgICAgICAgLTEgPj4+IDAgOiAvLyBNYXRoLnBvdygyLCAzMikgLSAxXG4gICAgICAgICAgICAgICAgVG9VaW50MzIobGltaXQpO1xuICAgICAgICAgICAgd2hpbGUgKG1hdGNoID0gc2VwYXJhdG9yLmV4ZWMoc3RyaW5nKSkge1xuICAgICAgICAgICAgICAgIC8vIGBzZXBhcmF0b3IubGFzdEluZGV4YCBpcyBub3QgcmVsaWFibGUgY3Jvc3MtYnJvd3NlclxuICAgICAgICAgICAgICAgIGxhc3RJbmRleCA9IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGlmIChsYXN0SW5kZXggPiBsYXN0TGFzdEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4LCBtYXRjaC5pbmRleCkpO1xuICAgICAgICAgICAgICAgICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYCBmb3JcbiAgICAgICAgICAgICAgICAgICAgLy8gbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXBzXG4gICAgICAgICAgICAgICAgICAgIGlmICghY29tcGxpYW50RXhlY05wY2cgJiYgbWF0Y2gubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hbMF0ucmVwbGFjZShzZXBhcmF0b3IyLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcmd1bWVudHNbaV0gPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hbaV0gPSB2b2lkIDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2gubGVuZ3RoID4gMSAmJiBtYXRjaC5pbmRleCA8IHN0cmluZy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5UHJvdG90eXBlLnB1c2guYXBwbHkob3V0cHV0LCBtYXRjaC5zbGljZSgxKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGFzdExlbmd0aCA9IG1hdGNoWzBdLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgbGFzdExhc3RJbmRleCA9IGxhc3RJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG91dHB1dC5sZW5ndGggPj0gbGltaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzZXBhcmF0b3IubGFzdEluZGV4ID09PSBtYXRjaC5pbmRleCkge1xuICAgICAgICAgICAgICAgICAgICBzZXBhcmF0b3IubGFzdEluZGV4Kys7IC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3BcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobGFzdExhc3RJbmRleCA9PT0gc3RyaW5nLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGlmIChsYXN0TGVuZ3RoIHx8ICFzZXBhcmF0b3IudGVzdCgnJykpIHtcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0LnB1c2goJycpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvdXRwdXQubGVuZ3RoID4gbGltaXQgPyBvdXRwdXQuc2xpY2UoMCwgbGltaXQpIDogb3V0cHV0O1xuICAgICAgICB9O1xuICAgIH0oKSk7XG5cbi8vIFtidWdmaXgsIGNocm9tZV1cbi8vIElmIHNlcGFyYXRvciBpcyB1bmRlZmluZWQsIHRoZW4gdGhlIHJlc3VsdCBhcnJheSBjb250YWlucyBqdXN0IG9uZSBTdHJpbmcsXG4vLyB3aGljaCBpcyB0aGUgdGhpcyB2YWx1ZSAoY29udmVydGVkIHRvIGEgU3RyaW5nKS4gSWYgbGltaXQgaXMgbm90IHVuZGVmaW5lZCxcbi8vIHRoZW4gdGhlIG91dHB1dCBhcnJheSBpcyB0cnVuY2F0ZWQgc28gdGhhdCBpdCBjb250YWlucyBubyBtb3JlIHRoYW4gbGltaXRcbi8vIGVsZW1lbnRzLlxuLy8gXCIwXCIuc3BsaXQodW5kZWZpbmVkLCAwKSAtPiBbXVxufSBlbHNlIGlmICgnMCcuc3BsaXQodm9pZCAwLCAwKS5sZW5ndGgpIHtcbiAgICBTdHJpbmdQcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiBzcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICAgIGlmIChzZXBhcmF0b3IgPT09IHZvaWQgMCAmJiBsaW1pdCA9PT0gMCkgeyByZXR1cm4gW107IH1cbiAgICAgICAgcmV0dXJuIHN0cmluZ19zcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH07XG59XG5cbi8vIEVDTUEtMjYyLCAzcmQgQi4yLjNcbi8vIE5vdCBhbiBFQ01BU2NyaXB0IHN0YW5kYXJkLCBhbHRob3VnaCBFQ01BU2NyaXB0IDNyZCBFZGl0aW9uIGhhcyBhXG4vLyBub24tbm9ybWF0aXZlIHNlY3Rpb24gc3VnZ2VzdGluZyB1bmlmb3JtIHNlbWFudGljcyBhbmQgaXQgc2hvdWxkIGJlXG4vLyBub3JtYWxpemVkIGFjcm9zcyBhbGwgYnJvd3NlcnNcbi8vIFtidWdmaXgsIElFIGx0IDldIElFIDwgOSBzdWJzdHIoKSB3aXRoIG5lZ2F0aXZlIHZhbHVlIG5vdCB3b3JraW5nIGluIElFXG52YXIgc3RyaW5nX3N1YnN0ciA9IFN0cmluZ1Byb3RvdHlwZS5zdWJzdHI7XG52YXIgaGFzTmVnYXRpdmVTdWJzdHJCdWcgPSAnJy5zdWJzdHIgJiYgJzBiJy5zdWJzdHIoLTEpICE9PSAnYic7XG5kZWZpbmVQcm9wZXJ0aWVzKFN0cmluZ1Byb3RvdHlwZSwge1xuICAgIHN1YnN0cjogZnVuY3Rpb24gc3Vic3RyKHN0YXJ0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZ19zdWJzdHIuY2FsbChcbiAgICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgICBzdGFydCA8IDAgPyAoKHN0YXJ0ID0gdGhpcy5sZW5ndGggKyBzdGFydCkgPCAwID8gMCA6IHN0YXJ0KSA6IHN0YXJ0LFxuICAgICAgICAgICAgbGVuZ3RoXG4gICAgICAgICk7XG4gICAgfVxufSwgaGFzTmVnYXRpdmVTdWJzdHJCdWcpO1xuXG59LHt9XSwxNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gW1xuICAvLyBzdHJlYW1pbmcgdHJhbnNwb3J0c1xuICByZXF1aXJlKCcuL3RyYW5zcG9ydC93ZWJzb2NrZXQnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC94aHItc3RyZWFtaW5nJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQveGRyLXN0cmVhbWluZycpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L2V2ZW50c291cmNlJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwJykocmVxdWlyZSgnLi90cmFuc3BvcnQvZXZlbnRzb3VyY2UnKSlcblxuICAvLyBwb2xsaW5nIHRyYW5zcG9ydHNcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvaHRtbGZpbGUnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC9saWIvaWZyYW1lLXdyYXAnKShyZXF1aXJlKCcuL3RyYW5zcG9ydC9odG1sZmlsZScpKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC94aHItcG9sbGluZycpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L3hkci1wb2xsaW5nJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwJykocmVxdWlyZSgnLi90cmFuc3BvcnQveGhyLXBvbGxpbmcnKSlcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvanNvbnAtcG9sbGluZycpXG5dO1xuXG59LHtcIi4vdHJhbnNwb3J0L2V2ZW50c291cmNlXCI6MjAsXCIuL3RyYW5zcG9ydC9odG1sZmlsZVwiOjIxLFwiLi90cmFuc3BvcnQvanNvbnAtcG9sbGluZ1wiOjIzLFwiLi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwXCI6MjYsXCIuL3RyYW5zcG9ydC93ZWJzb2NrZXRcIjozOCxcIi4vdHJhbnNwb3J0L3hkci1wb2xsaW5nXCI6MzksXCIuL3RyYW5zcG9ydC94ZHItc3RyZWFtaW5nXCI6NDAsXCIuL3RyYW5zcG9ydC94aHItcG9sbGluZ1wiOjQxLFwiLi90cmFuc3BvcnQveGhyLXN0cmVhbWluZ1wiOjQyfV0sMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2V2ZW50JylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3VybCcpXG4gICwgWEhSID0gZ2xvYmFsLlhNTEh0dHBSZXF1ZXN0XG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpicm93c2VyOnhocicpO1xufVxuXG5mdW5jdGlvbiBBYnN0cmFjdFhIUk9iamVjdChtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cykge1xuICBkZWJ1ZyhtZXRob2QsIHVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgc2VsZi5fc3RhcnQobWV0aG9kLCB1cmwsIHBheWxvYWQsIG9wdHMpO1xuICB9LCAwKTtcbn1cblxuaW5oZXJpdHMoQWJzdHJhY3RYSFJPYmplY3QsIEV2ZW50RW1pdHRlcik7XG5cbkFic3RyYWN0WEhST2JqZWN0LnByb3RvdHlwZS5fc3RhcnQgPSBmdW5jdGlvbihtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgdHJ5IHtcbiAgICB0aGlzLnhociA9IG5ldyBYSFIoKTtcbiAgfSBjYXRjaCAoeCkge1xuICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgfVxuXG4gIGlmICghdGhpcy54aHIpIHtcbiAgICBkZWJ1Zygnbm8geGhyJyk7XG4gICAgdGhpcy5lbWl0KCdmaW5pc2gnLCAwLCAnbm8geGhyIHN1cHBvcnQnKTtcbiAgICB0aGlzLl9jbGVhbnVwKCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gc2V2ZXJhbCBicm93c2VycyBjYWNoZSBQT1NUc1xuICB1cmwgPSB1cmxVdGlscy5hZGRRdWVyeSh1cmwsICd0PScgKyAoK25ldyBEYXRlKCkpKTtcblxuICAvLyBFeHBsb3JlciB0ZW5kcyB0byBrZWVwIGNvbm5lY3Rpb24gb3BlbiwgZXZlbiBhZnRlciB0aGVcbiAgLy8gdGFiIGdldHMgY2xvc2VkOiBodHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC81MjgwXG4gIHRoaXMudW5sb2FkUmVmID0gdXRpbHMudW5sb2FkQWRkKGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd1bmxvYWQgY2xlYW51cCcpO1xuICAgIHNlbGYuX2NsZWFudXAodHJ1ZSk7XG4gIH0pO1xuICB0cnkge1xuICAgIHRoaXMueGhyLm9wZW4obWV0aG9kLCB1cmwsIHRydWUpO1xuICAgIGlmICh0aGlzLnRpbWVvdXQgJiYgJ3RpbWVvdXQnIGluIHRoaXMueGhyKSB7XG4gICAgICB0aGlzLnhoci50aW1lb3V0ID0gdGhpcy50aW1lb3V0O1xuICAgICAgdGhpcy54aHIub250aW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGRlYnVnKCd4aHIgdGltZW91dCcpO1xuICAgICAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIDAsICcnKTtcbiAgICAgICAgc2VsZi5fY2xlYW51cChmYWxzZSk7XG4gICAgICB9O1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIGRlYnVnKCdleGNlcHRpb24nLCBlKTtcbiAgICAvLyBJRSByYWlzZXMgYW4gZXhjZXB0aW9uIG9uIHdyb25nIHBvcnQuXG4gICAgdGhpcy5lbWl0KCdmaW5pc2gnLCAwLCAnJyk7XG4gICAgdGhpcy5fY2xlYW51cChmYWxzZSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKCghb3B0cyB8fCAhb3B0cy5ub0NyZWRlbnRpYWxzKSAmJiBBYnN0cmFjdFhIUk9iamVjdC5zdXBwb3J0c0NPUlMpIHtcbiAgICBkZWJ1Zygnd2l0aENyZWRlbnRpYWxzJyk7XG4gICAgLy8gTW96aWxsYSBkb2NzIHNheXMgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vWE1MSHR0cFJlcXVlc3QgOlxuICAgIC8vIFwiVGhpcyBuZXZlciBhZmZlY3RzIHNhbWUtc2l0ZSByZXF1ZXN0cy5cIlxuXG4gICAgdGhpcy54aHIud2l0aENyZWRlbnRpYWxzID0gJ3RydWUnO1xuICB9XG4gIGlmIChvcHRzICYmIG9wdHMuaGVhZGVycykge1xuICAgIGZvciAodmFyIGtleSBpbiBvcHRzLmhlYWRlcnMpIHtcbiAgICAgIHRoaXMueGhyLnNldFJlcXVlc3RIZWFkZXIoa2V5LCBvcHRzLmhlYWRlcnNba2V5XSk7XG4gICAgfVxuICB9XG5cbiAgdGhpcy54aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHNlbGYueGhyKSB7XG4gICAgICB2YXIgeCA9IHNlbGYueGhyO1xuICAgICAgdmFyIHRleHQsIHN0YXR1cztcbiAgICAgIGRlYnVnKCdyZWFkeVN0YXRlJywgeC5yZWFkeVN0YXRlKTtcbiAgICAgIHN3aXRjaCAoeC5yZWFkeVN0YXRlKSB7XG4gICAgICBjYXNlIDM6XG4gICAgICAgIC8vIElFIGRvZXNuJ3QgbGlrZSBwZWVraW5nIGludG8gcmVzcG9uc2VUZXh0IG9yIHN0YXR1c1xuICAgICAgICAvLyBvbiBNaWNyb3NvZnQuWE1MSFRUUCBhbmQgcmVhZHlzdGF0ZT0zXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgc3RhdHVzID0geC5zdGF0dXM7XG4gICAgICAgICAgdGV4dCA9IHgucmVzcG9uc2VUZXh0O1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICAgICAgICB9XG4gICAgICAgIGRlYnVnKCdzdGF0dXMnLCBzdGF0dXMpO1xuICAgICAgICAvLyBJRSByZXR1cm5zIDEyMjMgZm9yIDIwNDogaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTQ1MFxuICAgICAgICBpZiAoc3RhdHVzID09PSAxMjIzKSB7XG4gICAgICAgICAgc3RhdHVzID0gMjA0O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSUUgZG9lcyByZXR1cm4gcmVhZHlzdGF0ZSA9PSAzIGZvciA0MDQgYW5zd2Vycy5cbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gMjAwICYmIHRleHQgJiYgdGV4dC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgZGVidWcoJ2NodW5rJyk7XG4gICAgICAgICAgc2VsZi5lbWl0KCdjaHVuaycsIHN0YXR1cywgdGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDQ6XG4gICAgICAgIHN0YXR1cyA9IHguc3RhdHVzO1xuICAgICAgICBkZWJ1Zygnc3RhdHVzJywgc3RhdHVzKTtcbiAgICAgICAgLy8gSUUgcmV0dXJucyAxMjIzIGZvciAyMDQ6IGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzE0NTBcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gMTIyMykge1xuICAgICAgICAgIHN0YXR1cyA9IDIwNDtcbiAgICAgICAgfVxuICAgICAgICAvLyBJRSByZXR1cm5zIHRoaXMgZm9yIGEgYmFkIHBvcnRcbiAgICAgICAgLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L3dpbmRvd3MvZGVza3RvcC9hYTM4Mzc3MCh2PXZzLjg1KS5hc3B4XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDEyMDA1IHx8IHN0YXR1cyA9PT0gMTIwMjkpIHtcbiAgICAgICAgICBzdGF0dXMgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgZGVidWcoJ2ZpbmlzaCcsIHN0YXR1cywgeC5yZXNwb25zZVRleHQpO1xuICAgICAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIHN0YXR1cywgeC5yZXNwb25zZVRleHQpO1xuICAgICAgICBzZWxmLl9jbGVhbnVwKGZhbHNlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHRyeSB7XG4gICAgc2VsZi54aHIuc2VuZChwYXlsb2FkKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHNlbGYuZW1pdCgnZmluaXNoJywgMCwgJycpO1xuICAgIHNlbGYuX2NsZWFudXAoZmFsc2UpO1xuICB9XG59O1xuXG5BYnN0cmFjdFhIUk9iamVjdC5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbihhYm9ydCkge1xuICBkZWJ1ZygnY2xlYW51cCcpO1xuICBpZiAoIXRoaXMueGhyKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHV0aWxzLnVubG9hZERlbCh0aGlzLnVubG9hZFJlZik7XG5cbiAgLy8gSUUgbmVlZHMgdGhpcyBmaWVsZCB0byBiZSBhIGZ1bmN0aW9uXG4gIHRoaXMueGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge307XG4gIGlmICh0aGlzLnhoci5vbnRpbWVvdXQpIHtcbiAgICB0aGlzLnhoci5vbnRpbWVvdXQgPSBudWxsO1xuICB9XG5cbiAgaWYgKGFib3J0KSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMueGhyLmFib3J0KCk7XG4gICAgfSBjYXRjaCAoeCkge1xuICAgICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICAgIH1cbiAgfVxuICB0aGlzLnVubG9hZFJlZiA9IHRoaXMueGhyID0gbnVsbDtcbn07XG5cbkFic3RyYWN0WEhST2JqZWN0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5fY2xlYW51cCh0cnVlKTtcbn07XG5cbkFic3RyYWN0WEhST2JqZWN0LmVuYWJsZWQgPSAhIVhIUjtcbi8vIG92ZXJyaWRlIFhNTEh0dHBSZXF1ZXN0IGZvciBJRTYvN1xuLy8gb2JmdXNjYXRlIHRvIGF2b2lkIGZpcmV3YWxsc1xudmFyIGF4byA9IFsnQWN0aXZlJ10uY29uY2F0KCdPYmplY3QnKS5qb2luKCdYJyk7XG5pZiAoIUFic3RyYWN0WEhST2JqZWN0LmVuYWJsZWQgJiYgKGF4byBpbiBnbG9iYWwpKSB7XG4gIGRlYnVnKCdvdmVycmlkaW5nIHhtbGh0dHByZXF1ZXN0Jyk7XG4gIFhIUiA9IGZ1bmN0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gbmV3IGdsb2JhbFtheG9dKCdNaWNyb3NvZnQuWE1MSFRUUCcpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfTtcbiAgQWJzdHJhY3RYSFJPYmplY3QuZW5hYmxlZCA9ICEhbmV3IFhIUigpO1xufVxuXG52YXIgY29ycyA9IGZhbHNlO1xudHJ5IHtcbiAgY29ycyA9ICd3aXRoQ3JlZGVudGlhbHMnIGluIG5ldyBYSFIoKTtcbn0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxufVxuXG5BYnN0cmFjdFhIUk9iamVjdC5zdXBwb3J0c0NPUlMgPSBjb3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFic3RyYWN0WEhST2JqZWN0O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0sdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cgOiB7fSlcblxufSx7XCIuLi8uLi91dGlscy9ldmVudFwiOjQ2LFwiLi4vLi4vdXRpbHMvdXJsXCI6NTIsXCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTd9XSwxODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG5tb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5FdmVudFNvdXJjZTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDE5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAoZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIERyaXZlciA9IGdsb2JhbC5XZWJTb2NrZXQgfHwgZ2xvYmFsLk1veldlYlNvY2tldDtcbmlmIChEcml2ZXIpIHtcblx0bW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBXZWJTb2NrZXRCcm93c2VyRHJpdmVyKHVybCkge1xuXHRcdHJldHVybiBuZXcgRHJpdmVyKHVybCk7XG5cdH07XG59IGVsc2Uge1xuXHRtb2R1bGUuZXhwb3J0cyA9IHVuZGVmaW5lZDtcbn1cblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDIwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIEV2ZW50U291cmNlUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL2V2ZW50c291cmNlJylcbiAgLCBYSFJDb3JzT2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGhyLWNvcnMnKVxuICAsIEV2ZW50U291cmNlRHJpdmVyID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuICA7XG5cbmZ1bmN0aW9uIEV2ZW50U291cmNlVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghRXZlbnRTb3VyY2VUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cblxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy9ldmVudHNvdXJjZScsIEV2ZW50U291cmNlUmVjZWl2ZXIsIFhIUkNvcnNPYmplY3QpO1xufVxuXG5pbmhlcml0cyhFdmVudFNvdXJjZVRyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuRXZlbnRTb3VyY2VUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gISFFdmVudFNvdXJjZURyaXZlcjtcbn07XG5cbkV2ZW50U291cmNlVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnZXZlbnRzb3VyY2UnO1xuRXZlbnRTb3VyY2VUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRTb3VyY2VUcmFuc3BvcnQ7XG5cbn0se1wiLi9saWIvYWpheC1iYXNlZFwiOjI0LFwiLi9yZWNlaXZlci9ldmVudHNvdXJjZVwiOjI5LFwiLi9zZW5kZXIveGhyLWNvcnNcIjozNSxcImV2ZW50c291cmNlXCI6MTgsXCJpbmhlcml0c1wiOjU3fV0sMjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgSHRtbGZpbGVSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIvaHRtbGZpbGUnKVxuICAsIFhIUkxvY2FsT2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGhyLWxvY2FsJylcbiAgLCBBamF4QmFzZWRUcmFuc3BvcnQgPSByZXF1aXJlKCcuL2xpYi9hamF4LWJhc2VkJylcbiAgO1xuXG5mdW5jdGlvbiBIdG1sRmlsZVRyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIUh0bWxmaWxlUmVjZWl2ZXIuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL2h0bWxmaWxlJywgSHRtbGZpbGVSZWNlaXZlciwgWEhSTG9jYWxPYmplY3QpO1xufVxuXG5pbmhlcml0cyhIdG1sRmlsZVRyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuSHRtbEZpbGVUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKGluZm8pIHtcbiAgcmV0dXJuIEh0bWxmaWxlUmVjZWl2ZXIuZW5hYmxlZCAmJiBpbmZvLnNhbWVPcmlnaW47XG59O1xuXG5IdG1sRmlsZVRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2h0bWxmaWxlJztcbkh0bWxGaWxlVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEh0bWxGaWxlVHJhbnNwb3J0O1xuXG59LHtcIi4vbGliL2FqYXgtYmFzZWRcIjoyNCxcIi4vcmVjZWl2ZXIvaHRtbGZpbGVcIjozMCxcIi4vc2VuZGVyL3hoci1sb2NhbFwiOjM3LFwiaW5oZXJpdHNcIjo1N31dLDIyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbi8vIEZldyBjb29sIHRyYW5zcG9ydHMgZG8gd29yayBvbmx5IGZvciBzYW1lLW9yaWdpbi4gSW4gb3JkZXIgdG8gbWFrZVxuLy8gdGhlbSB3b3JrIGNyb3NzLWRvbWFpbiB3ZSBzaGFsbCB1c2UgaWZyYW1lLCBzZXJ2ZWQgZnJvbSB0aGVcbi8vIHJlbW90ZSBkb21haW4uIE5ldyBicm93c2VycyBoYXZlIGNhcGFiaWxpdGllcyB0byBjb21tdW5pY2F0ZSB3aXRoXG4vLyBjcm9zcyBkb21haW4gaWZyYW1lIHVzaW5nIHBvc3RNZXNzYWdlKCkuIEluIElFIGl0IHdhcyBpbXBsZW1lbnRlZFxuLy8gZnJvbSBJRSA4KywgYnV0IG9mIGNvdXJzZSwgSUUgZ290IHNvbWUgZGV0YWlscyB3cm9uZzpcbi8vICAgIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9jYzE5NzAxNSh2PVZTLjg1KS5hc3B4XG4vLyAgICBodHRwOi8vc3RldmVzb3VkZXJzLmNvbS9taXNjL3Rlc3QtcG9zdG1lc3NhZ2UucGhwXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCB2ZXJzaW9uID0gcmVxdWlyZSgnLi4vdmVyc2lvbicpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91cmwnKVxuICAsIGlmcmFtZVV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvaWZyYW1lJylcbiAgLCBldmVudFV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvZXZlbnQnKVxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4uL3V0aWxzL3JhbmRvbScpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp0cmFuc3BvcnQ6aWZyYW1lJyk7XG59XG5cbmZ1bmN0aW9uIElmcmFtZVRyYW5zcG9ydCh0cmFuc3BvcnQsIHRyYW5zVXJsLCBiYXNlVXJsKSB7XG4gIGlmICghSWZyYW1lVHJhbnNwb3J0LmVuYWJsZWQoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy5vcmlnaW4gPSB1cmxVdGlscy5nZXRPcmlnaW4oYmFzZVVybCk7XG4gIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw7XG4gIHRoaXMudHJhbnNVcmwgPSB0cmFuc1VybDtcbiAgdGhpcy50cmFuc3BvcnQgPSB0cmFuc3BvcnQ7XG4gIHRoaXMud2luZG93SWQgPSByYW5kb20uc3RyaW5nKDgpO1xuXG4gIHZhciBpZnJhbWVVcmwgPSB1cmxVdGlscy5hZGRQYXRoKGJhc2VVcmwsICcvaWZyYW1lLmh0bWwnKSArICcjJyArIHRoaXMud2luZG93SWQ7XG4gIGRlYnVnKHRyYW5zcG9ydCwgdHJhbnNVcmwsIGlmcmFtZVVybCk7XG5cbiAgdGhpcy5pZnJhbWVPYmogPSBpZnJhbWVVdGlscy5jcmVhdGVJZnJhbWUoaWZyYW1lVXJsLCBmdW5jdGlvbihyKSB7XG4gICAgZGVidWcoJ2VyciBjYWxsYmFjaycpO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCAxMDA2LCAnVW5hYmxlIHRvIGxvYWQgYW4gaWZyYW1lICgnICsgciArICcpJyk7XG4gICAgc2VsZi5jbG9zZSgpO1xuICB9KTtcblxuICB0aGlzLm9ubWVzc2FnZUNhbGxiYWNrID0gdGhpcy5fbWVzc2FnZS5iaW5kKHRoaXMpO1xuICBldmVudFV0aWxzLmF0dGFjaEV2ZW50KCdtZXNzYWdlJywgdGhpcy5vbm1lc3NhZ2VDYWxsYmFjayk7XG59XG5cbmluaGVyaXRzKElmcmFtZVRyYW5zcG9ydCwgRXZlbnRFbWl0dGVyKTtcblxuSWZyYW1lVHJhbnNwb3J0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgaWYgKHRoaXMuaWZyYW1lT2JqKSB7XG4gICAgZXZlbnRVdGlscy5kZXRhY2hFdmVudCgnbWVzc2FnZScsIHRoaXMub25tZXNzYWdlQ2FsbGJhY2spO1xuICAgIHRyeSB7XG4gICAgICAvLyBXaGVuIHRoZSBpZnJhbWUgaXMgbm90IGxvYWRlZCwgSUUgcmFpc2VzIGFuIGV4Y2VwdGlvblxuICAgICAgLy8gb24gJ2NvbnRlbnRXaW5kb3cnLlxuICAgICAgdGhpcy5wb3N0TWVzc2FnZSgnYycpO1xuICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICB9XG4gICAgdGhpcy5pZnJhbWVPYmouY2xlYW51cCgpO1xuICAgIHRoaXMuaWZyYW1lT2JqID0gbnVsbDtcbiAgICB0aGlzLm9ubWVzc2FnZUNhbGxiYWNrID0gdGhpcy5pZnJhbWVPYmogPSBudWxsO1xuICB9XG59O1xuXG5JZnJhbWVUcmFuc3BvcnQucHJvdG90eXBlLl9tZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICBkZWJ1ZygnbWVzc2FnZScsIGUuZGF0YSk7XG4gIGlmICghdXJsVXRpbHMuaXNPcmlnaW5FcXVhbChlLm9yaWdpbiwgdGhpcy5vcmlnaW4pKSB7XG4gICAgZGVidWcoJ25vdCBzYW1lIG9yaWdpbicsIGUub3JpZ2luLCB0aGlzLm9yaWdpbik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGlmcmFtZU1lc3NhZ2U7XG4gIHRyeSB7XG4gICAgaWZyYW1lTWVzc2FnZSA9IEpTT04zLnBhcnNlKGUuZGF0YSk7XG4gIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICBkZWJ1ZygnYmFkIGpzb24nLCBlLmRhdGEpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpZnJhbWVNZXNzYWdlLndpbmRvd0lkICE9PSB0aGlzLndpbmRvd0lkKSB7XG4gICAgZGVidWcoJ21pc21hdGNoZWQgd2luZG93IGlkJywgaWZyYW1lTWVzc2FnZS53aW5kb3dJZCwgdGhpcy53aW5kb3dJZCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3dpdGNoIChpZnJhbWVNZXNzYWdlLnR5cGUpIHtcbiAgY2FzZSAncyc6XG4gICAgdGhpcy5pZnJhbWVPYmoubG9hZGVkKCk7XG4gICAgLy8gd2luZG93IGdsb2JhbCBkZXBlbmRlbmN5XG4gICAgdGhpcy5wb3N0TWVzc2FnZSgncycsIEpTT04zLnN0cmluZ2lmeShbXG4gICAgICB2ZXJzaW9uXG4gICAgLCB0aGlzLnRyYW5zcG9ydFxuICAgICwgdGhpcy50cmFuc1VybFxuICAgICwgdGhpcy5iYXNlVXJsXG4gICAgXSkpO1xuICAgIGJyZWFrO1xuICBjYXNlICd0JzpcbiAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgIGJyZWFrO1xuICBjYXNlICdjJzpcbiAgICB2YXIgY2RhdGE7XG4gICAgdHJ5IHtcbiAgICAgIGNkYXRhID0gSlNPTjMucGFyc2UoaWZyYW1lTWVzc2FnZS5kYXRhKTtcbiAgICB9IGNhdGNoIChpZ25vcmVkKSB7XG4gICAgICBkZWJ1ZygnYmFkIGpzb24nLCBpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgY2RhdGFbMF0sIGNkYXRhWzFdKTtcbiAgICB0aGlzLmNsb3NlKCk7XG4gICAgYnJlYWs7XG4gIH1cbn07XG5cbklmcmFtZVRyYW5zcG9ydC5wcm90b3R5cGUucG9zdE1lc3NhZ2UgPSBmdW5jdGlvbih0eXBlLCBkYXRhKSB7XG4gIGRlYnVnKCdwb3N0TWVzc2FnZScsIHR5cGUsIGRhdGEpO1xuICB0aGlzLmlmcmFtZU9iai5wb3N0KEpTT04zLnN0cmluZ2lmeSh7XG4gICAgd2luZG93SWQ6IHRoaXMud2luZG93SWRcbiAgLCB0eXBlOiB0eXBlXG4gICwgZGF0YTogZGF0YSB8fCAnJ1xuICB9KSwgdGhpcy5vcmlnaW4pO1xufTtcblxuSWZyYW1lVHJhbnNwb3J0LnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24obWVzc2FnZSkge1xuICBkZWJ1Zygnc2VuZCcsIG1lc3NhZ2UpO1xuICB0aGlzLnBvc3RNZXNzYWdlKCdtJywgbWVzc2FnZSk7XG59O1xuXG5JZnJhbWVUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gaWZyYW1lVXRpbHMuaWZyYW1lRW5hYmxlZDtcbn07XG5cbklmcmFtZVRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2lmcmFtZSc7XG5JZnJhbWVUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gSWZyYW1lVHJhbnNwb3J0O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiLi4vdXRpbHMvZXZlbnRcIjo0NixcIi4uL3V0aWxzL2lmcmFtZVwiOjQ3LFwiLi4vdXRpbHMvcmFuZG9tXCI6NTAsXCIuLi91dGlscy91cmxcIjo1MixcIi4uL3ZlcnNpb25cIjo1MyxcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1NyxcImpzb24zXCI6NTh9XSwyMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbi8vIFRoZSBzaW1wbGVzdCBhbmQgbW9zdCByb2J1c3QgdHJhbnNwb3J0LCB1c2luZyB0aGUgd2VsbC1rbm93IGNyb3NzXG4vLyBkb21haW4gaGFjayAtIEpTT05QLiBUaGlzIHRyYW5zcG9ydCBpcyBxdWl0ZSBpbmVmZmljaWVudCAtIG9uZVxuLy8gbWVzc2FnZSBjb3VsZCB1c2UgdXAgdG8gb25lIGh0dHAgcmVxdWVzdC4gQnV0IGF0IGxlYXN0IGl0IHdvcmtzIGFsbW9zdFxuLy8gZXZlcnl3aGVyZS5cbi8vIEtub3duIGxpbWl0YXRpb25zOlxuLy8gICBvIHlvdSB3aWxsIGdldCBhIHNwaW5uaW5nIGN1cnNvclxuLy8gICBvIGZvciBLb25xdWVyb3IgYSBkdW1iIHRpbWVyIGlzIG5lZWRlZCB0byBkZXRlY3QgZXJyb3JzXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBTZW5kZXJSZWNlaXZlciA9IHJlcXVpcmUoJy4vbGliL3NlbmRlci1yZWNlaXZlcicpXG4gICwgSnNvbnBSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIvanNvbnAnKVxuICAsIGpzb25wU2VuZGVyID0gcmVxdWlyZSgnLi9zZW5kZXIvanNvbnAnKVxuICA7XG5cbmZ1bmN0aW9uIEpzb25QVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghSnNvblBUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgU2VuZGVyUmVjZWl2ZXIuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy9qc29ucCcsIGpzb25wU2VuZGVyLCBKc29ucFJlY2VpdmVyKTtcbn1cblxuaW5oZXJpdHMoSnNvblBUcmFuc3BvcnQsIFNlbmRlclJlY2VpdmVyKTtcblxuSnNvblBUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gISFnbG9iYWwuZG9jdW1lbnQ7XG59O1xuXG5Kc29uUFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2pzb25wLXBvbGxpbmcnO1xuSnNvblBUcmFuc3BvcnQucm91bmRUcmlwcyA9IDE7XG5Kc29uUFRyYW5zcG9ydC5uZWVkQm9keSA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gSnNvblBUcmFuc3BvcnQ7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vbGliL3NlbmRlci1yZWNlaXZlclwiOjI4LFwiLi9yZWNlaXZlci9qc29ucFwiOjMxLFwiLi9zZW5kZXIvanNvbnBcIjozMyxcImluaGVyaXRzXCI6NTd9XSwyNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIFNlbmRlclJlY2VpdmVyID0gcmVxdWlyZSgnLi9zZW5kZXItcmVjZWl2ZXInKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6YWpheC1iYXNlZCcpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVBamF4U2VuZGVyKEFqYXhPYmplY3QpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHVybCwgcGF5bG9hZCwgY2FsbGJhY2spIHtcbiAgICBkZWJ1ZygnY3JlYXRlIGFqYXggc2VuZGVyJywgdXJsLCBwYXlsb2FkKTtcbiAgICB2YXIgb3B0ID0ge307XG4gICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgb3B0LmhlYWRlcnMgPSB7J0NvbnRlbnQtdHlwZSc6ICd0ZXh0L3BsYWluJ307XG4gICAgfVxuICAgIHZhciBhamF4VXJsID0gdXJsVXRpbHMuYWRkUGF0aCh1cmwsICcveGhyX3NlbmQnKTtcbiAgICB2YXIgeG8gPSBuZXcgQWpheE9iamVjdCgnUE9TVCcsIGFqYXhVcmwsIHBheWxvYWQsIG9wdCk7XG4gICAgeG8ub25jZSgnZmluaXNoJywgZnVuY3Rpb24oc3RhdHVzKSB7XG4gICAgICBkZWJ1ZygnZmluaXNoJywgc3RhdHVzKTtcbiAgICAgIHhvID0gbnVsbDtcblxuICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwICYmIHN0YXR1cyAhPT0gMjA0KSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoJ2h0dHAgc3RhdHVzICcgKyBzdGF0dXMpKTtcbiAgICAgIH1cbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ2Fib3J0Jyk7XG4gICAgICB4by5jbG9zZSgpO1xuICAgICAgeG8gPSBudWxsO1xuXG4gICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdBYm9ydGVkJyk7XG4gICAgICBlcnIuY29kZSA9IDEwMDA7XG4gICAgICBjYWxsYmFjayhlcnIpO1xuICAgIH07XG4gIH07XG59XG5cbmZ1bmN0aW9uIEFqYXhCYXNlZFRyYW5zcG9ydCh0cmFuc1VybCwgdXJsU3VmZml4LCBSZWNlaXZlciwgQWpheE9iamVjdCkge1xuICBTZW5kZXJSZWNlaXZlci5jYWxsKHRoaXMsIHRyYW5zVXJsLCB1cmxTdWZmaXgsIGNyZWF0ZUFqYXhTZW5kZXIoQWpheE9iamVjdCksIFJlY2VpdmVyLCBBamF4T2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoQWpheEJhc2VkVHJhbnNwb3J0LCBTZW5kZXJSZWNlaXZlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gQWpheEJhc2VkVHJhbnNwb3J0O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiLi4vLi4vdXRpbHMvdXJsXCI6NTIsXCIuL3NlbmRlci1yZWNlaXZlclwiOjI4LFwiZGVidWdcIjo1NSxcImluaGVyaXRzXCI6NTd9XSwyNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpidWZmZXJlZC1zZW5kZXInKTtcbn1cblxuZnVuY3Rpb24gQnVmZmVyZWRTZW5kZXIodXJsLCBzZW5kZXIpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIHRoaXMuc2VuZEJ1ZmZlciA9IFtdO1xuICB0aGlzLnNlbmRlciA9IHNlbmRlcjtcbiAgdGhpcy51cmwgPSB1cmw7XG59XG5cbmluaGVyaXRzKEJ1ZmZlcmVkU2VuZGVyLCBFdmVudEVtaXR0ZXIpO1xuXG5CdWZmZXJlZFNlbmRlci5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgZGVidWcoJ3NlbmQnLCBtZXNzYWdlKTtcbiAgdGhpcy5zZW5kQnVmZmVyLnB1c2gobWVzc2FnZSk7XG4gIGlmICghdGhpcy5zZW5kU3RvcCkge1xuICAgIHRoaXMuc2VuZFNjaGVkdWxlKCk7XG4gIH1cbn07XG5cbi8vIEZvciBwb2xsaW5nIHRyYW5zcG9ydHMgaW4gYSBzaXR1YXRpb24gd2hlbiBpbiB0aGUgbWVzc2FnZSBjYWxsYmFjayxcbi8vIG5ldyBtZXNzYWdlIGlzIGJlaW5nIHNlbmQuIElmIHRoZSBzZW5kaW5nIGNvbm5lY3Rpb24gd2FzIHN0YXJ0ZWRcbi8vIGJlZm9yZSByZWNlaXZpbmcgb25lLCBpdCBpcyBwb3NzaWJsZSB0byBzYXR1cmF0ZSB0aGUgbmV0d29yayBhbmRcbi8vIHRpbWVvdXQgZHVlIHRvIHRoZSBsYWNrIG9mIHJlY2VpdmluZyBzb2NrZXQuIFRvIGF2b2lkIHRoYXQgd2UgZGVsYXlcbi8vIHNlbmRpbmcgbWVzc2FnZXMgYnkgc29tZSBzbWFsbCB0aW1lLCBpbiBvcmRlciB0byBsZXQgcmVjZWl2aW5nXG4vLyBjb25uZWN0aW9uIGJlIHN0YXJ0ZWQgYmVmb3JlaGFuZC4gVGhpcyBpcyBvbmx5IGEgaGFsZm1lYXN1cmUgYW5kXG4vLyBkb2VzIG5vdCBmaXggdGhlIGJpZyBwcm9ibGVtLCBidXQgaXQgZG9lcyBtYWtlIHRoZSB0ZXN0cyBnbyBtb3JlXG4vLyBzdGFibGUgb24gc2xvdyBuZXR3b3Jrcy5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5zZW5kU2NoZWR1bGVXYWl0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdzZW5kU2NoZWR1bGVXYWl0Jyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHRyZWY7XG4gIHRoaXMuc2VuZFN0b3AgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnc2VuZFN0b3AnKTtcbiAgICBzZWxmLnNlbmRTdG9wID0gbnVsbDtcbiAgICBjbGVhclRpbWVvdXQodHJlZik7XG4gIH07XG4gIHRyZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd0aW1lb3V0Jyk7XG4gICAgc2VsZi5zZW5kU3RvcCA9IG51bGw7XG4gICAgc2VsZi5zZW5kU2NoZWR1bGUoKTtcbiAgfSwgMjUpO1xufTtcblxuQnVmZmVyZWRTZW5kZXIucHJvdG90eXBlLnNlbmRTY2hlZHVsZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1Zygnc2VuZFNjaGVkdWxlJywgdGhpcy5zZW5kQnVmZmVyLmxlbmd0aCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKHRoaXMuc2VuZEJ1ZmZlci5sZW5ndGggPiAwKSB7XG4gICAgdmFyIHBheWxvYWQgPSAnWycgKyB0aGlzLnNlbmRCdWZmZXIuam9pbignLCcpICsgJ10nO1xuICAgIHRoaXMuc2VuZFN0b3AgPSB0aGlzLnNlbmRlcih0aGlzLnVybCwgcGF5bG9hZCwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICBzZWxmLnNlbmRTdG9wID0gbnVsbDtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgZGVidWcoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgc2VsZi5lbWl0KCdjbG9zZScsIGVyci5jb2RlIHx8IDEwMDYsICdTZW5kaW5nIGVycm9yOiAnICsgZXJyKTtcbiAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZi5zZW5kU2NoZWR1bGVXYWl0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5zZW5kQnVmZmVyID0gW107XG4gIH1cbn07XG5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuICBpZiAodGhpcy5zZW5kU3RvcCkge1xuICAgIHRoaXMuc2VuZFN0b3AoKTtcbiAgICB0aGlzLnNlbmRTdG9wID0gbnVsbDtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBCdWZmZXJlZFNlbmRlcjtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9KVxuXG59LHtcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1N31dLDI2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAoZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIElmcmFtZVRyYW5zcG9ydCA9IHJlcXVpcmUoJy4uL2lmcmFtZScpXG4gICwgb2JqZWN0VXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy9vYmplY3QnKVxuICA7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odHJhbnNwb3J0KSB7XG5cbiAgZnVuY3Rpb24gSWZyYW1lV3JhcFRyYW5zcG9ydCh0cmFuc1VybCwgYmFzZVVybCkge1xuICAgIElmcmFtZVRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zcG9ydC50cmFuc3BvcnROYW1lLCB0cmFuc1VybCwgYmFzZVVybCk7XG4gIH1cblxuICBpbmhlcml0cyhJZnJhbWVXcmFwVHJhbnNwb3J0LCBJZnJhbWVUcmFuc3BvcnQpO1xuXG4gIElmcmFtZVdyYXBUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKHVybCwgaW5mbykge1xuICAgIGlmICghZ2xvYmFsLmRvY3VtZW50KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGlmcmFtZUluZm8gPSBvYmplY3RVdGlscy5leHRlbmQoe30sIGluZm8pO1xuICAgIGlmcmFtZUluZm8uc2FtZU9yaWdpbiA9IHRydWU7XG4gICAgcmV0dXJuIHRyYW5zcG9ydC5lbmFibGVkKGlmcmFtZUluZm8pICYmIElmcmFtZVRyYW5zcG9ydC5lbmFibGVkKCk7XG4gIH07XG5cbiAgSWZyYW1lV3JhcFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2lmcmFtZS0nICsgdHJhbnNwb3J0LnRyYW5zcG9ydE5hbWU7XG4gIElmcmFtZVdyYXBUcmFuc3BvcnQubmVlZEJvZHkgPSB0cnVlO1xuICBJZnJhbWVXcmFwVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSBJZnJhbWVUcmFuc3BvcnQucm91bmRUcmlwcyArIHRyYW5zcG9ydC5yb3VuZFRyaXBzIC0gMTsgLy8gaHRtbCwgamF2YXNjcmlwdCAoMikgKyB0cmFuc3BvcnQgLSBubyBDT1JTICgxKVxuXG4gIElmcmFtZVdyYXBUcmFuc3BvcnQuZmFjYWRlVHJhbnNwb3J0ID0gdHJhbnNwb3J0O1xuXG4gIHJldHVybiBJZnJhbWVXcmFwVHJhbnNwb3J0O1xufTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvb2JqZWN0XCI6NDksXCIuLi9pZnJhbWVcIjoyMixcImluaGVyaXRzXCI6NTd9XSwyNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpwb2xsaW5nJyk7XG59XG5cbmZ1bmN0aW9uIFBvbGxpbmcoUmVjZWl2ZXIsIHJlY2VpdmVVcmwsIEFqYXhPYmplY3QpIHtcbiAgZGVidWcocmVjZWl2ZVVybCk7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuICB0aGlzLlJlY2VpdmVyID0gUmVjZWl2ZXI7XG4gIHRoaXMucmVjZWl2ZVVybCA9IHJlY2VpdmVVcmw7XG4gIHRoaXMuQWpheE9iamVjdCA9IEFqYXhPYmplY3Q7XG4gIHRoaXMuX3NjaGVkdWxlUmVjZWl2ZXIoKTtcbn1cblxuaW5oZXJpdHMoUG9sbGluZywgRXZlbnRFbWl0dGVyKTtcblxuUG9sbGluZy5wcm90b3R5cGUuX3NjaGVkdWxlUmVjZWl2ZXIgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ19zY2hlZHVsZVJlY2VpdmVyJyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHBvbGwgPSB0aGlzLnBvbGwgPSBuZXcgdGhpcy5SZWNlaXZlcih0aGlzLnJlY2VpdmVVcmwsIHRoaXMuQWpheE9iamVjdCk7XG5cbiAgcG9sbC5vbignbWVzc2FnZScsIGZ1bmN0aW9uKG1zZykge1xuICAgIGRlYnVnKCdtZXNzYWdlJywgbXNnKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICB9KTtcblxuICBwb2xsLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gICAgZGVidWcoJ2Nsb3NlJywgY29kZSwgcmVhc29uLCBzZWxmLnBvbGxJc0Nsb3NpbmcpO1xuICAgIHNlbGYucG9sbCA9IHBvbGwgPSBudWxsO1xuXG4gICAgaWYgKCFzZWxmLnBvbGxJc0Nsb3NpbmcpIHtcbiAgICAgIGlmIChyZWFzb24gPT09ICduZXR3b3JrJykge1xuICAgICAgICBzZWxmLl9zY2hlZHVsZVJlY2VpdmVyKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxmLmVtaXQoJ2Nsb3NlJywgY29kZSB8fCAxMDA2LCByZWFzb24pO1xuICAgICAgICBzZWxmLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuXG5Qb2xsaW5nLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnYWJvcnQnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgdGhpcy5wb2xsSXNDbG9zaW5nID0gdHJ1ZTtcbiAgaWYgKHRoaXMucG9sbCkge1xuICAgIHRoaXMucG9sbC5hYm9ydCgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBvbGxpbmc7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTd9XSwyODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIEJ1ZmZlcmVkU2VuZGVyID0gcmVxdWlyZSgnLi9idWZmZXJlZC1zZW5kZXInKVxuICAsIFBvbGxpbmcgPSByZXF1aXJlKCcuL3BvbGxpbmcnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6c2VuZGVyLXJlY2VpdmVyJyk7XG59XG5cbmZ1bmN0aW9uIFNlbmRlclJlY2VpdmVyKHRyYW5zVXJsLCB1cmxTdWZmaXgsIHNlbmRlckZ1bmMsIFJlY2VpdmVyLCBBamF4T2JqZWN0KSB7XG4gIHZhciBwb2xsVXJsID0gdXJsVXRpbHMuYWRkUGF0aCh0cmFuc1VybCwgdXJsU3VmZml4KTtcbiAgZGVidWcocG9sbFVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgQnVmZmVyZWRTZW5kZXIuY2FsbCh0aGlzLCB0cmFuc1VybCwgc2VuZGVyRnVuYyk7XG5cbiAgdGhpcy5wb2xsID0gbmV3IFBvbGxpbmcoUmVjZWl2ZXIsIHBvbGxVcmwsIEFqYXhPYmplY3QpO1xuICB0aGlzLnBvbGwub24oJ21lc3NhZ2UnLCBmdW5jdGlvbihtc2cpIHtcbiAgICBkZWJ1ZygncG9sbCBtZXNzYWdlJywgbXNnKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICB9KTtcbiAgdGhpcy5wb2xsLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gICAgZGVidWcoJ3BvbGwgY2xvc2UnLCBjb2RlLCByZWFzb24pO1xuICAgIHNlbGYucG9sbCA9IG51bGw7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIGNvZGUsIHJlYXNvbik7XG4gICAgc2VsZi5jbG9zZSgpO1xuICB9KTtcbn1cblxuaW5oZXJpdHMoU2VuZGVyUmVjZWl2ZXIsIEJ1ZmZlcmVkU2VuZGVyKTtcblxuU2VuZGVyUmVjZWl2ZXIucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIEJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5jbG9zZS5jYWxsKHRoaXMpO1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgaWYgKHRoaXMucG9sbCkge1xuICAgIHRoaXMucG9sbC5hYm9ydCgpO1xuICAgIHRoaXMucG9sbCA9IG51bGw7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU2VuZGVyUmVjZWl2ZXI7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCIuLi8uLi91dGlscy91cmxcIjo1MixcIi4vYnVmZmVyZWQtc2VuZGVyXCI6MjUsXCIuL3BvbGxpbmdcIjoyNyxcImRlYnVnXCI6NTUsXCJpbmhlcml0c1wiOjU3fV0sMjk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIEV2ZW50U291cmNlRHJpdmVyID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6cmVjZWl2ZXI6ZXZlbnRzb3VyY2UnKTtcbn1cblxuZnVuY3Rpb24gRXZlbnRTb3VyY2VSZWNlaXZlcih1cmwpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgZXMgPSB0aGlzLmVzID0gbmV3IEV2ZW50U291cmNlRHJpdmVyKHVybCk7XG4gIGVzLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICBkZWJ1ZygnbWVzc2FnZScsIGUuZGF0YSk7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgZGVjb2RlVVJJKGUuZGF0YSkpO1xuICB9O1xuICBlcy5vbmVycm9yID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdlcnJvcicsIGVzLnJlYWR5U3RhdGUsIGUpO1xuICAgIC8vIEVTIG9uIHJlY29ubmVjdGlvbiBoYXMgcmVhZHlTdGF0ZSA9IDAgb3IgMS5cbiAgICAvLyBvbiBuZXR3b3JrIGVycm9yIGl0J3MgQ0xPU0VEID0gMlxuICAgIHZhciByZWFzb24gPSAoZXMucmVhZHlTdGF0ZSAhPT0gMiA/ICduZXR3b3JrJyA6ICdwZXJtYW5lbnQnKTtcbiAgICBzZWxmLl9jbGVhbnVwKCk7XG4gICAgc2VsZi5fY2xvc2UocmVhc29uKTtcbiAgfTtcbn1cblxuaW5oZXJpdHMoRXZlbnRTb3VyY2VSZWNlaXZlciwgRXZlbnRFbWl0dGVyKTtcblxuRXZlbnRTb3VyY2VSZWNlaXZlci5wcm90b3R5cGUuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Fib3J0Jyk7XG4gIHRoaXMuX2NsZWFudXAoKTtcbiAgdGhpcy5fY2xvc2UoJ3VzZXInKTtcbn07XG5cbkV2ZW50U291cmNlUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbGVhbnVwJyk7XG4gIHZhciBlcyA9IHRoaXMuZXM7XG4gIGlmIChlcykge1xuICAgIGVzLm9ubWVzc2FnZSA9IGVzLm9uZXJyb3IgPSBudWxsO1xuICAgIGVzLmNsb3NlKCk7XG4gICAgdGhpcy5lcyA9IG51bGw7XG4gIH1cbn07XG5cbkV2ZW50U291cmNlUmVjZWl2ZXIucHJvdG90eXBlLl9jbG9zZSA9IGZ1bmN0aW9uKHJlYXNvbikge1xuICBkZWJ1ZygnY2xvc2UnLCByZWFzb24pO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIC8vIFNhZmFyaSBhbmQgY2hyb21lIDwgMTUgY3Jhc2ggaWYgd2UgY2xvc2Ugd2luZG93IGJlZm9yZVxuICAvLyB3YWl0aW5nIGZvciBFUyBjbGVhbnVwLiBTZWU6XG4gIC8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD04OTE1NVxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBudWxsLCByZWFzb24pO1xuICAgIHNlbGYucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIH0sIDIwMCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50U291cmNlUmVjZWl2ZXI7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImV2ZW50c291cmNlXCI6MTgsXCJpbmhlcml0c1wiOjU3fV0sMzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBpZnJhbWVVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2lmcmFtZScpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3JhbmRvbScpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpyZWNlaXZlcjpodG1sZmlsZScpO1xufVxuXG5mdW5jdGlvbiBIdG1sZmlsZVJlY2VpdmVyKHVybCkge1xuICBkZWJ1Zyh1cmwpO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBpZnJhbWVVdGlscy5wb2xsdXRlR2xvYmFsTmFtZXNwYWNlKCk7XG5cbiAgdGhpcy5pZCA9ICdhJyArIHJhbmRvbS5zdHJpbmcoNik7XG4gIHVybCA9IHVybFV0aWxzLmFkZFF1ZXJ5KHVybCwgJ2M9JyArIGRlY29kZVVSSUNvbXBvbmVudChpZnJhbWVVdGlscy5XUHJlZml4ICsgJy4nICsgdGhpcy5pZCkpO1xuXG4gIGRlYnVnKCd1c2luZyBodG1sZmlsZScsIEh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkKTtcbiAgdmFyIGNvbnN0cnVjdEZ1bmMgPSBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCA/XG4gICAgICBpZnJhbWVVdGlscy5jcmVhdGVIdG1sZmlsZSA6IGlmcmFtZVV0aWxzLmNyZWF0ZUlmcmFtZTtcblxuICBnbG9iYWxbaWZyYW1lVXRpbHMuV1ByZWZpeF1bdGhpcy5pZF0gPSB7XG4gICAgc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ3N0YXJ0Jyk7XG4gICAgICBzZWxmLmlmcmFtZU9iai5sb2FkZWQoKTtcbiAgICB9XG4gICwgbWVzc2FnZTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgZGVidWcoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgICAgIHNlbGYuZW1pdCgnbWVzc2FnZScsIGRhdGEpO1xuICAgIH1cbiAgLCBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCdzdG9wJyk7XG4gICAgICBzZWxmLl9jbGVhbnVwKCk7XG4gICAgICBzZWxmLl9jbG9zZSgnbmV0d29yaycpO1xuICAgIH1cbiAgfTtcbiAgdGhpcy5pZnJhbWVPYmogPSBjb25zdHJ1Y3RGdW5jKHVybCwgZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ2NhbGxiYWNrJyk7XG4gICAgc2VsZi5fY2xlYW51cCgpO1xuICAgIHNlbGYuX2Nsb3NlKCdwZXJtYW5lbnQnKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKEh0bWxmaWxlUmVjZWl2ZXIsIEV2ZW50RW1pdHRlcik7XG5cbkh0bWxmaWxlUmVjZWl2ZXIucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdhYm9ydCcpO1xuICB0aGlzLl9jbGVhbnVwKCk7XG4gIHRoaXMuX2Nsb3NlKCd1c2VyJyk7XG59O1xuXG5IdG1sZmlsZVJlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgaWYgKHRoaXMuaWZyYW1lT2JqKSB7XG4gICAgdGhpcy5pZnJhbWVPYmouY2xlYW51cCgpO1xuICAgIHRoaXMuaWZyYW1lT2JqID0gbnVsbDtcbiAgfVxuICBkZWxldGUgZ2xvYmFsW2lmcmFtZVV0aWxzLldQcmVmaXhdW3RoaXMuaWRdO1xufTtcblxuSHRtbGZpbGVSZWNlaXZlci5wcm90b3R5cGUuX2Nsb3NlID0gZnVuY3Rpb24ocmVhc29uKSB7XG4gIGRlYnVnKCdfY2xvc2UnLCByZWFzb24pO1xuICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgcmVhc29uKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkID0gZmFsc2U7XG5cbi8vIG9iZnVzY2F0ZSB0byBhdm9pZCBmaXJld2FsbHNcbnZhciBheG8gPSBbJ0FjdGl2ZSddLmNvbmNhdCgnT2JqZWN0Jykuam9pbignWCcpO1xuaWYgKGF4byBpbiBnbG9iYWwpIHtcbiAgdHJ5IHtcbiAgICBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCA9ICEhbmV3IGdsb2JhbFtheG9dKCdodG1sZmlsZScpO1xuICB9IGNhdGNoICh4KSB7XG4gICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICB9XG59XG5cbkh0bWxmaWxlUmVjZWl2ZXIuZW5hYmxlZCA9IEh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkIHx8IGlmcmFtZVV0aWxzLmlmcmFtZUVuYWJsZWQ7XG5cbm1vZHVsZS5leHBvcnRzID0gSHRtbGZpbGVSZWNlaXZlcjtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvaWZyYW1lXCI6NDcsXCIuLi8uLi91dGlscy9yYW5kb21cIjo1MCxcIi4uLy4uL3V0aWxzL3VybFwiOjUyLFwiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2lmcmFtZScpXG4gICwgcmFuZG9tID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvcmFuZG9tJylcbiAgLCBicm93c2VyID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvYnJvd3NlcicpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6cmVjZWl2ZXI6anNvbnAnKTtcbn1cblxuZnVuY3Rpb24gSnNvbnBSZWNlaXZlcih1cmwpIHtcbiAgZGVidWcodXJsKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB1dGlscy5wb2xsdXRlR2xvYmFsTmFtZXNwYWNlKCk7XG5cbiAgdGhpcy5pZCA9ICdhJyArIHJhbmRvbS5zdHJpbmcoNik7XG4gIHZhciB1cmxXaXRoSWQgPSB1cmxVdGlscy5hZGRRdWVyeSh1cmwsICdjPScgKyBlbmNvZGVVUklDb21wb25lbnQodXRpbHMuV1ByZWZpeCArICcuJyArIHRoaXMuaWQpKTtcblxuICBnbG9iYWxbdXRpbHMuV1ByZWZpeF1bdGhpcy5pZF0gPSB0aGlzLl9jYWxsYmFjay5iaW5kKHRoaXMpO1xuICB0aGlzLl9jcmVhdGVTY3JpcHQodXJsV2l0aElkKTtcblxuICAvLyBGYWxsYmFjayBtb3N0bHkgZm9yIEtvbnF1ZXJvciAtIHN0dXBpZCB0aW1lciwgMzUgc2Vjb25kcyBzaGFsbCBiZSBwbGVudHkuXG4gIHRoaXMudGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygndGltZW91dCcpO1xuICAgIHNlbGYuX2Fib3J0KG5ldyBFcnJvcignSlNPTlAgc2NyaXB0IGxvYWRlZCBhYm5vcm1hbGx5ICh0aW1lb3V0KScpKTtcbiAgfSwgSnNvbnBSZWNlaXZlci50aW1lb3V0KTtcbn1cblxuaW5oZXJpdHMoSnNvbnBSZWNlaXZlciwgRXZlbnRFbWl0dGVyKTtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Fib3J0Jyk7XG4gIGlmIChnbG9iYWxbdXRpbHMuV1ByZWZpeF1bdGhpcy5pZF0pIHtcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdKU09OUCB1c2VyIGFib3J0ZWQgcmVhZCcpO1xuICAgIGVyci5jb2RlID0gMTAwMDtcbiAgICB0aGlzLl9hYm9ydChlcnIpO1xuICB9XG59O1xuXG5Kc29ucFJlY2VpdmVyLnRpbWVvdXQgPSAzNTAwMDtcbkpzb25wUmVjZWl2ZXIuc2NyaXB0RXJyb3JUaW1lb3V0ID0gMTAwMDtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuX2NhbGxiYWNrID0gZnVuY3Rpb24oZGF0YSkge1xuICBkZWJ1ZygnX2NhbGxiYWNrJywgZGF0YSk7XG4gIHRoaXMuX2NsZWFudXAoKTtcblxuICBpZiAodGhpcy5hYm9ydGluZykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChkYXRhKSB7XG4gICAgZGVidWcoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgfVxuICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgJ25ldHdvcmsnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkpzb25wUmVjZWl2ZXIucHJvdG90eXBlLl9hYm9ydCA9IGZ1bmN0aW9uKGVycikge1xuICBkZWJ1ZygnX2Fib3J0JywgZXJyKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuICB0aGlzLmFib3J0aW5nID0gdHJ1ZTtcbiAgdGhpcy5lbWl0KCdjbG9zZScsIGVyci5jb2RlLCBlcnIubWVzc2FnZSk7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG59O1xuXG5Kc29ucFJlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkKTtcbiAgaWYgKHRoaXMuc2NyaXB0Mikge1xuICAgIHRoaXMuc2NyaXB0Mi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuc2NyaXB0Mik7XG4gICAgdGhpcy5zY3JpcHQyID0gbnVsbDtcbiAgfVxuICBpZiAodGhpcy5zY3JpcHQpIHtcbiAgICB2YXIgc2NyaXB0ID0gdGhpcy5zY3JpcHQ7XG4gICAgLy8gVW5mb3J0dW5hdGVseSwgeW91IGNhbid0IHJlYWxseSBhYm9ydCBzY3JpcHQgbG9hZGluZyBvZlxuICAgIC8vIHRoZSBzY3JpcHQuXG4gICAgc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gc2NyaXB0Lm9uZXJyb3IgPVxuICAgICAgICBzY3JpcHQub25sb2FkID0gc2NyaXB0Lm9uY2xpY2sgPSBudWxsO1xuICAgIHRoaXMuc2NyaXB0ID0gbnVsbDtcbiAgfVxuICBkZWxldGUgZ2xvYmFsW3V0aWxzLldQcmVmaXhdW3RoaXMuaWRdO1xufTtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuX3NjcmlwdEVycm9yID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfc2NyaXB0RXJyb3InKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBpZiAodGhpcy5lcnJvclRpbWVyKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5lcnJvclRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBpZiAoIXNlbGYubG9hZGVkT2theSkge1xuICAgICAgc2VsZi5fYWJvcnQobmV3IEVycm9yKCdKU09OUCBzY3JpcHQgbG9hZGVkIGFibm9ybWFsbHkgKG9uZXJyb3IpJykpO1xuICAgIH1cbiAgfSwgSnNvbnBSZWNlaXZlci5zY3JpcHRFcnJvclRpbWVvdXQpO1xufTtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuX2NyZWF0ZVNjcmlwdCA9IGZ1bmN0aW9uKHVybCkge1xuICBkZWJ1ZygnX2NyZWF0ZVNjcmlwdCcsIHVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHNjcmlwdCA9IHRoaXMuc2NyaXB0ID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICB2YXIgc2NyaXB0MjsgIC8vIE9wZXJhIHN5bmNocm9ub3VzIGxvYWQgdHJpY2suXG5cbiAgc2NyaXB0LmlkID0gJ2EnICsgcmFuZG9tLnN0cmluZyg4KTtcbiAgc2NyaXB0LnNyYyA9IHVybDtcbiAgc2NyaXB0LnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JztcbiAgc2NyaXB0LmNoYXJzZXQgPSAnVVRGLTgnO1xuICBzY3JpcHQub25lcnJvciA9IHRoaXMuX3NjcmlwdEVycm9yLmJpbmQodGhpcyk7XG4gIHNjcmlwdC5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb25sb2FkJyk7XG4gICAgc2VsZi5fYWJvcnQobmV3IEVycm9yKCdKU09OUCBzY3JpcHQgbG9hZGVkIGFibm9ybWFsbHkgKG9ubG9hZCknKSk7XG4gIH07XG5cbiAgLy8gSUU5IGZpcmVzICdlcnJvcicgZXZlbnQgYWZ0ZXIgb25yZWFkeXN0YXRlY2hhbmdlIG9yIGJlZm9yZSwgaW4gcmFuZG9tIG9yZGVyLlxuICAvLyBVc2UgbG9hZGVkT2theSB0byBkZXRlcm1pbmUgaWYgYWN0dWFsbHkgZXJyb3JlZFxuICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ29ucmVhZHlzdGF0ZWNoYW5nZScsIHNjcmlwdC5yZWFkeVN0YXRlKTtcbiAgICBpZiAoL2xvYWRlZHxjbG9zZWQvLnRlc3Qoc2NyaXB0LnJlYWR5U3RhdGUpKSB7XG4gICAgICBpZiAoc2NyaXB0ICYmIHNjcmlwdC5odG1sRm9yICYmIHNjcmlwdC5vbmNsaWNrKSB7XG4gICAgICAgIHNlbGYubG9hZGVkT2theSA9IHRydWU7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gSW4gSUUsIGFjdHVhbGx5IGV4ZWN1dGUgdGhlIHNjcmlwdC5cbiAgICAgICAgICBzY3JpcHQub25jbGljaygpO1xuICAgICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc2NyaXB0KSB7XG4gICAgICAgIHNlbGYuX2Fib3J0KG5ldyBFcnJvcignSlNPTlAgc2NyaXB0IGxvYWRlZCBhYm5vcm1hbGx5IChvbnJlYWR5c3RhdGVjaGFuZ2UpJykpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgLy8gSUU6IGV2ZW50L2h0bWxGb3Ivb25jbGljayB0cmljay5cbiAgLy8gT25lIGNhbid0IHJlbHkgb24gcHJvcGVyIG9yZGVyIGZvciBvbnJlYWR5c3RhdGVjaGFuZ2UuIEluIG9yZGVyIHRvXG4gIC8vIG1ha2Ugc3VyZSwgc2V0IGEgJ2h0bWxGb3InIGFuZCAnZXZlbnQnIHByb3BlcnRpZXMsIHNvIHRoYXRcbiAgLy8gc2NyaXB0IGNvZGUgd2lsbCBiZSBpbnN0YWxsZWQgYXMgJ29uY2xpY2snIGhhbmRsZXIgZm9yIHRoZVxuICAvLyBzY3JpcHQgb2JqZWN0LiBMYXRlciwgb25yZWFkeXN0YXRlY2hhbmdlLCBtYW51YWxseSBleGVjdXRlIHRoaXNcbiAgLy8gY29kZS4gRkYgYW5kIENocm9tZSBkb2Vzbid0IHdvcmsgd2l0aCAnZXZlbnQnIGFuZCAnaHRtbEZvcidcbiAgLy8gc2V0LiBGb3IgcmVmZXJlbmNlIHNlZTpcbiAgLy8gICBodHRwOi8vamF1Ym91cmcubmV0LzIwMTAvMDcvbG9hZGluZy1zY3JpcHQtYXMtb25jbGljay1oYW5kbGVyLW9mLmh0bWxcbiAgLy8gQWxzbywgcmVhZCBvbiB0aGF0IGFib3V0IHNjcmlwdCBvcmRlcmluZzpcbiAgLy8gICBodHRwOi8vd2lraS53aGF0d2cub3JnL3dpa2kvRHluYW1pY19TY3JpcHRfRXhlY3V0aW9uX09yZGVyXG4gIGlmICh0eXBlb2Ygc2NyaXB0LmFzeW5jID09PSAndW5kZWZpbmVkJyAmJiBnbG9iYWwuZG9jdW1lbnQuYXR0YWNoRXZlbnQpIHtcbiAgICAvLyBBY2NvcmRpbmcgdG8gbW96aWxsYSBkb2NzLCBpbiByZWNlbnQgYnJvd3NlcnMgc2NyaXB0LmFzeW5jIGRlZmF1bHRzXG4gICAgLy8gdG8gJ3RydWUnLCBzbyB3ZSBtYXkgdXNlIGl0IHRvIGRldGVjdCBhIGdvb2QgYnJvd3NlcjpcbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9IVE1ML0VsZW1lbnQvc2NyaXB0XG4gICAgaWYgKCFicm93c2VyLmlzT3BlcmEoKSkge1xuICAgICAgLy8gTmFpdmVseSBhc3N1bWUgd2UncmUgaW4gSUVcbiAgICAgIHRyeSB7XG4gICAgICAgIHNjcmlwdC5odG1sRm9yID0gc2NyaXB0LmlkO1xuICAgICAgICBzY3JpcHQuZXZlbnQgPSAnb25jbGljayc7XG4gICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICAgIH1cbiAgICAgIHNjcmlwdC5hc3luYyA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE9wZXJhLCBzZWNvbmQgc3luYyBzY3JpcHQgaGFja1xuICAgICAgc2NyaXB0MiA9IHRoaXMuc2NyaXB0MiA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgIHNjcmlwdDIudGV4dCA9IFwidHJ5e3ZhciBhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1wiICsgc2NyaXB0LmlkICsgXCInKTsgaWYoYSlhLm9uZXJyb3IoKTt9Y2F0Y2goeCl7fTtcIjtcbiAgICAgIHNjcmlwdC5hc3luYyA9IHNjcmlwdDIuYXN5bmMgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgaWYgKHR5cGVvZiBzY3JpcHQuYXN5bmMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcbiAgfVxuXG4gIHZhciBoZWFkID0gZ2xvYmFsLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XG4gIGhlYWQuaW5zZXJ0QmVmb3JlKHNjcmlwdCwgaGVhZC5maXJzdENoaWxkKTtcbiAgaWYgKHNjcmlwdDIpIHtcbiAgICBoZWFkLmluc2VydEJlZm9yZShzY3JpcHQyLCBoZWFkLmZpcnN0Q2hpbGQpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEpzb25wUmVjZWl2ZXI7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4uLy4uL3V0aWxzL2Jyb3dzZXJcIjo0NCxcIi4uLy4uL3V0aWxzL2lmcmFtZVwiOjQ3LFwiLi4vLi4vdXRpbHMvcmFuZG9tXCI6NTAsXCIuLi8uLi91dGlscy91cmxcIjo1MixcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1N31dLDMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnJlY2VpdmVyOnhocicpO1xufVxuXG5mdW5jdGlvbiBYaHJSZWNlaXZlcih1cmwsIEFqYXhPYmplY3QpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICB0aGlzLmJ1ZmZlclBvc2l0aW9uID0gMDtcblxuICB0aGlzLnhvID0gbmV3IEFqYXhPYmplY3QoJ1BPU1QnLCB1cmwsIG51bGwpO1xuICB0aGlzLnhvLm9uKCdjaHVuaycsIHRoaXMuX2NodW5rSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgdGhpcy54by5vbmNlKCdmaW5pc2gnLCBmdW5jdGlvbihzdGF0dXMsIHRleHQpIHtcbiAgICBkZWJ1ZygnZmluaXNoJywgc3RhdHVzLCB0ZXh0KTtcbiAgICBzZWxmLl9jaHVua0hhbmRsZXIoc3RhdHVzLCB0ZXh0KTtcbiAgICBzZWxmLnhvID0gbnVsbDtcbiAgICB2YXIgcmVhc29uID0gc3RhdHVzID09PSAyMDAgPyAnbmV0d29yaycgOiAncGVybWFuZW50JztcbiAgICBkZWJ1ZygnY2xvc2UnLCByZWFzb24pO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBudWxsLCByZWFzb24pO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKFhoclJlY2VpdmVyLCBFdmVudEVtaXR0ZXIpO1xuXG5YaHJSZWNlaXZlci5wcm90b3R5cGUuX2NodW5rSGFuZGxlciA9IGZ1bmN0aW9uKHN0YXR1cywgdGV4dCkge1xuICBkZWJ1ZygnX2NodW5rSGFuZGxlcicsIHN0YXR1cyk7XG4gIGlmIChzdGF0dXMgIT09IDIwMCB8fCAhdGV4dCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZvciAodmFyIGlkeCA9IC0xOyA7IHRoaXMuYnVmZmVyUG9zaXRpb24gKz0gaWR4ICsgMSkge1xuICAgIHZhciBidWYgPSB0ZXh0LnNsaWNlKHRoaXMuYnVmZmVyUG9zaXRpb24pO1xuICAgIGlkeCA9IGJ1Zi5pbmRleE9mKCdcXG4nKTtcbiAgICBpZiAoaWR4ID09PSAtMSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHZhciBtc2cgPSBidWYuc2xpY2UoMCwgaWR4KTtcbiAgICBpZiAobXNnKSB7XG4gICAgICBkZWJ1ZygnbWVzc2FnZScsIG1zZyk7XG4gICAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICAgIH1cbiAgfVxufTtcblxuWGhyUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxuWGhyUmVjZWl2ZXIucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdhYm9ydCcpO1xuICBpZiAodGhpcy54bykge1xuICAgIHRoaXMueG8uY2xvc2UoKTtcbiAgICBkZWJ1ZygnY2xvc2UnKTtcbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgJ3VzZXInKTtcbiAgICB0aGlzLnhvID0gbnVsbDtcbiAgfVxuICB0aGlzLl9jbGVhbnVwKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhoclJlY2VpdmVyO1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciByYW5kb20gPSByZXF1aXJlKCcuLi8uLi91dGlscy9yYW5kb20nKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnNlbmRlcjpqc29ucCcpO1xufVxuXG52YXIgZm9ybSwgYXJlYTtcblxuZnVuY3Rpb24gY3JlYXRlSWZyYW1lKGlkKSB7XG4gIGRlYnVnKCdjcmVhdGVJZnJhbWUnLCBpZCk7XG4gIHRyeSB7XG4gICAgLy8gaWU2IGR5bmFtaWMgaWZyYW1lcyB3aXRoIHRhcmdldD1cIlwiIHN1cHBvcnQgKHRoYW5rcyBDaHJpcyBMYW1iYWNoZXIpXG4gICAgcmV0dXJuIGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCc8aWZyYW1lIG5hbWU9XCInICsgaWQgKyAnXCI+Jyk7XG4gIH0gY2F0Y2ggKHgpIHtcbiAgICB2YXIgaWZyYW1lID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICAgIGlmcmFtZS5uYW1lID0gaWQ7XG4gICAgcmV0dXJuIGlmcmFtZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVGb3JtKCkge1xuICBkZWJ1ZygnY3JlYXRlRm9ybScpO1xuICBmb3JtID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgZm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBmb3JtLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgZm9ybS5tZXRob2QgPSAnUE9TVCc7XG4gIGZvcm0uZW5jdHlwZSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnO1xuICBmb3JtLmFjY2VwdENoYXJzZXQgPSAnVVRGLTgnO1xuXG4gIGFyZWEgPSBnbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgYXJlYS5uYW1lID0gJ2QnO1xuICBmb3JtLmFwcGVuZENoaWxkKGFyZWEpO1xuXG4gIGdsb2JhbC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGZvcm0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVybCwgcGF5bG9hZCwgY2FsbGJhY2spIHtcbiAgZGVidWcodXJsLCBwYXlsb2FkKTtcbiAgaWYgKCFmb3JtKSB7XG4gICAgY3JlYXRlRm9ybSgpO1xuICB9XG4gIHZhciBpZCA9ICdhJyArIHJhbmRvbS5zdHJpbmcoOCk7XG4gIGZvcm0udGFyZ2V0ID0gaWQ7XG4gIGZvcm0uYWN0aW9uID0gdXJsVXRpbHMuYWRkUXVlcnkodXJsVXRpbHMuYWRkUGF0aCh1cmwsICcvanNvbnBfc2VuZCcpLCAnaT0nICsgaWQpO1xuXG4gIHZhciBpZnJhbWUgPSBjcmVhdGVJZnJhbWUoaWQpO1xuICBpZnJhbWUuaWQgPSBpZDtcbiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIGZvcm0uYXBwZW5kQ2hpbGQoaWZyYW1lKTtcblxuICB0cnkge1xuICAgIGFyZWEudmFsdWUgPSBwYXlsb2FkO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gc2VyaW91c2x5IGJyb2tlbiBicm93c2VycyBnZXQgaGVyZVxuICB9XG4gIGZvcm0uc3VibWl0KCk7XG5cbiAgdmFyIGNvbXBsZXRlZCA9IGZ1bmN0aW9uKGVycikge1xuICAgIGRlYnVnKCdjb21wbGV0ZWQnLCBpZCwgZXJyKTtcbiAgICBpZiAoIWlmcmFtZS5vbmVycm9yKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmcmFtZS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBpZnJhbWUub25lcnJvciA9IGlmcmFtZS5vbmxvYWQgPSBudWxsO1xuICAgIC8vIE9wZXJhIG1pbmkgZG9lc24ndCBsaWtlIGlmIHdlIEdDIGlmcmFtZVxuICAgIC8vIGltbWVkaWF0ZWx5LCB0aHVzIHRoaXMgdGltZW91dC5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ2NsZWFuaW5nIHVwJywgaWQpO1xuICAgICAgaWZyYW1lLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICAgIGlmcmFtZSA9IG51bGw7XG4gICAgfSwgNTAwKTtcbiAgICBhcmVhLnZhbHVlID0gJyc7XG4gICAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGRldGVjdCBpZiB0aGUgaWZyYW1lIHN1Y2NlZWRlZCBvclxuICAgIC8vIGZhaWxlZCB0byBzdWJtaXQgb3VyIGZvcm0uXG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfTtcbiAgaWZyYW1lLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb25lcnJvcicsIGlkKTtcbiAgICBjb21wbGV0ZWQoKTtcbiAgfTtcbiAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbmxvYWQnLCBpZCk7XG4gICAgY29tcGxldGVkKCk7XG4gIH07XG4gIGlmcmFtZS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbihlKSB7XG4gICAgZGVidWcoJ29ucmVhZHlzdGF0ZWNoYW5nZScsIGlkLCBpZnJhbWUucmVhZHlTdGF0ZSwgZSk7XG4gICAgaWYgKGlmcmFtZS5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKSB7XG4gICAgICBjb21wbGV0ZWQoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygnYWJvcnRlZCcsIGlkKTtcbiAgICBjb21wbGV0ZWQobmV3IEVycm9yKCdBYm9ydGVkJykpO1xuICB9O1xufTtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvcmFuZG9tXCI6NTAsXCIuLi8uLi91dGlscy91cmxcIjo1MixcImRlYnVnXCI6NTV9XSwzNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3MsZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy9ldmVudCcpXG4gICwgYnJvd3NlciA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2Jyb3dzZXInKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnNlbmRlcjp4ZHInKTtcbn1cblxuLy8gUmVmZXJlbmNlczpcbi8vICAgaHR0cDovL2FqYXhpYW4uY29tL2FyY2hpdmVzLzEwMC1saW5lLWFqYXgtd3JhcHBlclxuLy8gICBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvY2MyODgwNjAodj1WUy44NSkuYXNweFxuXG5mdW5jdGlvbiBYRFJPYmplY3QobWV0aG9kLCB1cmwsIHBheWxvYWQpIHtcbiAgZGVidWcobWV0aG9kLCB1cmwpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgc2VsZi5fc3RhcnQobWV0aG9kLCB1cmwsIHBheWxvYWQpO1xuICB9LCAwKTtcbn1cblxuaW5oZXJpdHMoWERST2JqZWN0LCBFdmVudEVtaXR0ZXIpO1xuXG5YRFJPYmplY3QucHJvdG90eXBlLl9zdGFydCA9IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCBwYXlsb2FkKSB7XG4gIGRlYnVnKCdfc3RhcnQnKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgeGRyID0gbmV3IGdsb2JhbC5YRG9tYWluUmVxdWVzdCgpO1xuICAvLyBJRSBjYWNoZXMgZXZlbiBQT1NUc1xuICB1cmwgPSB1cmxVdGlscy5hZGRRdWVyeSh1cmwsICd0PScgKyAoK25ldyBEYXRlKCkpKTtcblxuICB4ZHIub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbmVycm9yJyk7XG4gICAgc2VsZi5fZXJyb3IoKTtcbiAgfTtcbiAgeGRyLm9udGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbnRpbWVvdXQnKTtcbiAgICBzZWxmLl9lcnJvcigpO1xuICB9O1xuICB4ZHIub25wcm9ncmVzcyA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdwcm9ncmVzcycsIHhkci5yZXNwb25zZVRleHQpO1xuICAgIHNlbGYuZW1pdCgnY2h1bmsnLCAyMDAsIHhkci5yZXNwb25zZVRleHQpO1xuICB9O1xuICB4ZHIub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ2xvYWQnKTtcbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIDIwMCwgeGRyLnJlc3BvbnNlVGV4dCk7XG4gICAgc2VsZi5fY2xlYW51cChmYWxzZSk7XG4gIH07XG4gIHRoaXMueGRyID0geGRyO1xuICB0aGlzLnVubG9hZFJlZiA9IGV2ZW50VXRpbHMudW5sb2FkQWRkKGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuX2NsZWFudXAodHJ1ZSk7XG4gIH0pO1xuICB0cnkge1xuICAgIC8vIEZhaWxzIHdpdGggQWNjZXNzRGVuaWVkIGlmIHBvcnQgbnVtYmVyIGlzIGJvZ3VzXG4gICAgdGhpcy54ZHIub3BlbihtZXRob2QsIHVybCk7XG4gICAgaWYgKHRoaXMudGltZW91dCkge1xuICAgICAgdGhpcy54ZHIudGltZW91dCA9IHRoaXMudGltZW91dDtcbiAgICB9XG4gICAgdGhpcy54ZHIuc2VuZChwYXlsb2FkKTtcbiAgfSBjYXRjaCAoeCkge1xuICAgIHRoaXMuX2Vycm9yKCk7XG4gIH1cbn07XG5cblhEUk9iamVjdC5wcm90b3R5cGUuX2Vycm9yID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZW1pdCgnZmluaXNoJywgMCwgJycpO1xuICB0aGlzLl9jbGVhbnVwKGZhbHNlKTtcbn07XG5cblhEUk9iamVjdC5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbihhYm9ydCkge1xuICBkZWJ1ZygnY2xlYW51cCcsIGFib3J0KTtcbiAgaWYgKCF0aGlzLnhkcikge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICBldmVudFV0aWxzLnVubG9hZERlbCh0aGlzLnVubG9hZFJlZik7XG5cbiAgdGhpcy54ZHIub250aW1lb3V0ID0gdGhpcy54ZHIub25lcnJvciA9IHRoaXMueGRyLm9ucHJvZ3Jlc3MgPSB0aGlzLnhkci5vbmxvYWQgPSBudWxsO1xuICBpZiAoYWJvcnQpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy54ZHIuYWJvcnQoKTtcbiAgICB9IGNhdGNoICh4KSB7XG4gICAgICAvLyBpbnRlbnRpb25hbGx5IGVtcHR5XG4gICAgfVxuICB9XG4gIHRoaXMudW5sb2FkUmVmID0gdGhpcy54ZHIgPSBudWxsO1xufTtcblxuWERST2JqZWN0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5fY2xlYW51cCh0cnVlKTtcbn07XG5cbi8vIElFIDgvOSBpZiB0aGUgcmVxdWVzdCB0YXJnZXQgdXNlcyB0aGUgc2FtZSBzY2hlbWUgLSAjNzlcblhEUk9iamVjdC5lbmFibGVkID0gISEoZ2xvYmFsLlhEb21haW5SZXF1ZXN0ICYmIGJyb3dzZXIuaGFzRG9tYWluKCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhEUk9iamVjdDtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvYnJvd3NlclwiOjQ0LFwiLi4vLi4vdXRpbHMvZXZlbnRcIjo0NixcIi4uLy4uL3V0aWxzL3VybFwiOjUyLFwiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgWGhyRHJpdmVyID0gcmVxdWlyZSgnLi4vZHJpdmVyL3hocicpXG4gIDtcblxuZnVuY3Rpb24gWEhSQ29yc09iamVjdChtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cykge1xuICBYaHJEcml2ZXIuY2FsbCh0aGlzLCBtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cyk7XG59XG5cbmluaGVyaXRzKFhIUkNvcnNPYmplY3QsIFhockRyaXZlcik7XG5cblhIUkNvcnNPYmplY3QuZW5hYmxlZCA9IFhockRyaXZlci5lbmFibGVkICYmIFhockRyaXZlci5zdXBwb3J0c0NPUlM7XG5cbm1vZHVsZS5leHBvcnRzID0gWEhSQ29yc09iamVjdDtcblxufSx7XCIuLi9kcml2ZXIveGhyXCI6MTcsXCJpbmhlcml0c1wiOjU3fV0sMzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gIDtcblxuZnVuY3Rpb24gWEhSRmFrZSgvKiBtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cyAqLykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHRoaXMudG8gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZW1pdCgnZmluaXNoJywgMjAwLCAne30nKTtcbiAgfSwgWEhSRmFrZS50aW1lb3V0KTtcbn1cblxuaW5oZXJpdHMoWEhSRmFrZSwgRXZlbnRFbWl0dGVyKTtcblxuWEhSRmFrZS5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgY2xlYXJUaW1lb3V0KHRoaXMudG8pO1xufTtcblxuWEhSRmFrZS50aW1lb3V0ID0gMjAwMDtcblxubW9kdWxlLmV4cG9ydHMgPSBYSFJGYWtlO1xuXG59LHtcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgWGhyRHJpdmVyID0gcmVxdWlyZSgnLi4vZHJpdmVyL3hocicpXG4gIDtcblxuZnVuY3Rpb24gWEhSTG9jYWxPYmplY3QobWV0aG9kLCB1cmwsIHBheWxvYWQgLyosIG9wdHMgKi8pIHtcbiAgWGhyRHJpdmVyLmNhbGwodGhpcywgbWV0aG9kLCB1cmwsIHBheWxvYWQsIHtcbiAgICBub0NyZWRlbnRpYWxzOiB0cnVlXG4gIH0pO1xufVxuXG5pbmhlcml0cyhYSFJMb2NhbE9iamVjdCwgWGhyRHJpdmVyKTtcblxuWEhSTG9jYWxPYmplY3QuZW5hYmxlZCA9IFhockRyaXZlci5lbmFibGVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhIUkxvY2FsT2JqZWN0O1xuXG59LHtcIi4uL2RyaXZlci94aHJcIjoxNyxcImluaGVyaXRzXCI6NTd9XSwzODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy9ldmVudCcpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91cmwnKVxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIFdlYnNvY2tldERyaXZlciA9IHJlcXVpcmUoJy4vZHJpdmVyL3dlYnNvY2tldCcpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp3ZWJzb2NrZXQnKTtcbn1cblxuZnVuY3Rpb24gV2ViU29ja2V0VHJhbnNwb3J0KHRyYW5zVXJsLCBpZ25vcmUsIG9wdGlvbnMpIHtcbiAgaWYgKCFXZWJTb2NrZXRUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cblxuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcbiAgZGVidWcoJ2NvbnN0cnVjdG9yJywgdHJhbnNVcmwpO1xuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHVybCA9IHVybFV0aWxzLmFkZFBhdGgodHJhbnNVcmwsICcvd2Vic29ja2V0Jyk7XG4gIGlmICh1cmwuc2xpY2UoMCwgNSkgPT09ICdodHRwcycpIHtcbiAgICB1cmwgPSAnd3NzJyArIHVybC5zbGljZSg1KTtcbiAgfSBlbHNlIHtcbiAgICB1cmwgPSAnd3MnICsgdXJsLnNsaWNlKDQpO1xuICB9XG4gIHRoaXMudXJsID0gdXJsO1xuXG4gIHRoaXMud3MgPSBuZXcgV2Vic29ja2V0RHJpdmVyKHRoaXMudXJsLCBbXSwgb3B0aW9ucyk7XG4gIHRoaXMud3Mub25tZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdtZXNzYWdlIGV2ZW50JywgZS5kYXRhKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBlLmRhdGEpO1xuICB9O1xuICAvLyBGaXJlZm94IGhhcyBhbiBpbnRlcmVzdGluZyBidWcuIElmIGEgd2Vic29ja2V0IGNvbm5lY3Rpb24gaXNcbiAgLy8gY3JlYXRlZCBhZnRlciBvbnVubG9hZCwgaXQgc3RheXMgYWxpdmUgZXZlbiB3aGVuIHVzZXJcbiAgLy8gbmF2aWdhdGVzIGF3YXkgZnJvbSB0aGUgcGFnZS4gSW4gc3VjaCBzaXR1YXRpb24gbGV0J3MgbGllIC1cbiAgLy8gbGV0J3Mgbm90IG9wZW4gdGhlIHdzIGNvbm5lY3Rpb24gYXQgYWxsLiBTZWU6XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zb2NranMvc29ja2pzLWNsaWVudC9pc3N1ZXMvMjhcbiAgLy8gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njk2MDg1XG4gIHRoaXMudW5sb2FkUmVmID0gdXRpbHMudW5sb2FkQWRkKGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd1bmxvYWQnKTtcbiAgICBzZWxmLndzLmNsb3NlKCk7XG4gIH0pO1xuICB0aGlzLndzLm9uY2xvc2UgPSBmdW5jdGlvbihlKSB7XG4gICAgZGVidWcoJ2Nsb3NlIGV2ZW50JywgZS5jb2RlLCBlLnJlYXNvbik7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIGUuY29kZSwgZS5yZWFzb24pO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgfTtcbiAgdGhpcy53cy5vbmVycm9yID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdlcnJvciBldmVudCcsIGUpO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCAxMDA2LCAnV2ViU29ja2V0IGNvbm5lY3Rpb24gYnJva2VuJyk7XG4gICAgc2VsZi5fY2xlYW51cCgpO1xuICB9O1xufVxuXG5pbmhlcml0cyhXZWJTb2NrZXRUcmFuc3BvcnQsIEV2ZW50RW1pdHRlcik7XG5cbldlYlNvY2tldFRyYW5zcG9ydC5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgdmFyIG1zZyA9ICdbJyArIGRhdGEgKyAnXSc7XG4gIGRlYnVnKCdzZW5kJywgbXNnKTtcbiAgdGhpcy53cy5zZW5kKG1zZyk7XG59O1xuXG5XZWJTb2NrZXRUcmFuc3BvcnQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbG9zZScpO1xuICB2YXIgd3MgPSB0aGlzLndzO1xuICB0aGlzLl9jbGVhbnVwKCk7XG4gIGlmICh3cykge1xuICAgIHdzLmNsb3NlKCk7XG4gIH1cbn07XG5cbldlYlNvY2tldFRyYW5zcG9ydC5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ19jbGVhbnVwJyk7XG4gIHZhciB3cyA9IHRoaXMud3M7XG4gIGlmICh3cykge1xuICAgIHdzLm9ubWVzc2FnZSA9IHdzLm9uY2xvc2UgPSB3cy5vbmVycm9yID0gbnVsbDtcbiAgfVxuICB1dGlscy51bmxvYWREZWwodGhpcy51bmxvYWRSZWYpO1xuICB0aGlzLnVubG9hZFJlZiA9IHRoaXMud3MgPSBudWxsO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxuV2ViU29ja2V0VHJhbnNwb3J0LmVuYWJsZWQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2VuYWJsZWQnKTtcbiAgcmV0dXJuICEhV2Vic29ja2V0RHJpdmVyO1xufTtcbldlYlNvY2tldFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ3dlYnNvY2tldCc7XG5cbi8vIEluIHRoZW9yeSwgd3Mgc2hvdWxkIHJlcXVpcmUgMSByb3VuZCB0cmlwLiBCdXQgaW4gY2hyb21lLCB0aGlzIGlzXG4vLyBub3QgdmVyeSBzdGFibGUgb3ZlciBTU0wuIE1vc3QgbGlrZWx5IGEgd3MgY29ubmVjdGlvbiByZXF1aXJlcyBhXG4vLyBzZXBhcmF0ZSBTU0wgY29ubmVjdGlvbiwgaW4gd2hpY2ggY2FzZSAyIHJvdW5kIHRyaXBzIGFyZSBhblxuLy8gYWJzb2x1dGUgbWludW11bS5cbldlYlNvY2tldFRyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjtcblxubW9kdWxlLmV4cG9ydHMgPSBXZWJTb2NrZXRUcmFuc3BvcnQ7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCIuLi91dGlscy9ldmVudFwiOjQ2LFwiLi4vdXRpbHMvdXJsXCI6NTIsXCIuL2RyaXZlci93ZWJzb2NrZXRcIjoxOSxcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1N31dLDM5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIFhkclN0cmVhbWluZ1RyYW5zcG9ydCA9IHJlcXVpcmUoJy4veGRyLXN0cmVhbWluZycpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWERST2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGRyJylcbiAgO1xuXG5mdW5jdGlvbiBYZHJQb2xsaW5nVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghWERST2JqZWN0LmVuYWJsZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy94aHInLCBYaHJSZWNlaXZlciwgWERST2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGRyUG9sbGluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGRyUG9sbGluZ1RyYW5zcG9ydC5lbmFibGVkID0gWGRyU3RyZWFtaW5nVHJhbnNwb3J0LmVuYWJsZWQ7XG5YZHJQb2xsaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGRyLXBvbGxpbmcnO1xuWGRyUG9sbGluZ1RyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjsgLy8gcHJlZmxpZ2h0LCBhamF4XG5cbm1vZHVsZS5leHBvcnRzID0gWGRyUG9sbGluZ1RyYW5zcG9ydDtcblxufSx7XCIuL2xpYi9hamF4LWJhc2VkXCI6MjQsXCIuL3JlY2VpdmVyL3hoclwiOjMyLFwiLi9zZW5kZXIveGRyXCI6MzQsXCIuL3hkci1zdHJlYW1pbmdcIjo0MCxcImluaGVyaXRzXCI6NTd9XSw0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBBamF4QmFzZWRUcmFuc3BvcnQgPSByZXF1aXJlKCcuL2xpYi9hamF4LWJhc2VkJylcbiAgLCBYaHJSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIveGhyJylcbiAgLCBYRFJPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94ZHInKVxuICA7XG5cbi8vIEFjY29yZGluZyB0bzpcbi8vICAgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xNjQxNTA3L2RldGVjdC1icm93c2VyLXN1cHBvcnQtZm9yLWNyb3NzLWRvbWFpbi14bWxodHRwcmVxdWVzdHNcbi8vICAgaHR0cDovL2hhY2tzLm1vemlsbGEub3JnLzIwMDkvMDcvY3Jvc3Mtc2l0ZS14bWxodHRwcmVxdWVzdC13aXRoLWNvcnMvXG5cbmZ1bmN0aW9uIFhkclN0cmVhbWluZ1RyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVhEUk9iamVjdC5lbmFibGVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgQWpheEJhc2VkVHJhbnNwb3J0LmNhbGwodGhpcywgdHJhbnNVcmwsICcveGhyX3N0cmVhbWluZycsIFhoclJlY2VpdmVyLCBYRFJPYmplY3QpO1xufVxuXG5pbmhlcml0cyhYZHJTdHJlYW1pbmdUcmFuc3BvcnQsIEFqYXhCYXNlZFRyYW5zcG9ydCk7XG5cblhkclN0cmVhbWluZ1RyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oaW5mbykge1xuICBpZiAoaW5mby5jb29raWVfbmVlZGVkIHx8IGluZm8ubnVsbE9yaWdpbikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gWERST2JqZWN0LmVuYWJsZWQgJiYgaW5mby5zYW1lU2NoZW1lO1xufTtcblxuWGRyU3RyZWFtaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGRyLXN0cmVhbWluZyc7XG5YZHJTdHJlYW1pbmdUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7IC8vIHByZWZsaWdodCwgYWpheFxuXG5tb2R1bGUuZXhwb3J0cyA9IFhkclN0cmVhbWluZ1RyYW5zcG9ydDtcblxufSx7XCIuL2xpYi9hamF4LWJhc2VkXCI6MjQsXCIuL3JlY2VpdmVyL3hoclwiOjMyLFwiLi9zZW5kZXIveGRyXCI6MzQsXCJpbmhlcml0c1wiOjU3fV0sNDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWEhSQ29yc09iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1jb3JzJylcbiAgLCBYSFJMb2NhbE9iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1sb2NhbCcpXG4gIDtcblxuZnVuY3Rpb24gWGhyUG9sbGluZ1RyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgIVhIUkNvcnNPYmplY3QuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL3hocicsIFhoclJlY2VpdmVyLCBYSFJDb3JzT2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGhyUG9sbGluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGhyUG9sbGluZ1RyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oaW5mbykge1xuICBpZiAoaW5mby5udWxsT3JpZ2luKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKFhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgaW5mby5zYW1lT3JpZ2luKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIFhIUkNvcnNPYmplY3QuZW5hYmxlZDtcbn07XG5cblhoclBvbGxpbmdUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICd4aHItcG9sbGluZyc7XG5YaHJQb2xsaW5nVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyOyAvLyBwcmVmbGlnaHQsIGFqYXhcblxubW9kdWxlLmV4cG9ydHMgPSBYaHJQb2xsaW5nVHJhbnNwb3J0O1xuXG59LHtcIi4vbGliL2FqYXgtYmFzZWRcIjoyNCxcIi4vcmVjZWl2ZXIveGhyXCI6MzIsXCIuL3NlbmRlci94aHItY29yc1wiOjM1LFwiLi9zZW5kZXIveGhyLWxvY2FsXCI6MzcsXCJpbmhlcml0c1wiOjU3fV0sNDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWEhSQ29yc09iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1jb3JzJylcbiAgLCBYSFJMb2NhbE9iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1sb2NhbCcpXG4gICwgYnJvd3NlciA9IHJlcXVpcmUoJy4uL3V0aWxzL2Jyb3dzZXInKVxuICA7XG5cbmZ1bmN0aW9uIFhoclN0cmVhbWluZ1RyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgIVhIUkNvcnNPYmplY3QuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL3hocl9zdHJlYW1pbmcnLCBYaHJSZWNlaXZlciwgWEhSQ29yc09iamVjdCk7XG59XG5cbmluaGVyaXRzKFhoclN0cmVhbWluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGhyU3RyZWFtaW5nVHJhbnNwb3J0LmVuYWJsZWQgPSBmdW5jdGlvbihpbmZvKSB7XG4gIGlmIChpbmZvLm51bGxPcmlnaW4pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gT3BlcmEgZG9lc24ndCBzdXBwb3J0IHhoci1zdHJlYW1pbmcgIzYwXG4gIC8vIEJ1dCBpdCBtaWdodCBiZSBhYmxlIHRvICM5MlxuICBpZiAoYnJvd3Nlci5pc09wZXJhKCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gWEhSQ29yc09iamVjdC5lbmFibGVkO1xufTtcblxuWGhyU3RyZWFtaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGhyLXN0cmVhbWluZyc7XG5YaHJTdHJlYW1pbmdUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7IC8vIHByZWZsaWdodCwgYWpheFxuXG4vLyBTYWZhcmkgZ2V0cyBjb25mdXNlZCB3aGVuIGEgc3RyZWFtaW5nIGFqYXggcmVxdWVzdCBpcyBzdGFydGVkXG4vLyBiZWZvcmUgb25sb2FkLiBUaGlzIGNhdXNlcyB0aGUgbG9hZCBpbmRpY2F0b3IgdG8gc3BpbiBpbmRlZmluZXRlbHkuXG4vLyBPbmx5IHJlcXVpcmUgYm9keSB3aGVuIHVzZWQgaW4gYSBicm93c2VyXG5YaHJTdHJlYW1pbmdUcmFuc3BvcnQubmVlZEJvZHkgPSAhIWdsb2JhbC5kb2N1bWVudDtcblxubW9kdWxlLmV4cG9ydHMgPSBYaHJTdHJlYW1pbmdUcmFuc3BvcnQ7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4uL3V0aWxzL2Jyb3dzZXJcIjo0NCxcIi4vbGliL2FqYXgtYmFzZWRcIjoyNCxcIi4vcmVjZWl2ZXIveGhyXCI6MzIsXCIuL3NlbmRlci94aHItY29yc1wiOjM1LFwiLi9zZW5kZXIveGhyLWxvY2FsXCI6MzcsXCJpbmhlcml0c1wiOjU3fV0sNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG5pZiAoZ2xvYmFsLmNyeXB0byAmJiBnbG9iYWwuY3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICBtb2R1bGUuZXhwb3J0cy5yYW5kb21CeXRlcyA9IGZ1bmN0aW9uKGxlbmd0aCkge1xuICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCk7XG4gICAgZ2xvYmFsLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYnl0ZXMpO1xuICAgIHJldHVybiBieXRlcztcbiAgfTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzLnJhbmRvbUJ5dGVzID0gZnVuY3Rpb24obGVuZ3RoKSB7XG4gICAgdmFyIGJ5dGVzID0gbmV3IEFycmF5KGxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgYnl0ZXNbaV0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG4gIH07XG59XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHt9XSw0NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc09wZXJhOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZ2xvYmFsLm5hdmlnYXRvciAmJlxuICAgICAgL29wZXJhL2kudGVzdChnbG9iYWwubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuLCBpc0tvbnF1ZXJvcjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGdsb2JhbC5uYXZpZ2F0b3IgJiZcbiAgICAgIC9rb25xdWVyb3IvaS50ZXN0KGdsb2JhbC5uYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgfVxuXG4gIC8vICMxODcgd3JhcCBkb2N1bWVudC5kb21haW4gaW4gdHJ5L2NhdGNoIGJlY2F1c2Ugb2YgV1A4IGZyb20gZmlsZTovLy9cbiwgaGFzRG9tYWluOiBmdW5jdGlvbiAoKSB7XG4gICAgLy8gbm9uLWJyb3dzZXIgY2xpZW50IGFsd2F5cyBoYXMgYSBkb21haW5cbiAgICBpZiAoIWdsb2JhbC5kb2N1bWVudCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAhIWdsb2JhbC5kb2N1bWVudC5kb21haW47XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDQ1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKTtcblxuLy8gU29tZSBleHRyYSBjaGFyYWN0ZXJzIHRoYXQgQ2hyb21lIGdldHMgd3JvbmcsIGFuZCBzdWJzdGl0dXRlcyB3aXRoXG4vLyBzb21ldGhpbmcgZWxzZSBvbiB0aGUgd2lyZS5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4XG52YXIgZXh0cmFFc2NhcGFibGUgPSAvW1xceDAwLVxceDFmXFx1ZDgwMC1cXHVkZmZmXFx1ZmZmZVxcdWZmZmZcXHUwMzAwLVxcdTAzMzNcXHUwMzNkLVxcdTAzNDZcXHUwMzRhLVxcdTAzNGNcXHUwMzUwLVxcdTAzNTJcXHUwMzU3LVxcdTAzNThcXHUwMzVjLVxcdTAzNjJcXHUwMzc0XFx1MDM3ZVxcdTAzODdcXHUwNTkxLVxcdTA1YWZcXHUwNWM0XFx1MDYxMC1cXHUwNjE3XFx1MDY1My1cXHUwNjU0XFx1MDY1Ny1cXHUwNjViXFx1MDY1ZC1cXHUwNjVlXFx1MDZkZi1cXHUwNmUyXFx1MDZlYi1cXHUwNmVjXFx1MDczMFxcdTA3MzItXFx1MDczM1xcdTA3MzUtXFx1MDczNlxcdTA3M2FcXHUwNzNkXFx1MDczZi1cXHUwNzQxXFx1MDc0M1xcdTA3NDVcXHUwNzQ3XFx1MDdlYi1cXHUwN2YxXFx1MDk1MVxcdTA5NTgtXFx1MDk1ZlxcdTA5ZGMtXFx1MDlkZFxcdTA5ZGZcXHUwYTMzXFx1MGEzNlxcdTBhNTktXFx1MGE1YlxcdTBhNWVcXHUwYjVjLVxcdTBiNWRcXHUwZTM4LVxcdTBlMzlcXHUwZjQzXFx1MGY0ZFxcdTBmNTJcXHUwZjU3XFx1MGY1Y1xcdTBmNjlcXHUwZjcyLVxcdTBmNzZcXHUwZjc4XFx1MGY4MC1cXHUwZjgzXFx1MGY5M1xcdTBmOWRcXHUwZmEyXFx1MGZhN1xcdTBmYWNcXHUwZmI5XFx1MTkzOS1cXHUxOTNhXFx1MWExN1xcdTFiNmJcXHUxY2RhLVxcdTFjZGJcXHUxZGMwLVxcdTFkY2ZcXHUxZGZjXFx1MWRmZVxcdTFmNzFcXHUxZjczXFx1MWY3NVxcdTFmNzdcXHUxZjc5XFx1MWY3YlxcdTFmN2RcXHUxZmJiXFx1MWZiZVxcdTFmYzlcXHUxZmNiXFx1MWZkM1xcdTFmZGJcXHUxZmUzXFx1MWZlYlxcdTFmZWUtXFx1MWZlZlxcdTFmZjlcXHUxZmZiXFx1MWZmZFxcdTIwMDAtXFx1MjAwMVxcdTIwZDAtXFx1MjBkMVxcdTIwZDQtXFx1MjBkN1xcdTIwZTctXFx1MjBlOVxcdTIxMjZcXHUyMTJhLVxcdTIxMmJcXHUyMzI5LVxcdTIzMmFcXHUyYWRjXFx1MzAyYi1cXHUzMDJjXFx1YWFiMi1cXHVhYWIzXFx1ZjkwMC1cXHVmYTBkXFx1ZmExMFxcdWZhMTJcXHVmYTE1LVxcdWZhMWVcXHVmYTIwXFx1ZmEyMlxcdWZhMjUtXFx1ZmEyNlxcdWZhMmEtXFx1ZmEyZFxcdWZhMzAtXFx1ZmE2ZFxcdWZhNzAtXFx1ZmFkOVxcdWZiMWRcXHVmYjFmXFx1ZmIyYS1cXHVmYjM2XFx1ZmIzOC1cXHVmYjNjXFx1ZmIzZVxcdWZiNDAtXFx1ZmI0MVxcdWZiNDMtXFx1ZmI0NFxcdWZiNDYtXFx1ZmI0ZVxcdWZmZjAtXFx1ZmZmZl0vZ1xuICAsIGV4dHJhTG9va3VwO1xuXG4vLyBUaGlzIG1heSBiZSBxdWl0ZSBzbG93LCBzbyBsZXQncyBkZWxheSB1bnRpbCB1c2VyIGFjdHVhbGx5IHVzZXMgYmFkXG4vLyBjaGFyYWN0ZXJzLlxudmFyIHVucm9sbExvb2t1cCA9IGZ1bmN0aW9uKGVzY2FwYWJsZSkge1xuICB2YXIgaTtcbiAgdmFyIHVucm9sbGVkID0ge307XG4gIHZhciBjID0gW107XG4gIGZvciAoaSA9IDA7IGkgPCA2NTUzNjsgaSsrKSB7XG4gICAgYy5wdXNoKCBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpICk7XG4gIH1cbiAgZXNjYXBhYmxlLmxhc3RJbmRleCA9IDA7XG4gIGMuam9pbignJykucmVwbGFjZShlc2NhcGFibGUsIGZ1bmN0aW9uKGEpIHtcbiAgICB1bnJvbGxlZFsgYSBdID0gJ1xcXFx1JyArICgnMDAwMCcgKyBhLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCk7XG4gICAgcmV0dXJuICcnO1xuICB9KTtcbiAgZXNjYXBhYmxlLmxhc3RJbmRleCA9IDA7XG4gIHJldHVybiB1bnJvbGxlZDtcbn07XG5cbi8vIFF1b3RlIHN0cmluZywgYWxzbyB0YWtpbmcgY2FyZSBvZiB1bmljb2RlIGNoYXJhY3RlcnMgdGhhdCBicm93c2Vyc1xuLy8gb2Z0ZW4gYnJlYWsuIEVzcGVjaWFsbHksIHRha2UgY2FyZSBvZiB1bmljb2RlIHN1cnJvZ2F0ZXM6XG4vLyBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL01hcHBpbmdfb2ZfVW5pY29kZV9jaGFyYWN0ZXJzI1N1cnJvZ2F0ZXNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBxdW90ZTogZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIHF1b3RlZCA9IEpTT04zLnN0cmluZ2lmeShzdHJpbmcpO1xuXG4gICAgLy8gSW4gbW9zdCBjYXNlcyB0aGlzIHNob3VsZCBiZSB2ZXJ5IGZhc3QgYW5kIGdvb2QgZW5vdWdoLlxuICAgIGV4dHJhRXNjYXBhYmxlLmxhc3RJbmRleCA9IDA7XG4gICAgaWYgKCFleHRyYUVzY2FwYWJsZS50ZXN0KHF1b3RlZCkpIHtcbiAgICAgIHJldHVybiBxdW90ZWQ7XG4gICAgfVxuXG4gICAgaWYgKCFleHRyYUxvb2t1cCkge1xuICAgICAgZXh0cmFMb29rdXAgPSB1bnJvbGxMb29rdXAoZXh0cmFFc2NhcGFibGUpO1xuICAgIH1cblxuICAgIHJldHVybiBxdW90ZWQucmVwbGFjZShleHRyYUVzY2FwYWJsZSwgZnVuY3Rpb24oYSkge1xuICAgICAgcmV0dXJuIGV4dHJhTG9va3VwW2FdO1xuICAgIH0pO1xuICB9XG59O1xuXG59LHtcImpzb24zXCI6NTh9XSw0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciByYW5kb20gPSByZXF1aXJlKCcuL3JhbmRvbScpO1xuXG52YXIgb25VbmxvYWQgPSB7fVxuICAsIGFmdGVyVW5sb2FkID0gZmFsc2VcbiAgICAvLyBkZXRlY3QgZ29vZ2xlIGNocm9tZSBwYWNrYWdlZCBhcHBzIGJlY2F1c2UgdGhleSBkb24ndCBhbGxvdyB0aGUgJ3VubG9hZCcgZXZlbnRcbiAgLCBpc0Nocm9tZVBhY2thZ2VkQXBwID0gZ2xvYmFsLmNocm9tZSAmJiBnbG9iYWwuY2hyb21lLmFwcCAmJiBnbG9iYWwuY2hyb21lLmFwcC5ydW50aW1lXG4gIDtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGF0dGFjaEV2ZW50OiBmdW5jdGlvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgfSBlbHNlIGlmIChnbG9iYWwuZG9jdW1lbnQgJiYgZ2xvYmFsLmF0dGFjaEV2ZW50KSB7XG4gICAgICAvLyBJRSBxdWlya3MuXG4gICAgICAvLyBBY2NvcmRpbmcgdG86IGh0dHA6Ly9zdGV2ZXNvdWRlcnMuY29tL21pc2MvdGVzdC1wb3N0bWVzc2FnZS5waHBcbiAgICAgIC8vIHRoZSBtZXNzYWdlIGdldHMgZGVsaXZlcmVkIG9ubHkgdG8gJ2RvY3VtZW50Jywgbm90ICd3aW5kb3cnLlxuICAgICAgZ2xvYmFsLmRvY3VtZW50LmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgICAgLy8gSSBnZXQgJ3dpbmRvdycgZm9yIGllOC5cbiAgICAgIGdsb2JhbC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gIH1cblxuLCBkZXRhY2hFdmVudDogZnVuY3Rpb24oZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGdsb2JhbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpO1xuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLmRvY3VtZW50ICYmIGdsb2JhbC5kZXRhY2hFdmVudCkge1xuICAgICAgZ2xvYmFsLmRvY3VtZW50LmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgICAgZ2xvYmFsLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfVxuXG4sIHVubG9hZEFkZDogZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgICBpZiAoaXNDaHJvbWVQYWNrYWdlZEFwcCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHJlZiA9IHJhbmRvbS5zdHJpbmcoOCk7XG4gICAgb25VbmxvYWRbcmVmXSA9IGxpc3RlbmVyO1xuICAgIGlmIChhZnRlclVubG9hZCkge1xuICAgICAgc2V0VGltZW91dCh0aGlzLnRyaWdnZXJVbmxvYWRDYWxsYmFja3MsIDApO1xuICAgIH1cbiAgICByZXR1cm4gcmVmO1xuICB9XG5cbiwgdW5sb2FkRGVsOiBmdW5jdGlvbihyZWYpIHtcbiAgICBpZiAocmVmIGluIG9uVW5sb2FkKSB7XG4gICAgICBkZWxldGUgb25VbmxvYWRbcmVmXTtcbiAgICB9XG4gIH1cblxuLCB0cmlnZ2VyVW5sb2FkQ2FsbGJhY2tzOiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciByZWYgaW4gb25VbmxvYWQpIHtcbiAgICAgIG9uVW5sb2FkW3JlZl0oKTtcbiAgICAgIGRlbGV0ZSBvblVubG9hZFtyZWZdO1xuICAgIH1cbiAgfVxufTtcblxudmFyIHVubG9hZFRyaWdnZXJlZCA9IGZ1bmN0aW9uKCkge1xuICBpZiAoYWZ0ZXJVbmxvYWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgYWZ0ZXJVbmxvYWQgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cy50cmlnZ2VyVW5sb2FkQ2FsbGJhY2tzKCk7XG59O1xuXG4vLyAndW5sb2FkJyBhbG9uZSBpcyBub3QgcmVsaWFibGUgaW4gb3BlcmEgd2l0aGluIGFuIGlmcmFtZSwgYnV0IHdlXG4vLyBjYW4ndCB1c2UgYGJlZm9yZXVubG9hZGAgYXMgSUUgZmlyZXMgaXQgb24gamF2YXNjcmlwdDogbGlua3MuXG5pZiAoIWlzQ2hyb21lUGFja2FnZWRBcHApIHtcbiAgbW9kdWxlLmV4cG9ydHMuYXR0YWNoRXZlbnQoJ3VubG9hZCcsIHVubG9hZFRyaWdnZXJlZCk7XG59XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vcmFuZG9tXCI6NTB9XSw0NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3MsZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuL2V2ZW50JylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBicm93c2VyID0gcmVxdWlyZSgnLi9icm93c2VyJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnV0aWxzOmlmcmFtZScpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgV1ByZWZpeDogJ19qcCdcbiwgY3VycmVudFdpbmRvd0lkOiBudWxsXG5cbiwgcG9sbHV0ZUdsb2JhbE5hbWVzcGFjZTogZnVuY3Rpb24oKSB7XG4gICAgaWYgKCEobW9kdWxlLmV4cG9ydHMuV1ByZWZpeCBpbiBnbG9iYWwpKSB7XG4gICAgICBnbG9iYWxbbW9kdWxlLmV4cG9ydHMuV1ByZWZpeF0gPSB7fTtcbiAgICB9XG4gIH1cblxuLCBwb3N0TWVzc2FnZTogZnVuY3Rpb24odHlwZSwgZGF0YSkge1xuICAgIGlmIChnbG9iYWwucGFyZW50ICE9PSBnbG9iYWwpIHtcbiAgICAgIGdsb2JhbC5wYXJlbnQucG9zdE1lc3NhZ2UoSlNPTjMuc3RyaW5naWZ5KHtcbiAgICAgICAgd2luZG93SWQ6IG1vZHVsZS5leHBvcnRzLmN1cnJlbnRXaW5kb3dJZFxuICAgICAgLCB0eXBlOiB0eXBlXG4gICAgICAsIGRhdGE6IGRhdGEgfHwgJydcbiAgICAgIH0pLCAnKicpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZWJ1ZygnQ2Fubm90IHBvc3RNZXNzYWdlLCBubyBwYXJlbnQgd2luZG93LicsIHR5cGUsIGRhdGEpO1xuICAgIH1cbiAgfVxuXG4sIGNyZWF0ZUlmcmFtZTogZnVuY3Rpb24oaWZyYW1lVXJsLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgdmFyIGlmcmFtZSA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICB2YXIgdHJlZiwgdW5sb2FkUmVmO1xuICAgIHZhciB1bmF0dGFjaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ3VuYXR0YWNoJyk7XG4gICAgICBjbGVhclRpbWVvdXQodHJlZik7XG4gICAgICAvLyBFeHBsb3JlciBoYWQgcHJvYmxlbXMgd2l0aCB0aGF0LlxuICAgICAgdHJ5IHtcbiAgICAgICAgaWZyYW1lLm9ubG9hZCA9IG51bGw7XG4gICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICAgIH1cbiAgICAgIGlmcmFtZS5vbmVycm9yID0gbnVsbDtcbiAgICB9O1xuICAgIHZhciBjbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gICAgICBkZWJ1ZygnY2xlYW51cCcpO1xuICAgICAgaWYgKGlmcmFtZSkge1xuICAgICAgICB1bmF0dGFjaCgpO1xuICAgICAgICAvLyBUaGlzIHRpbWVvdXQgbWFrZXMgY2hyb21lIGZpcmUgb25iZWZvcmV1bmxvYWQgZXZlbnRcbiAgICAgICAgLy8gd2l0aGluIGlmcmFtZS4gV2l0aG91dCB0aGUgdGltZW91dCBpdCBnb2VzIHN0cmFpZ2h0IHRvXG4gICAgICAgIC8vIG9udW5sb2FkLlxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmIChpZnJhbWUpIHtcbiAgICAgICAgICAgIGlmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmcmFtZSA9IG51bGw7XG4gICAgICAgIH0sIDApO1xuICAgICAgICBldmVudFV0aWxzLnVubG9hZERlbCh1bmxvYWRSZWYpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIG9uZXJyb3IgPSBmdW5jdGlvbihlcnIpIHtcbiAgICAgIGRlYnVnKCdvbmVycm9yJywgZXJyKTtcbiAgICAgIGlmIChpZnJhbWUpIHtcbiAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICBlcnJvckNhbGxiYWNrKGVycik7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgcG9zdCA9IGZ1bmN0aW9uKG1zZywgb3JpZ2luKSB7XG4gICAgICBkZWJ1ZygncG9zdCcsIG1zZywgb3JpZ2luKTtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFdoZW4gdGhlIGlmcmFtZSBpcyBub3QgbG9hZGVkLCBJRSByYWlzZXMgYW4gZXhjZXB0aW9uXG4gICAgICAgIC8vIG9uICdjb250ZW50V2luZG93Jy5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoaWZyYW1lICYmIGlmcmFtZS5jb250ZW50V2luZG93KSB7XG4gICAgICAgICAgICBpZnJhbWUuY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZShtc2csIG9yaWdpbik7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAwKTtcbiAgICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICAgICAgfVxuICAgIH07XG5cbiAgICBpZnJhbWUuc3JjID0gaWZyYW1lVXJsO1xuICAgIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIGlmcmFtZS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgaWZyYW1lLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgIG9uZXJyb3IoJ29uZXJyb3InKTtcbiAgICB9O1xuICAgIGlmcmFtZS5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCdvbmxvYWQnKTtcbiAgICAgIC8vIGBvbmxvYWRgIGlzIHRyaWdnZXJlZCBiZWZvcmUgc2NyaXB0cyBvbiB0aGUgaWZyYW1lIGFyZVxuICAgICAgLy8gZXhlY3V0ZWQuIEdpdmUgaXQgZmV3IHNlY29uZHMgdG8gYWN0dWFsbHkgbG9hZCBzdHVmZi5cbiAgICAgIGNsZWFyVGltZW91dCh0cmVmKTtcbiAgICAgIHRyZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBvbmVycm9yKCdvbmxvYWQgdGltZW91dCcpO1xuICAgICAgfSwgMjAwMCk7XG4gICAgfTtcbiAgICBnbG9iYWwuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAgIHRyZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgb25lcnJvcigndGltZW91dCcpO1xuICAgIH0sIDE1MDAwKTtcbiAgICB1bmxvYWRSZWYgPSBldmVudFV0aWxzLnVubG9hZEFkZChjbGVhbnVwKTtcbiAgICByZXR1cm4ge1xuICAgICAgcG9zdDogcG9zdFxuICAgICwgY2xlYW51cDogY2xlYW51cFxuICAgICwgbG9hZGVkOiB1bmF0dGFjaFxuICAgIH07XG4gIH1cblxuLyogZXNsaW50IG5vLXVuZGVmOiBcIm9mZlwiLCBuZXctY2FwOiBcIm9mZlwiICovXG4sIGNyZWF0ZUh0bWxmaWxlOiBmdW5jdGlvbihpZnJhbWVVcmwsIGVycm9yQ2FsbGJhY2spIHtcbiAgICB2YXIgYXhvID0gWydBY3RpdmUnXS5jb25jYXQoJ09iamVjdCcpLmpvaW4oJ1gnKTtcbiAgICB2YXIgZG9jID0gbmV3IGdsb2JhbFtheG9dKCdodG1sZmlsZScpO1xuICAgIHZhciB0cmVmLCB1bmxvYWRSZWY7XG4gICAgdmFyIGlmcmFtZTtcbiAgICB2YXIgdW5hdHRhY2ggPSBmdW5jdGlvbigpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0cmVmKTtcbiAgICAgIGlmcmFtZS5vbmVycm9yID0gbnVsbDtcbiAgICB9O1xuICAgIHZhciBjbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoZG9jKSB7XG4gICAgICAgIHVuYXR0YWNoKCk7XG4gICAgICAgIGV2ZW50VXRpbHMudW5sb2FkRGVsKHVubG9hZFJlZik7XG4gICAgICAgIGlmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gICAgICAgIGlmcmFtZSA9IGRvYyA9IG51bGw7XG4gICAgICAgIENvbGxlY3RHYXJiYWdlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgb25lcnJvciA9IGZ1bmN0aW9uKHIpIHtcbiAgICAgIGRlYnVnKCdvbmVycm9yJywgcik7XG4gICAgICBpZiAoZG9jKSB7XG4gICAgICAgIGNsZWFudXAoKTtcbiAgICAgICAgZXJyb3JDYWxsYmFjayhyKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBwb3N0ID0gZnVuY3Rpb24obXNnLCBvcmlnaW4pIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFdoZW4gdGhlIGlmcmFtZSBpcyBub3QgbG9hZGVkLCBJRSByYWlzZXMgYW4gZXhjZXB0aW9uXG4gICAgICAgIC8vIG9uICdjb250ZW50V2luZG93Jy5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoaWZyYW1lICYmIGlmcmFtZS5jb250ZW50V2luZG93KSB7XG4gICAgICAgICAgICAgIGlmcmFtZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKG1zZywgb3JpZ2luKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDApO1xuICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICAvLyBpbnRlbnRpb25hbGx5IGVtcHR5XG4gICAgICB9XG4gICAgfTtcblxuICAgIGRvYy5vcGVuKCk7XG4gICAgZG9jLndyaXRlKCc8aHRtbD48cycgKyAnY3JpcHQ+JyArXG4gICAgICAgICAgICAgICdkb2N1bWVudC5kb21haW49XCInICsgZ2xvYmFsLmRvY3VtZW50LmRvbWFpbiArICdcIjsnICtcbiAgICAgICAgICAgICAgJzwvcycgKyAnY3JpcHQ+PC9odG1sPicpO1xuICAgIGRvYy5jbG9zZSgpO1xuICAgIGRvYy5wYXJlbnRXaW5kb3dbbW9kdWxlLmV4cG9ydHMuV1ByZWZpeF0gPSBnbG9iYWxbbW9kdWxlLmV4cG9ydHMuV1ByZWZpeF07XG4gICAgdmFyIGMgPSBkb2MuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZG9jLmJvZHkuYXBwZW5kQ2hpbGQoYyk7XG4gICAgaWZyYW1lID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICAgIGMuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgICBpZnJhbWUuc3JjID0gaWZyYW1lVXJsO1xuICAgIGlmcmFtZS5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICBvbmVycm9yKCdvbmVycm9yJyk7XG4gICAgfTtcbiAgICB0cmVmID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIG9uZXJyb3IoJ3RpbWVvdXQnKTtcbiAgICB9LCAxNTAwMCk7XG4gICAgdW5sb2FkUmVmID0gZXZlbnRVdGlscy51bmxvYWRBZGQoY2xlYW51cCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBvc3Q6IHBvc3RcbiAgICAsIGNsZWFudXA6IGNsZWFudXBcbiAgICAsIGxvYWRlZDogdW5hdHRhY2hcbiAgICB9O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5pZnJhbWVFbmFibGVkID0gZmFsc2U7XG5pZiAoZ2xvYmFsLmRvY3VtZW50KSB7XG4gIC8vIHBvc3RNZXNzYWdlIG1pc2JlaGF2ZXMgaW4ga29ucXVlcm9yIDQuNi41IC0gdGhlIG1lc3NhZ2VzIGFyZSBkZWxpdmVyZWQgd2l0aFxuICAvLyBodWdlIGRlbGF5LCBvciBub3QgYXQgYWxsLlxuICBtb2R1bGUuZXhwb3J0cy5pZnJhbWVFbmFibGVkID0gKHR5cGVvZiBnbG9iYWwucG9zdE1lc3NhZ2UgPT09ICdmdW5jdGlvbicgfHxcbiAgICB0eXBlb2YgZ2xvYmFsLnBvc3RNZXNzYWdlID09PSAnb2JqZWN0JykgJiYgKCFicm93c2VyLmlzS29ucXVlcm9yKCkpO1xufVxuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0sdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cgOiB7fSlcblxufSx7XCIuL2Jyb3dzZXJcIjo0NCxcIi4vZXZlbnRcIjo0NixcImRlYnVnXCI6NTUsXCJqc29uM1wiOjU4fV0sNDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgbG9nT2JqZWN0ID0ge307XG5bJ2xvZycsICdkZWJ1ZycsICd3YXJuJ10uZm9yRWFjaChmdW5jdGlvbiAobGV2ZWwpIHtcbiAgdmFyIGxldmVsRXhpc3RzO1xuXG4gIHRyeSB7XG4gICAgbGV2ZWxFeGlzdHMgPSBnbG9iYWwuY29uc29sZSAmJiBnbG9iYWwuY29uc29sZVtsZXZlbF0gJiYgZ2xvYmFsLmNvbnNvbGVbbGV2ZWxdLmFwcGx5O1xuICB9IGNhdGNoKGUpIHtcbiAgICAvLyBkbyBub3RoaW5nXG4gIH1cblxuICBsb2dPYmplY3RbbGV2ZWxdID0gbGV2ZWxFeGlzdHMgPyBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGdsb2JhbC5jb25zb2xlW2xldmVsXS5hcHBseShnbG9iYWwuY29uc29sZSwgYXJndW1lbnRzKTtcbiAgfSA6IChsZXZlbCA9PT0gJ2xvZycgPyBmdW5jdGlvbiAoKSB7fSA6IGxvZ09iamVjdC5sb2cpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbG9nT2JqZWN0O1xuXG59KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cgOiB7fSlcblxufSx7fV0sNDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNPYmplY3Q6IGZ1bmN0aW9uKG9iaikge1xuICAgIHZhciB0eXBlID0gdHlwZW9mIG9iajtcbiAgICByZXR1cm4gdHlwZSA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlID09PSAnb2JqZWN0JyAmJiAhIW9iajtcbiAgfVxuXG4sIGV4dGVuZDogZnVuY3Rpb24ob2JqKSB7XG4gICAgaWYgKCF0aGlzLmlzT2JqZWN0KG9iaikpIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHZhciBzb3VyY2UsIHByb3A7XG4gICAgZm9yICh2YXIgaSA9IDEsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgc291cmNlID0gYXJndW1lbnRzW2ldO1xuICAgICAgZm9yIChwcm9wIGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwgcHJvcCkpIHtcbiAgICAgICAgICBvYmpbcHJvcF0gPSBzb3VyY2VbcHJvcF07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbiAgfVxufTtcblxufSx7fV0sNTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG4vKiBnbG9iYWwgY3J5cHRvOnRydWUgKi9cbnZhciBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcblxuLy8gVGhpcyBzdHJpbmcgaGFzIGxlbmd0aCAzMiwgYSBwb3dlciBvZiAyLCBzbyB0aGUgbW9kdWx1cyBkb2Vzbid0IGludHJvZHVjZSBhXG4vLyBiaWFzLlxudmFyIF9yYW5kb21TdHJpbmdDaGFycyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NSc7XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3RyaW5nOiBmdW5jdGlvbihsZW5ndGgpIHtcbiAgICB2YXIgbWF4ID0gX3JhbmRvbVN0cmluZ0NoYXJzLmxlbmd0aDtcbiAgICB2YXIgYnl0ZXMgPSBjcnlwdG8ucmFuZG9tQnl0ZXMobGVuZ3RoKTtcbiAgICB2YXIgcmV0ID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgcmV0LnB1c2goX3JhbmRvbVN0cmluZ0NoYXJzLnN1YnN0cihieXRlc1tpXSAlIG1heCwgMSkpO1xuICAgIH1cbiAgICByZXR1cm4gcmV0LmpvaW4oJycpO1xuICB9XG5cbiwgbnVtYmVyOiBmdW5jdGlvbihtYXgpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbWF4KTtcbiAgfVxuXG4sIG51bWJlclN0cmluZzogZnVuY3Rpb24obWF4KSB7XG4gICAgdmFyIHQgPSAoJycgKyAobWF4IC0gMSkpLmxlbmd0aDtcbiAgICB2YXIgcCA9IG5ldyBBcnJheSh0ICsgMSkuam9pbignMCcpO1xuICAgIHJldHVybiAocCArIHRoaXMubnVtYmVyKG1heCkpLnNsaWNlKC10KTtcbiAgfVxufTtcblxufSx7XCJjcnlwdG9cIjo0M31dLDUxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6dXRpbHM6dHJhbnNwb3J0Jyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYXZhaWxhYmxlVHJhbnNwb3J0cykge1xuICByZXR1cm4ge1xuICAgIGZpbHRlclRvRW5hYmxlZDogZnVuY3Rpb24odHJhbnNwb3J0c1doaXRlbGlzdCwgaW5mbykge1xuICAgICAgdmFyIHRyYW5zcG9ydHMgPSB7XG4gICAgICAgIG1haW46IFtdXG4gICAgICAsIGZhY2FkZTogW11cbiAgICAgIH07XG4gICAgICBpZiAoIXRyYW5zcG9ydHNXaGl0ZWxpc3QpIHtcbiAgICAgICAgdHJhbnNwb3J0c1doaXRlbGlzdCA9IFtdO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdHJhbnNwb3J0c1doaXRlbGlzdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdHJhbnNwb3J0c1doaXRlbGlzdCA9IFt0cmFuc3BvcnRzV2hpdGVsaXN0XTtcbiAgICAgIH1cblxuICAgICAgYXZhaWxhYmxlVHJhbnNwb3J0cy5mb3JFYWNoKGZ1bmN0aW9uKHRyYW5zKSB7XG4gICAgICAgIGlmICghdHJhbnMpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHJhbnMudHJhbnNwb3J0TmFtZSA9PT0gJ3dlYnNvY2tldCcgJiYgaW5mby53ZWJzb2NrZXQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgZGVidWcoJ2Rpc2FibGVkIGZyb20gc2VydmVyJywgJ3dlYnNvY2tldCcpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0cmFuc3BvcnRzV2hpdGVsaXN0Lmxlbmd0aCAmJlxuICAgICAgICAgICAgdHJhbnNwb3J0c1doaXRlbGlzdC5pbmRleE9mKHRyYW5zLnRyYW5zcG9ydE5hbWUpID09PSAtMSkge1xuICAgICAgICAgIGRlYnVnKCdub3QgaW4gd2hpdGVsaXN0JywgdHJhbnMudHJhbnNwb3J0TmFtZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyYW5zLmVuYWJsZWQoaW5mbykpIHtcbiAgICAgICAgICBkZWJ1ZygnZW5hYmxlZCcsIHRyYW5zLnRyYW5zcG9ydE5hbWUpO1xuICAgICAgICAgIHRyYW5zcG9ydHMubWFpbi5wdXNoKHRyYW5zKTtcbiAgICAgICAgICBpZiAodHJhbnMuZmFjYWRlVHJhbnNwb3J0KSB7XG4gICAgICAgICAgICB0cmFuc3BvcnRzLmZhY2FkZS5wdXNoKHRyYW5zLmZhY2FkZVRyYW5zcG9ydCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRlYnVnKCdkaXNhYmxlZCcsIHRyYW5zLnRyYW5zcG9ydE5hbWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB0cmFuc3BvcnRzO1xuICAgIH1cbiAgfTtcbn07XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCJkZWJ1Z1wiOjU1fV0sNTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIFVSTCA9IHJlcXVpcmUoJ3VybC1wYXJzZScpO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnV0aWxzOnVybCcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0T3JpZ2luOiBmdW5jdGlvbih1cmwpIHtcbiAgICBpZiAoIXVybCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHAgPSBuZXcgVVJMKHVybCk7XG4gICAgaWYgKHAucHJvdG9jb2wgPT09ICdmaWxlOicpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBwb3J0ID0gcC5wb3J0O1xuICAgIGlmICghcG9ydCkge1xuICAgICAgcG9ydCA9IChwLnByb3RvY29sID09PSAnaHR0cHM6JykgPyAnNDQzJyA6ICc4MCc7XG4gICAgfVxuXG4gICAgcmV0dXJuIHAucHJvdG9jb2wgKyAnLy8nICsgcC5ob3N0bmFtZSArICc6JyArIHBvcnQ7XG4gIH1cblxuLCBpc09yaWdpbkVxdWFsOiBmdW5jdGlvbihhLCBiKSB7XG4gICAgdmFyIHJlcyA9IHRoaXMuZ2V0T3JpZ2luKGEpID09PSB0aGlzLmdldE9yaWdpbihiKTtcbiAgICBkZWJ1Zygnc2FtZScsIGEsIGIsIHJlcyk7XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuXG4sIGlzU2NoZW1lRXF1YWw6IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gKGEuc3BsaXQoJzonKVswXSA9PT0gYi5zcGxpdCgnOicpWzBdKTtcbiAgfVxuXG4sIGFkZFBhdGg6IGZ1bmN0aW9uICh1cmwsIHBhdGgpIHtcbiAgICB2YXIgcXMgPSB1cmwuc3BsaXQoJz8nKTtcbiAgICByZXR1cm4gcXNbMF0gKyBwYXRoICsgKHFzWzFdID8gJz8nICsgcXNbMV0gOiAnJyk7XG4gIH1cblxuLCBhZGRRdWVyeTogZnVuY3Rpb24gKHVybCwgcSkge1xuICAgIHJldHVybiB1cmwgKyAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAoJz8nICsgcSkgOiAoJyYnICsgcSkpO1xuICB9XG59O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiZGVidWdcIjo1NSxcInVybC1wYXJzZVwiOjYxfV0sNTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xubW9kdWxlLmV4cG9ydHMgPSAnMS4xLjQnO1xuXG59LHt9XSw1NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiAqIEhlbHBlcnMuXG4gKi9cblxudmFyIHMgPSAxMDAwXG52YXIgbSA9IHMgKiA2MFxudmFyIGggPSBtICogNjBcbnZhciBkID0gaCAqIDI0XG52YXIgeSA9IGQgKiAzNjUuMjVcblxuLyoqXG4gKiBQYXJzZSBvciBmb3JtYXQgdGhlIGdpdmVuIGB2YWxgLlxuICpcbiAqIE9wdGlvbnM6XG4gKlxuICogIC0gYGxvbmdgIHZlcmJvc2UgZm9ybWF0dGluZyBbZmFsc2VdXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSB2YWxcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEB0aHJvd3Mge0Vycm9yfSB0aHJvdyBhbiBlcnJvciBpZiB2YWwgaXMgbm90IGEgbm9uLWVtcHR5IHN0cmluZyBvciBhIG51bWJlclxuICogQHJldHVybiB7U3RyaW5nfE51bWJlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbFxuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKVxuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdudW1iZXInICYmIGlzTmFOKHZhbCkgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMubG9uZyA/XG5cdFx0XHRmbXRMb25nKHZhbCkgOlxuXHRcdFx0Zm10U2hvcnQodmFsKVxuICB9XG4gIHRocm93IG5ldyBFcnJvcigndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICsgSlNPTi5zdHJpbmdpZnkodmFsKSlcbn1cblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gYHN0cmAgYW5kIHJldHVybiBtaWxsaXNlY29uZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XG4gIHN0ciA9IFN0cmluZyhzdHIpXG4gIGlmIChzdHIubGVuZ3RoID4gMTAwMDApIHtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgbWF0Y2ggPSAvXigoPzpcXGQrKT9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKHN0cilcbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciBuID0gcGFyc2VGbG9hdChtYXRjaFsxXSlcbiAgdmFyIHR5cGUgPSAobWF0Y2hbMl0gfHwgJ21zJykudG9Mb3dlckNhc2UoKVxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHlcbiAgICBjYXNlICdkYXlzJzpcbiAgICBjYXNlICdkYXknOlxuICAgIGNhc2UgJ2QnOlxuICAgICAgcmV0dXJuIG4gKiBkXG4gICAgY2FzZSAnaG91cnMnOlxuICAgIGNhc2UgJ2hvdXInOlxuICAgIGNhc2UgJ2hycyc6XG4gICAgY2FzZSAnaHInOlxuICAgIGNhc2UgJ2gnOlxuICAgICAgcmV0dXJuIG4gKiBoXG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtXG4gICAgY2FzZSAnc2Vjb25kcyc6XG4gICAgY2FzZSAnc2Vjb25kJzpcbiAgICBjYXNlICdzZWNzJzpcbiAgICBjYXNlICdzZWMnOlxuICAgIGNhc2UgJ3MnOlxuICAgICAgcmV0dXJuIG4gKiBzXG4gICAgY2FzZSAnbWlsbGlzZWNvbmRzJzpcbiAgICBjYXNlICdtaWxsaXNlY29uZCc6XG4gICAgY2FzZSAnbXNlY3MnOlxuICAgIGNhc2UgJ21zZWMnOlxuICAgIGNhc2UgJ21zJzpcbiAgICAgIHJldHVybiBuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG4vKipcbiAqIFNob3J0IGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdFNob3J0KG1zKSB7XG4gIGlmIChtcyA+PSBkKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBkKSArICdkJ1xuICB9XG4gIGlmIChtcyA+PSBoKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBoKSArICdoJ1xuICB9XG4gIGlmIChtcyA+PSBtKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJ1xuICB9XG4gIGlmIChtcyA+PSBzKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBzKSArICdzJ1xuICB9XG4gIHJldHVybiBtcyArICdtcydcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdExvbmcobXMpIHtcbiAgcmV0dXJuIHBsdXJhbChtcywgZCwgJ2RheScpIHx8XG4gICAgcGx1cmFsKG1zLCBoLCAnaG91cicpIHx8XG4gICAgcGx1cmFsKG1zLCBtLCAnbWludXRlJykgfHxcbiAgICBwbHVyYWwobXMsIHMsICdzZWNvbmQnKSB8fFxuICAgIG1zICsgJyBtcydcbn1cblxuLyoqXG4gKiBQbHVyYWxpemF0aW9uIGhlbHBlci5cbiAqL1xuXG5mdW5jdGlvbiBwbHVyYWwobXMsIG4sIG5hbWUpIHtcbiAgaWYgKG1zIDwgbikge1xuICAgIHJldHVyblxuICB9XG4gIGlmIChtcyA8IG4gKiAxLjUpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihtcyAvIG4pICsgJyAnICsgbmFtZVxuICB9XG4gIHJldHVybiBNYXRoLmNlaWwobXMgLyBuKSArICcgJyArIG5hbWUgKyAncydcbn1cblxufSx7fV0sNTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbi8qKlxuICogVGhpcyBpcyB0aGUgd2ViIGJyb3dzZXIgaW1wbGVtZW50YXRpb24gb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2RlYnVnJyk7XG5leHBvcnRzLmxvZyA9IGxvZztcbmV4cG9ydHMuZm9ybWF0QXJncyA9IGZvcm1hdEFyZ3M7XG5leHBvcnRzLnNhdmUgPSBzYXZlO1xuZXhwb3J0cy5sb2FkID0gbG9hZDtcbmV4cG9ydHMudXNlQ29sb3JzID0gdXNlQ29sb3JzO1xuZXhwb3J0cy5zdG9yYWdlID0gJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZVxuICAgICAgICAgICAgICAgJiYgJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZS5zdG9yYWdlXG4gICAgICAgICAgICAgICAgICA/IGNocm9tZS5zdG9yYWdlLmxvY2FsXG4gICAgICAgICAgICAgICAgICA6IGxvY2Fsc3RvcmFnZSgpO1xuXG4vKipcbiAqIENvbG9ycy5cbiAqL1xuXG5leHBvcnRzLmNvbG9ycyA9IFtcbiAgJ2xpZ2h0c2VhZ3JlZW4nLFxuICAnZm9yZXN0Z3JlZW4nLFxuICAnZ29sZGVucm9kJyxcbiAgJ2RvZGdlcmJsdWUnLFxuICAnZGFya29yY2hpZCcsXG4gICdjcmltc29uJ1xuXTtcblxuLyoqXG4gKiBDdXJyZW50bHkgb25seSBXZWJLaXQtYmFzZWQgV2ViIEluc3BlY3RvcnMsIEZpcmVmb3ggPj0gdjMxLFxuICogYW5kIHRoZSBGaXJlYnVnIGV4dGVuc2lvbiAoYW55IEZpcmVmb3ggdmVyc2lvbikgYXJlIGtub3duXG4gKiB0byBzdXBwb3J0IFwiJWNcIiBDU1MgY3VzdG9taXphdGlvbnMuXG4gKlxuICogVE9ETzogYWRkIGEgYGxvY2FsU3RvcmFnZWAgdmFyaWFibGUgdG8gZXhwbGljaXRseSBlbmFibGUvZGlzYWJsZSBjb2xvcnNcbiAqL1xuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIC8vIE5COiBJbiBhbiBFbGVjdHJvbiBwcmVsb2FkIHNjcmlwdCwgZG9jdW1lbnQgd2lsbCBiZSBkZWZpbmVkIGJ1dCBub3QgZnVsbHlcbiAgLy8gaW5pdGlhbGl6ZWQuIFNpbmNlIHdlIGtub3cgd2UncmUgaW4gQ2hyb21lLCB3ZSdsbCBqdXN0IGRldGVjdCB0aGlzIGNhc2VcbiAgLy8gZXhwbGljaXRseVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnByb2Nlc3MgJiYgd2luZG93LnByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLy8gaXMgd2Via2l0PyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNjQ1OTYwNi8zNzY3NzNcbiAgLy8gZG9jdW1lbnQgaXMgdW5kZWZpbmVkIGluIHJlYWN0LW5hdGl2ZTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9wdWxsLzE2MzJcbiAgcmV0dXJuICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLldlYmtpdEFwcGVhcmFuY2UpIHx8XG4gICAgLy8gaXMgZmlyZWJ1Zz8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzk4MTIwLzM3Njc3M1xuICAgICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cgJiYgd2luZG93LmNvbnNvbGUgJiYgKHdpbmRvdy5jb25zb2xlLmZpcmVidWcgfHwgKHdpbmRvdy5jb25zb2xlLmV4Y2VwdGlvbiAmJiB3aW5kb3cuY29uc29sZS50YWJsZSkpKSB8fFxuICAgIC8vIGlzIGZpcmVmb3ggPj0gdjMxP1xuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvVG9vbHMvV2ViX0NvbnNvbGUjU3R5bGluZ19tZXNzYWdlc1xuICAgICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkubWF0Y2goL2ZpcmVmb3hcXC8oXFxkKykvKSAmJiBwYXJzZUludChSZWdFeHAuJDEsIDEwKSA+PSAzMSkgfHxcbiAgICAvLyBkb3VibGUgY2hlY2sgd2Via2l0IGluIHVzZXJBZ2VudCBqdXN0IGluIGNhc2Ugd2UgYXJlIGluIGEgd29ya2VyXG4gICAgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvciAmJiBuYXZpZ2F0b3IudXNlckFnZW50ICYmIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvYXBwbGV3ZWJraXRcXC8oXFxkKykvKSk7XG59XG5cbi8qKlxuICogTWFwICVqIHRvIGBKU09OLnN0cmluZ2lmeSgpYCwgc2luY2Ugbm8gV2ViIEluc3BlY3RvcnMgZG8gdGhhdCBieSBkZWZhdWx0LlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycy5qID0gZnVuY3Rpb24odikge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuICdbVW5leHBlY3RlZEpTT05QYXJzZUVycm9yXTogJyArIGVyci5tZXNzYWdlO1xuICB9XG59O1xuXG5cbi8qKlxuICogQ29sb3JpemUgbG9nIGFyZ3VtZW50cyBpZiBlbmFibGVkLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZm9ybWF0QXJncyhhcmdzKSB7XG4gIHZhciB1c2VDb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcblxuICBhcmdzWzBdID0gKHVzZUNvbG9ycyA/ICclYycgOiAnJylcbiAgICArIHRoaXMubmFtZXNwYWNlXG4gICAgKyAodXNlQ29sb3JzID8gJyAlYycgOiAnICcpXG4gICAgKyBhcmdzWzBdXG4gICAgKyAodXNlQ29sb3JzID8gJyVjICcgOiAnICcpXG4gICAgKyAnKycgKyBleHBvcnRzLmh1bWFuaXplKHRoaXMuZGlmZik7XG5cbiAgaWYgKCF1c2VDb2xvcnMpIHJldHVybjtcblxuICB2YXIgYyA9ICdjb2xvcjogJyArIHRoaXMuY29sb3I7XG4gIGFyZ3Muc3BsaWNlKDEsIDAsIGMsICdjb2xvcjogaW5oZXJpdCcpXG5cbiAgLy8gdGhlIGZpbmFsIFwiJWNcIiBpcyBzb21ld2hhdCB0cmlja3ksIGJlY2F1c2UgdGhlcmUgY291bGQgYmUgb3RoZXJcbiAgLy8gYXJndW1lbnRzIHBhc3NlZCBlaXRoZXIgYmVmb3JlIG9yIGFmdGVyIHRoZSAlYywgc28gd2UgbmVlZCB0b1xuICAvLyBmaWd1cmUgb3V0IHRoZSBjb3JyZWN0IGluZGV4IHRvIGluc2VydCB0aGUgQ1NTIGludG9cbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxhc3RDID0gMDtcbiAgYXJnc1swXS5yZXBsYWNlKC8lW2EtekEtWiVdL2csIGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgaWYgKCclJScgPT09IG1hdGNoKSByZXR1cm47XG4gICAgaW5kZXgrKztcbiAgICBpZiAoJyVjJyA9PT0gbWF0Y2gpIHtcbiAgICAgIC8vIHdlIG9ubHkgYXJlIGludGVyZXN0ZWQgaW4gdGhlICpsYXN0KiAlY1xuICAgICAgLy8gKHRoZSB1c2VyIG1heSBoYXZlIHByb3ZpZGVkIHRoZWlyIG93bilcbiAgICAgIGxhc3RDID0gaW5kZXg7XG4gICAgfVxuICB9KTtcblxuICBhcmdzLnNwbGljZShsYXN0QywgMCwgYyk7XG59XG5cbi8qKlxuICogSW52b2tlcyBgY29uc29sZS5sb2coKWAgd2hlbiBhdmFpbGFibGUuXG4gKiBOby1vcCB3aGVuIGBjb25zb2xlLmxvZ2AgaXMgbm90IGEgXCJmdW5jdGlvblwiLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gbG9nKCkge1xuICAvLyB0aGlzIGhhY2tlcnkgaXMgcmVxdWlyZWQgZm9yIElFOC85LCB3aGVyZVxuICAvLyB0aGUgYGNvbnNvbGUubG9nYCBmdW5jdGlvbiBkb2Vzbid0IGhhdmUgJ2FwcGx5J1xuICByZXR1cm4gJ29iamVjdCcgPT09IHR5cGVvZiBjb25zb2xlXG4gICAgJiYgY29uc29sZS5sb2dcbiAgICAmJiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlLmxvZywgY29uc29sZSwgYXJndW1lbnRzKTtcbn1cblxuLyoqXG4gKiBTYXZlIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2F2ZShuYW1lc3BhY2VzKSB7XG4gIHRyeSB7XG4gICAgaWYgKG51bGwgPT0gbmFtZXNwYWNlcykge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLnJlbW92ZUl0ZW0oJ2RlYnVnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZyA9IG5hbWVzcGFjZXM7XG4gICAgfVxuICB9IGNhdGNoKGUpIHt9XG59XG5cbi8qKlxuICogTG9hZCBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfSByZXR1cm5zIHRoZSBwcmV2aW91c2x5IHBlcnNpc3RlZCBkZWJ1ZyBtb2Rlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9hZCgpIHtcbiAgdmFyIHI7XG4gIHRyeSB7XG4gICAgciA9IGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZztcbiAgfSBjYXRjaChlKSB7fVxuXG4gIC8vIElmIGRlYnVnIGlzbid0IHNldCBpbiBMUywgYW5kIHdlJ3JlIGluIEVsZWN0cm9uLCB0cnkgdG8gbG9hZCAkREVCVUdcbiAgaWYgKCFyICYmIHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiAnZW52JyBpbiBwcm9jZXNzKSB7XG4gICAgciA9IHByb2Nlc3MuZW52LkRFQlVHO1xuICB9XG5cbiAgcmV0dXJuIHI7XG59XG5cbi8qKlxuICogRW5hYmxlIG5hbWVzcGFjZXMgbGlzdGVkIGluIGBsb2NhbFN0b3JhZ2UuZGVidWdgIGluaXRpYWxseS5cbiAqL1xuXG5leHBvcnRzLmVuYWJsZShsb2FkKCkpO1xuXG4vKipcbiAqIExvY2Fsc3RvcmFnZSBhdHRlbXB0cyB0byByZXR1cm4gdGhlIGxvY2Fsc3RvcmFnZS5cbiAqXG4gKiBUaGlzIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHNhZmFyaSB0aHJvd3NcbiAqIHdoZW4gYSB1c2VyIGRpc2FibGVzIGNvb2tpZXMvbG9jYWxzdG9yYWdlXG4gKiBhbmQgeW91IGF0dGVtcHQgdG8gYWNjZXNzIGl0LlxuICpcbiAqIEByZXR1cm4ge0xvY2FsU3RvcmFnZX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGxvY2Fsc3RvcmFnZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgfSBjYXRjaCAoZSkge31cbn1cblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9KVxuXG59LHtcIi4vZGVidWdcIjo1Nn1dLDU2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBjb21tb24gbG9naWMgZm9yIGJvdGggdGhlIE5vZGUuanMgYW5kIHdlYiBicm93c2VyXG4gKiBpbXBsZW1lbnRhdGlvbnMgb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVEZWJ1Zy5kZWJ1ZyA9IGNyZWF0ZURlYnVnWydkZWZhdWx0J10gPSBjcmVhdGVEZWJ1ZztcbmV4cG9ydHMuY29lcmNlID0gY29lcmNlO1xuZXhwb3J0cy5kaXNhYmxlID0gZGlzYWJsZTtcbmV4cG9ydHMuZW5hYmxlID0gZW5hYmxlO1xuZXhwb3J0cy5lbmFibGVkID0gZW5hYmxlZDtcbmV4cG9ydHMuaHVtYW5pemUgPSByZXF1aXJlKCdtcycpO1xuXG4vKipcbiAqIFRoZSBjdXJyZW50bHkgYWN0aXZlIGRlYnVnIG1vZGUgbmFtZXMsIGFuZCBuYW1lcyB0byBza2lwLlxuICovXG5cbmV4cG9ydHMubmFtZXMgPSBbXTtcbmV4cG9ydHMuc2tpcHMgPSBbXTtcblxuLyoqXG4gKiBNYXAgb2Ygc3BlY2lhbCBcIiVuXCIgaGFuZGxpbmcgZnVuY3Rpb25zLCBmb3IgdGhlIGRlYnVnIFwiZm9ybWF0XCIgYXJndW1lbnQuXG4gKlxuICogVmFsaWQga2V5IG5hbWVzIGFyZSBhIHNpbmdsZSwgbG93ZXIgb3IgdXBwZXItY2FzZSBsZXR0ZXIsIGkuZS4gXCJuXCIgYW5kIFwiTlwiLlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycyA9IHt9O1xuXG4vKipcbiAqIFByZXZpb3VzIGxvZyB0aW1lc3RhbXAuXG4gKi9cblxudmFyIHByZXZUaW1lO1xuXG4vKipcbiAqIFNlbGVjdCBhIGNvbG9yLlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZVxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2VsZWN0Q29sb3IobmFtZXNwYWNlKSB7XG4gIHZhciBoYXNoID0gMCwgaTtcblxuICBmb3IgKGkgaW4gbmFtZXNwYWNlKSB7XG4gICAgaGFzaCAgPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIG5hbWVzcGFjZS5jaGFyQ29kZUF0KGkpO1xuICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cblxuICByZXR1cm4gZXhwb3J0cy5jb2xvcnNbTWF0aC5hYnMoaGFzaCkgJSBleHBvcnRzLmNvbG9ycy5sZW5ndGhdO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIGRlYnVnZ2VyIHdpdGggdGhlIGdpdmVuIGBuYW1lc3BhY2VgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVEZWJ1ZyhuYW1lc3BhY2UpIHtcblxuICBmdW5jdGlvbiBkZWJ1ZygpIHtcbiAgICAvLyBkaXNhYmxlZD9cbiAgICBpZiAoIWRlYnVnLmVuYWJsZWQpIHJldHVybjtcblxuICAgIHZhciBzZWxmID0gZGVidWc7XG5cbiAgICAvLyBzZXQgYGRpZmZgIHRpbWVzdGFtcFxuICAgIHZhciBjdXJyID0gK25ldyBEYXRlKCk7XG4gICAgdmFyIG1zID0gY3VyciAtIChwcmV2VGltZSB8fCBjdXJyKTtcbiAgICBzZWxmLmRpZmYgPSBtcztcbiAgICBzZWxmLnByZXYgPSBwcmV2VGltZTtcbiAgICBzZWxmLmN1cnIgPSBjdXJyO1xuICAgIHByZXZUaW1lID0gY3VycjtcblxuICAgIC8vIHR1cm4gdGhlIGBhcmd1bWVudHNgIGludG8gYSBwcm9wZXIgQXJyYXlcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuXG4gICAgYXJnc1swXSA9IGV4cG9ydHMuY29lcmNlKGFyZ3NbMF0pO1xuXG4gICAgaWYgKCdzdHJpbmcnICE9PSB0eXBlb2YgYXJnc1swXSkge1xuICAgICAgLy8gYW55dGhpbmcgZWxzZSBsZXQncyBpbnNwZWN0IHdpdGggJU9cbiAgICAgIGFyZ3MudW5zaGlmdCgnJU8nKTtcbiAgICB9XG5cbiAgICAvLyBhcHBseSBhbnkgYGZvcm1hdHRlcnNgIHRyYW5zZm9ybWF0aW9uc1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgYXJnc1swXSA9IGFyZ3NbMF0ucmVwbGFjZSgvJShbYS16QS1aJV0pL2csIGZ1bmN0aW9uKG1hdGNoLCBmb3JtYXQpIHtcbiAgICAgIC8vIGlmIHdlIGVuY291bnRlciBhbiBlc2NhcGVkICUgdGhlbiBkb24ndCBpbmNyZWFzZSB0aGUgYXJyYXkgaW5kZXhcbiAgICAgIGlmIChtYXRjaCA9PT0gJyUlJykgcmV0dXJuIG1hdGNoO1xuICAgICAgaW5kZXgrKztcbiAgICAgIHZhciBmb3JtYXR0ZXIgPSBleHBvcnRzLmZvcm1hdHRlcnNbZm9ybWF0XTtcbiAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZm9ybWF0dGVyKSB7XG4gICAgICAgIHZhciB2YWwgPSBhcmdzW2luZGV4XTtcbiAgICAgICAgbWF0Y2ggPSBmb3JtYXR0ZXIuY2FsbChzZWxmLCB2YWwpO1xuXG4gICAgICAgIC8vIG5vdyB3ZSBuZWVkIHRvIHJlbW92ZSBgYXJnc1tpbmRleF1gIHNpbmNlIGl0J3MgaW5saW5lZCBpbiB0aGUgYGZvcm1hdGBcbiAgICAgICAgYXJncy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICBpbmRleC0tO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH0pO1xuXG4gICAgLy8gYXBwbHkgZW52LXNwZWNpZmljIGZvcm1hdHRpbmcgKGNvbG9ycywgZXRjLilcbiAgICBleHBvcnRzLmZvcm1hdEFyZ3MuY2FsbChzZWxmLCBhcmdzKTtcblxuICAgIHZhciBsb2dGbiA9IGRlYnVnLmxvZyB8fCBleHBvcnRzLmxvZyB8fCBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO1xuICAgIGxvZ0ZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICB9XG5cbiAgZGVidWcubmFtZXNwYWNlID0gbmFtZXNwYWNlO1xuICBkZWJ1Zy5lbmFibGVkID0gZXhwb3J0cy5lbmFibGVkKG5hbWVzcGFjZSk7XG4gIGRlYnVnLnVzZUNvbG9ycyA9IGV4cG9ydHMudXNlQ29sb3JzKCk7XG4gIGRlYnVnLmNvbG9yID0gc2VsZWN0Q29sb3IobmFtZXNwYWNlKTtcblxuICAvLyBlbnYtc3BlY2lmaWMgaW5pdGlhbGl6YXRpb24gbG9naWMgZm9yIGRlYnVnIGluc3RhbmNlc1xuICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGV4cG9ydHMuaW5pdCkge1xuICAgIGV4cG9ydHMuaW5pdChkZWJ1Zyk7XG4gIH1cblxuICByZXR1cm4gZGVidWc7XG59XG5cbi8qKlxuICogRW5hYmxlcyBhIGRlYnVnIG1vZGUgYnkgbmFtZXNwYWNlcy4gVGhpcyBjYW4gaW5jbHVkZSBtb2Rlc1xuICogc2VwYXJhdGVkIGJ5IGEgY29sb24gYW5kIHdpbGRjYXJkcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBlbmFibGUobmFtZXNwYWNlcykge1xuICBleHBvcnRzLnNhdmUobmFtZXNwYWNlcyk7XG5cbiAgZXhwb3J0cy5uYW1lcyA9IFtdO1xuICBleHBvcnRzLnNraXBzID0gW107XG5cbiAgdmFyIHNwbGl0ID0gKHR5cGVvZiBuYW1lc3BhY2VzID09PSAnc3RyaW5nJyA/IG5hbWVzcGFjZXMgOiAnJykuc3BsaXQoL1tcXHMsXSsvKTtcbiAgdmFyIGxlbiA9IHNwbGl0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKCFzcGxpdFtpXSkgY29udGludWU7IC8vIGlnbm9yZSBlbXB0eSBzdHJpbmdzXG4gICAgbmFtZXNwYWNlcyA9IHNwbGl0W2ldLnJlcGxhY2UoL1xcKi9nLCAnLio/Jyk7XG4gICAgaWYgKG5hbWVzcGFjZXNbMF0gPT09ICctJykge1xuICAgICAgZXhwb3J0cy5za2lwcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcy5zdWJzdHIoMSkgKyAnJCcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5uYW1lcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcyArICckJykpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIERpc2FibGUgZGVidWcgb3V0cHV0LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgZXhwb3J0cy5lbmFibGUoJycpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gbW9kZSBuYW1lIGlzIGVuYWJsZWQsIGZhbHNlIG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlZChuYW1lKSB7XG4gIHZhciBpLCBsZW47XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMuc2tpcHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5za2lwc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMubmFtZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5uYW1lc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIENvZXJjZSBgdmFsYC5cbiAqXG4gKiBAcGFyYW0ge01peGVkfSB2YWxcbiAqIEByZXR1cm4ge01peGVkfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29lcmNlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiB2YWwuc3RhY2sgfHwgdmFsLm1lc3NhZ2U7XG4gIHJldHVybiB2YWw7XG59XG5cbn0se1wibXNcIjo1NH1dLDU3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbmlmICh0eXBlb2YgT2JqZWN0LmNyZWF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAvLyBpbXBsZW1lbnRhdGlvbiBmcm9tIHN0YW5kYXJkIG5vZGUuanMgJ3V0aWwnIG1vZHVsZVxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgY3Rvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ3Rvci5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBjdG9yLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xufSBlbHNlIHtcbiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIHZhciBUZW1wQ3RvciA9IGZ1bmN0aW9uICgpIHt9XG4gICAgVGVtcEN0b3IucHJvdG90eXBlID0gc3VwZXJDdG9yLnByb3RvdHlwZVxuICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKClcbiAgICBjdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGN0b3JcbiAgfVxufVxuXG59LHt9XSw1ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4vKiEgSlNPTiB2My4zLjIgfCBodHRwOi8vYmVzdGllanMuZ2l0aHViLmlvL2pzb24zIHwgQ29weXJpZ2h0IDIwMTItMjAxNCwgS2l0IENhbWJyaWRnZSB8IGh0dHA6Ly9raXQubWl0LWxpY2Vuc2Uub3JnICovXG47KGZ1bmN0aW9uICgpIHtcbiAgLy8gRGV0ZWN0IHRoZSBgZGVmaW5lYCBmdW5jdGlvbiBleHBvc2VkIGJ5IGFzeW5jaHJvbm91cyBtb2R1bGUgbG9hZGVycy4gVGhlXG4gIC8vIHN0cmljdCBgZGVmaW5lYCBjaGVjayBpcyBuZWNlc3NhcnkgZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBgci5qc2AuXG4gIHZhciBpc0xvYWRlciA9IHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kO1xuXG4gIC8vIEEgc2V0IG9mIHR5cGVzIHVzZWQgdG8gZGlzdGluZ3Vpc2ggb2JqZWN0cyBmcm9tIHByaW1pdGl2ZXMuXG4gIHZhciBvYmplY3RUeXBlcyA9IHtcbiAgICBcImZ1bmN0aW9uXCI6IHRydWUsXG4gICAgXCJvYmplY3RcIjogdHJ1ZVxuICB9O1xuXG4gIC8vIERldGVjdCB0aGUgYGV4cG9ydHNgIG9iamVjdCBleHBvc2VkIGJ5IENvbW1vbkpTIGltcGxlbWVudGF0aW9ucy5cbiAgdmFyIGZyZWVFeHBvcnRzID0gb2JqZWN0VHlwZXNbdHlwZW9mIGV4cG9ydHNdICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuICAvLyBVc2UgdGhlIGBnbG9iYWxgIG9iamVjdCBleHBvc2VkIGJ5IE5vZGUgKGluY2x1ZGluZyBCcm93c2VyaWZ5IHZpYVxuICAvLyBgaW5zZXJ0LW1vZHVsZS1nbG9iYWxzYCksIE5hcndoYWwsIGFuZCBSaW5nbyBhcyB0aGUgZGVmYXVsdCBjb250ZXh0LFxuICAvLyBhbmQgdGhlIGB3aW5kb3dgIG9iamVjdCBpbiBicm93c2Vycy4gUmhpbm8gZXhwb3J0cyBhIGBnbG9iYWxgIGZ1bmN0aW9uXG4gIC8vIGluc3RlYWQuXG4gIHZhciByb290ID0gb2JqZWN0VHlwZXNbdHlwZW9mIHdpbmRvd10gJiYgd2luZG93IHx8IHRoaXMsXG4gICAgICBmcmVlR2xvYmFsID0gZnJlZUV4cG9ydHMgJiYgb2JqZWN0VHlwZXNbdHlwZW9mIG1vZHVsZV0gJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgdHlwZW9mIGdsb2JhbCA9PSBcIm9iamVjdFwiICYmIGdsb2JhbDtcblxuICBpZiAoZnJlZUdsb2JhbCAmJiAoZnJlZUdsb2JhbFtcImdsb2JhbFwiXSA9PT0gZnJlZUdsb2JhbCB8fCBmcmVlR2xvYmFsW1wid2luZG93XCJdID09PSBmcmVlR2xvYmFsIHx8IGZyZWVHbG9iYWxbXCJzZWxmXCJdID09PSBmcmVlR2xvYmFsKSkge1xuICAgIHJvb3QgPSBmcmVlR2xvYmFsO1xuICB9XG5cbiAgLy8gUHVibGljOiBJbml0aWFsaXplcyBKU09OIDMgdXNpbmcgdGhlIGdpdmVuIGBjb250ZXh0YCBvYmplY3QsIGF0dGFjaGluZyB0aGVcbiAgLy8gYHN0cmluZ2lmeWAgYW5kIGBwYXJzZWAgZnVuY3Rpb25zIHRvIHRoZSBzcGVjaWZpZWQgYGV4cG9ydHNgIG9iamVjdC5cbiAgZnVuY3Rpb24gcnVuSW5Db250ZXh0KGNvbnRleHQsIGV4cG9ydHMpIHtcbiAgICBjb250ZXh0IHx8IChjb250ZXh0ID0gcm9vdFtcIk9iamVjdFwiXSgpKTtcbiAgICBleHBvcnRzIHx8IChleHBvcnRzID0gcm9vdFtcIk9iamVjdFwiXSgpKTtcblxuICAgIC8vIE5hdGl2ZSBjb25zdHJ1Y3RvciBhbGlhc2VzLlxuICAgIHZhciBOdW1iZXIgPSBjb250ZXh0W1wiTnVtYmVyXCJdIHx8IHJvb3RbXCJOdW1iZXJcIl0sXG4gICAgICAgIFN0cmluZyA9IGNvbnRleHRbXCJTdHJpbmdcIl0gfHwgcm9vdFtcIlN0cmluZ1wiXSxcbiAgICAgICAgT2JqZWN0ID0gY29udGV4dFtcIk9iamVjdFwiXSB8fCByb290W1wiT2JqZWN0XCJdLFxuICAgICAgICBEYXRlID0gY29udGV4dFtcIkRhdGVcIl0gfHwgcm9vdFtcIkRhdGVcIl0sXG4gICAgICAgIFN5bnRheEVycm9yID0gY29udGV4dFtcIlN5bnRheEVycm9yXCJdIHx8IHJvb3RbXCJTeW50YXhFcnJvclwiXSxcbiAgICAgICAgVHlwZUVycm9yID0gY29udGV4dFtcIlR5cGVFcnJvclwiXSB8fCByb290W1wiVHlwZUVycm9yXCJdLFxuICAgICAgICBNYXRoID0gY29udGV4dFtcIk1hdGhcIl0gfHwgcm9vdFtcIk1hdGhcIl0sXG4gICAgICAgIG5hdGl2ZUpTT04gPSBjb250ZXh0W1wiSlNPTlwiXSB8fCByb290W1wiSlNPTlwiXTtcblxuICAgIC8vIERlbGVnYXRlIHRvIHRoZSBuYXRpdmUgYHN0cmluZ2lmeWAgYW5kIGBwYXJzZWAgaW1wbGVtZW50YXRpb25zLlxuICAgIGlmICh0eXBlb2YgbmF0aXZlSlNPTiA9PSBcIm9iamVjdFwiICYmIG5hdGl2ZUpTT04pIHtcbiAgICAgIGV4cG9ydHMuc3RyaW5naWZ5ID0gbmF0aXZlSlNPTi5zdHJpbmdpZnk7XG4gICAgICBleHBvcnRzLnBhcnNlID0gbmF0aXZlSlNPTi5wYXJzZTtcbiAgICB9XG5cbiAgICAvLyBDb252ZW5pZW5jZSBhbGlhc2VzLlxuICAgIHZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGUsXG4gICAgICAgIGdldENsYXNzID0gb2JqZWN0UHJvdG8udG9TdHJpbmcsXG4gICAgICAgIGlzUHJvcGVydHksIGZvckVhY2gsIHVuZGVmO1xuXG4gICAgLy8gVGVzdCB0aGUgYERhdGUjZ2V0VVRDKmAgbWV0aG9kcy4gQmFzZWQgb24gd29yayBieSBAWWFmZmxlLlxuICAgIHZhciBpc0V4dGVuZGVkID0gbmV3IERhdGUoLTM1MDk4MjczMzQ1NzMyOTIpO1xuICAgIHRyeSB7XG4gICAgICAvLyBUaGUgYGdldFVUQ0Z1bGxZZWFyYCwgYE1vbnRoYCwgYW5kIGBEYXRlYCBtZXRob2RzIHJldHVybiBub25zZW5zaWNhbFxuICAgICAgLy8gcmVzdWx0cyBmb3IgY2VydGFpbiBkYXRlcyBpbiBPcGVyYSA+PSAxMC41My5cbiAgICAgIGlzRXh0ZW5kZWQgPSBpc0V4dGVuZGVkLmdldFVUQ0Z1bGxZZWFyKCkgPT0gLTEwOTI1MiAmJiBpc0V4dGVuZGVkLmdldFVUQ01vbnRoKCkgPT09IDAgJiYgaXNFeHRlbmRlZC5nZXRVVENEYXRlKCkgPT09IDEgJiZcbiAgICAgICAgLy8gU2FmYXJpIDwgMi4wLjIgc3RvcmVzIHRoZSBpbnRlcm5hbCBtaWxsaXNlY29uZCB0aW1lIHZhbHVlIGNvcnJlY3RseSxcbiAgICAgICAgLy8gYnV0IGNsaXBzIHRoZSB2YWx1ZXMgcmV0dXJuZWQgYnkgdGhlIGRhdGUgbWV0aG9kcyB0byB0aGUgcmFuZ2Ugb2ZcbiAgICAgICAgLy8gc2lnbmVkIDMyLWJpdCBpbnRlZ2VycyAoWy0yICoqIDMxLCAyICoqIDMxIC0gMV0pLlxuICAgICAgICBpc0V4dGVuZGVkLmdldFVUQ0hvdXJzKCkgPT0gMTAgJiYgaXNFeHRlbmRlZC5nZXRVVENNaW51dGVzKCkgPT0gMzcgJiYgaXNFeHRlbmRlZC5nZXRVVENTZWNvbmRzKCkgPT0gNiAmJiBpc0V4dGVuZGVkLmdldFVUQ01pbGxpc2Vjb25kcygpID09IDcwODtcbiAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG5cbiAgICAvLyBJbnRlcm5hbDogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBuYXRpdmUgYEpTT04uc3RyaW5naWZ5YCBhbmQgYHBhcnNlYFxuICAgIC8vIGltcGxlbWVudGF0aW9ucyBhcmUgc3BlYy1jb21wbGlhbnQuIEJhc2VkIG9uIHdvcmsgYnkgS2VuIFNueWRlci5cbiAgICBmdW5jdGlvbiBoYXMobmFtZSkge1xuICAgICAgaWYgKGhhc1tuYW1lXSAhPT0gdW5kZWYpIHtcbiAgICAgICAgLy8gUmV0dXJuIGNhY2hlZCBmZWF0dXJlIHRlc3QgcmVzdWx0LlxuICAgICAgICByZXR1cm4gaGFzW25hbWVdO1xuICAgICAgfVxuICAgICAgdmFyIGlzU3VwcG9ydGVkO1xuICAgICAgaWYgKG5hbWUgPT0gXCJidWctc3RyaW5nLWNoYXItaW5kZXhcIikge1xuICAgICAgICAvLyBJRSA8PSA3IGRvZXNuJ3Qgc3VwcG9ydCBhY2Nlc3Npbmcgc3RyaW5nIGNoYXJhY3RlcnMgdXNpbmcgc3F1YXJlXG4gICAgICAgIC8vIGJyYWNrZXQgbm90YXRpb24uIElFIDggb25seSBzdXBwb3J0cyB0aGlzIGZvciBwcmltaXRpdmVzLlxuICAgICAgICBpc1N1cHBvcnRlZCA9IFwiYVwiWzBdICE9IFwiYVwiO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09IFwianNvblwiKSB7XG4gICAgICAgIC8vIEluZGljYXRlcyB3aGV0aGVyIGJvdGggYEpTT04uc3RyaW5naWZ5YCBhbmQgYEpTT04ucGFyc2VgIGFyZVxuICAgICAgICAvLyBzdXBwb3J0ZWQuXG4gICAgICAgIGlzU3VwcG9ydGVkID0gaGFzKFwianNvbi1zdHJpbmdpZnlcIikgJiYgaGFzKFwianNvbi1wYXJzZVwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciB2YWx1ZSwgc2VyaWFsaXplZCA9ICd7XCJhXCI6WzEsdHJ1ZSxmYWxzZSxudWxsLFwiXFxcXHUwMDAwXFxcXGJcXFxcblxcXFxmXFxcXHJcXFxcdFwiXX0nO1xuICAgICAgICAvLyBUZXN0IGBKU09OLnN0cmluZ2lmeWAuXG4gICAgICAgIGlmIChuYW1lID09IFwianNvbi1zdHJpbmdpZnlcIikge1xuICAgICAgICAgIHZhciBzdHJpbmdpZnkgPSBleHBvcnRzLnN0cmluZ2lmeSwgc3RyaW5naWZ5U3VwcG9ydGVkID0gdHlwZW9mIHN0cmluZ2lmeSA9PSBcImZ1bmN0aW9uXCIgJiYgaXNFeHRlbmRlZDtcbiAgICAgICAgICBpZiAoc3RyaW5naWZ5U3VwcG9ydGVkKSB7XG4gICAgICAgICAgICAvLyBBIHRlc3QgZnVuY3Rpb24gb2JqZWN0IHdpdGggYSBjdXN0b20gYHRvSlNPTmAgbWV0aG9kLlxuICAgICAgICAgICAgKHZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH0pLnRvSlNPTiA9IHZhbHVlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgc3RyaW5naWZ5U3VwcG9ydGVkID1cbiAgICAgICAgICAgICAgICAvLyBGaXJlZm94IDMuMWIxIGFuZCBiMiBzZXJpYWxpemUgc3RyaW5nLCBudW1iZXIsIGFuZCBib29sZWFuXG4gICAgICAgICAgICAgICAgLy8gcHJpbWl0aXZlcyBhcyBvYmplY3QgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KDApID09PSBcIjBcIiAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCBiMiwgYW5kIEpTT04gMiBzZXJpYWxpemUgd3JhcHBlZCBwcmltaXRpdmVzIGFzIG9iamVjdFxuICAgICAgICAgICAgICAgIC8vIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgTnVtYmVyKCkpID09PSBcIjBcIiAmJlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgU3RyaW5nKCkpID09ICdcIlwiJyAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCAyIHRocm93IGFuIGVycm9yIGlmIHRoZSB2YWx1ZSBpcyBgbnVsbGAsIGB1bmRlZmluZWRgLCBvclxuICAgICAgICAgICAgICAgIC8vIGRvZXMgbm90IGRlZmluZSBhIGNhbm9uaWNhbCBKU09OIHJlcHJlc2VudGF0aW9uICh0aGlzIGFwcGxpZXMgdG9cbiAgICAgICAgICAgICAgICAvLyBvYmplY3RzIHdpdGggYHRvSlNPTmAgcHJvcGVydGllcyBhcyB3ZWxsLCAqdW5sZXNzKiB0aGV5IGFyZSBuZXN0ZWRcbiAgICAgICAgICAgICAgICAvLyB3aXRoaW4gYW4gb2JqZWN0IG9yIGFycmF5KS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoZ2V0Q2xhc3MpID09PSB1bmRlZiAmJlxuICAgICAgICAgICAgICAgIC8vIElFIDggc2VyaWFsaXplcyBgdW5kZWZpbmVkYCBhcyBgXCJ1bmRlZmluZWRcImAuIFNhZmFyaSA8PSA1LjEuNyBhbmRcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMyBwYXNzIHRoaXMgdGVzdC5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkodW5kZWYpID09PSB1bmRlZiAmJlxuICAgICAgICAgICAgICAgIC8vIFNhZmFyaSA8PSA1LjEuNyBhbmQgRkYgMy4xYjMgdGhyb3cgYEVycm9yYHMgYW5kIGBUeXBlRXJyb3JgcyxcbiAgICAgICAgICAgICAgICAvLyByZXNwZWN0aXZlbHksIGlmIHRoZSB2YWx1ZSBpcyBvbWl0dGVkIGVudGlyZWx5LlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeSgpID09PSB1bmRlZiAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCAyIHRocm93IGFuIGVycm9yIGlmIHRoZSBnaXZlbiB2YWx1ZSBpcyBub3QgYSBudW1iZXIsXG4gICAgICAgICAgICAgICAgLy8gc3RyaW5nLCBhcnJheSwgb2JqZWN0LCBCb29sZWFuLCBvciBgbnVsbGAgbGl0ZXJhbC4gVGhpcyBhcHBsaWVzIHRvXG4gICAgICAgICAgICAgICAgLy8gb2JqZWN0cyB3aXRoIGN1c3RvbSBgdG9KU09OYCBtZXRob2RzIGFzIHdlbGwsIHVubGVzcyB0aGV5IGFyZSBuZXN0ZWRcbiAgICAgICAgICAgICAgICAvLyBpbnNpZGUgb2JqZWN0IG9yIGFycmF5IGxpdGVyYWxzLiBZVUkgMy4wLjBiMSBpZ25vcmVzIGN1c3RvbSBgdG9KU09OYFxuICAgICAgICAgICAgICAgIC8vIG1ldGhvZHMgZW50aXJlbHkuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KHZhbHVlKSA9PT0gXCIxXCIgJiZcbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoW3ZhbHVlXSkgPT0gXCJbMV1cIiAmJlxuICAgICAgICAgICAgICAgIC8vIFByb3RvdHlwZSA8PSAxLjYuMSBzZXJpYWxpemVzIGBbdW5kZWZpbmVkXWAgYXMgYFwiW11cImAgaW5zdGVhZCBvZlxuICAgICAgICAgICAgICAgIC8vIGBcIltudWxsXVwiYC5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoW3VuZGVmXSkgPT0gXCJbbnVsbF1cIiAmJlxuICAgICAgICAgICAgICAgIC8vIFlVSSAzLjAuMGIxIGZhaWxzIHRvIHNlcmlhbGl6ZSBgbnVsbGAgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG51bGwpID09IFwibnVsbFwiICYmXG4gICAgICAgICAgICAgICAgLy8gRkYgMy4xYjEsIDIgaGFsdHMgc2VyaWFsaXphdGlvbiBpZiBhbiBhcnJheSBjb250YWlucyBhIGZ1bmN0aW9uOlxuICAgICAgICAgICAgICAgIC8vIGBbMSwgdHJ1ZSwgZ2V0Q2xhc3MsIDFdYCBzZXJpYWxpemVzIGFzIFwiWzEsdHJ1ZSxdLFwiLiBGRiAzLjFiM1xuICAgICAgICAgICAgICAgIC8vIGVsaWRlcyBub24tSlNPTiB2YWx1ZXMgZnJvbSBvYmplY3RzIGFuZCBhcnJheXMsIHVubGVzcyB0aGV5XG4gICAgICAgICAgICAgICAgLy8gZGVmaW5lIGN1c3RvbSBgdG9KU09OYCBtZXRob2RzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShbdW5kZWYsIGdldENsYXNzLCBudWxsXSkgPT0gXCJbbnVsbCxudWxsLG51bGxdXCIgJiZcbiAgICAgICAgICAgICAgICAvLyBTaW1wbGUgc2VyaWFsaXphdGlvbiB0ZXN0LiBGRiAzLjFiMSB1c2VzIFVuaWNvZGUgZXNjYXBlIHNlcXVlbmNlc1xuICAgICAgICAgICAgICAgIC8vIHdoZXJlIGNoYXJhY3RlciBlc2NhcGUgY29kZXMgYXJlIGV4cGVjdGVkIChlLmcuLCBgXFxiYCA9PiBgXFx1MDAwOGApLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeSh7IFwiYVwiOiBbdmFsdWUsIHRydWUsIGZhbHNlLCBudWxsLCBcIlxceDAwXFxiXFxuXFxmXFxyXFx0XCJdIH0pID09IHNlcmlhbGl6ZWQgJiZcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMSBhbmQgYjIgaWdub3JlIHRoZSBgZmlsdGVyYCBhbmQgYHdpZHRoYCBhcmd1bWVudHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG51bGwsIHZhbHVlKSA9PT0gXCIxXCIgJiZcbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoWzEsIDJdLCBudWxsLCAxKSA9PSBcIltcXG4gMSxcXG4gMlxcbl1cIiAmJlxuICAgICAgICAgICAgICAgIC8vIEpTT04gMiwgUHJvdG90eXBlIDw9IDEuNywgYW5kIG9sZGVyIFdlYktpdCBidWlsZHMgaW5jb3JyZWN0bHlcbiAgICAgICAgICAgICAgICAvLyBzZXJpYWxpemUgZXh0ZW5kZWQgeWVhcnMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG5ldyBEYXRlKC04LjY0ZTE1KSkgPT0gJ1wiLTI3MTgyMS0wNC0yMFQwMDowMDowMC4wMDBaXCInICYmXG4gICAgICAgICAgICAgICAgLy8gVGhlIG1pbGxpc2Vjb25kcyBhcmUgb3B0aW9uYWwgaW4gRVMgNSwgYnV0IHJlcXVpcmVkIGluIDUuMS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IERhdGUoOC42NGUxNSkpID09ICdcIisyNzU3NjAtMDktMTNUMDA6MDA6MDAuMDAwWlwiJyAmJlxuICAgICAgICAgICAgICAgIC8vIEZpcmVmb3ggPD0gMTEuMCBpbmNvcnJlY3RseSBzZXJpYWxpemVzIHllYXJzIHByaW9yIHRvIDAgYXMgbmVnYXRpdmVcbiAgICAgICAgICAgICAgICAvLyBmb3VyLWRpZ2l0IHllYXJzIGluc3RlYWQgb2Ygc2l4LWRpZ2l0IHllYXJzLiBDcmVkaXRzOiBAWWFmZmxlLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgRGF0ZSgtNjIxOTg3NTUyZTUpKSA9PSAnXCItMDAwMDAxLTAxLTAxVDAwOjAwOjAwLjAwMFpcIicgJiZcbiAgICAgICAgICAgICAgICAvLyBTYWZhcmkgPD0gNS4xLjUgYW5kIE9wZXJhID49IDEwLjUzIGluY29ycmVjdGx5IHNlcmlhbGl6ZSBtaWxsaXNlY29uZFxuICAgICAgICAgICAgICAgIC8vIHZhbHVlcyBsZXNzIHRoYW4gMTAwMC4gQ3JlZGl0czogQFlhZmZsZS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IERhdGUoLTEpKSA9PSAnXCIxOTY5LTEyLTMxVDIzOjU5OjU5Ljk5OVpcIic7XG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgc3RyaW5naWZ5U3VwcG9ydGVkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlzU3VwcG9ydGVkID0gc3RyaW5naWZ5U3VwcG9ydGVkO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRlc3QgYEpTT04ucGFyc2VgLlxuICAgICAgICBpZiAobmFtZSA9PSBcImpzb24tcGFyc2VcIikge1xuICAgICAgICAgIHZhciBwYXJzZSA9IGV4cG9ydHMucGFyc2U7XG4gICAgICAgICAgaWYgKHR5cGVvZiBwYXJzZSA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCBiMiB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhIGJhcmUgbGl0ZXJhbCBpcyBwcm92aWRlZC5cbiAgICAgICAgICAgICAgLy8gQ29uZm9ybWluZyBpbXBsZW1lbnRhdGlvbnMgc2hvdWxkIGFsc28gY29lcmNlIHRoZSBpbml0aWFsIGFyZ3VtZW50IHRvXG4gICAgICAgICAgICAgIC8vIGEgc3RyaW5nIHByaW9yIHRvIHBhcnNpbmcuXG4gICAgICAgICAgICAgIGlmIChwYXJzZShcIjBcIikgPT09IDAgJiYgIXBhcnNlKGZhbHNlKSkge1xuICAgICAgICAgICAgICAgIC8vIFNpbXBsZSBwYXJzaW5nIHRlc3QuXG4gICAgICAgICAgICAgICAgdmFsdWUgPSBwYXJzZShzZXJpYWxpemVkKTtcbiAgICAgICAgICAgICAgICB2YXIgcGFyc2VTdXBwb3J0ZWQgPSB2YWx1ZVtcImFcIl0ubGVuZ3RoID09IDUgJiYgdmFsdWVbXCJhXCJdWzBdID09PSAxO1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZVN1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2FmYXJpIDw9IDUuMS4yIGFuZCBGRiAzLjFiMSBhbGxvdyB1bmVzY2FwZWQgdGFicyBpbiBzdHJpbmdzLlxuICAgICAgICAgICAgICAgICAgICBwYXJzZVN1cHBvcnRlZCA9ICFwYXJzZSgnXCJcXHRcIicpO1xuICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7fVxuICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlU3VwcG9ydGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gRkYgNC4wIGFuZCA0LjAuMSBhbGxvdyBsZWFkaW5nIGArYCBzaWducyBhbmQgbGVhZGluZ1xuICAgICAgICAgICAgICAgICAgICAgIC8vIGRlY2ltYWwgcG9pbnRzLiBGRiA0LjAsIDQuMC4xLCBhbmQgSUUgOS0xMCBhbHNvIGFsbG93XG4gICAgICAgICAgICAgICAgICAgICAgLy8gY2VydGFpbiBvY3RhbCBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICAgICAgICBwYXJzZVN1cHBvcnRlZCA9IHBhcnNlKFwiMDFcIikgIT09IDE7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge31cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGlmIChwYXJzZVN1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIEZGIDQuMCwgNC4wLjEsIGFuZCBSaGlubyAxLjdSMy1SNCBhbGxvdyB0cmFpbGluZyBkZWNpbWFsXG4gICAgICAgICAgICAgICAgICAgICAgLy8gcG9pbnRzLiBUaGVzZSBlbnZpcm9ubWVudHMsIGFsb25nIHdpdGggRkYgMy4xYjEgYW5kIDIsXG4gICAgICAgICAgICAgICAgICAgICAgLy8gYWxzbyBhbGxvdyB0cmFpbGluZyBjb21tYXMgaW4gSlNPTiBvYmplY3RzIGFuZCBhcnJheXMuXG4gICAgICAgICAgICAgICAgICAgICAgcGFyc2VTdXBwb3J0ZWQgPSBwYXJzZShcIjEuXCIpICE9PSAxO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgcGFyc2VTdXBwb3J0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaXNTdXBwb3J0ZWQgPSBwYXJzZVN1cHBvcnRlZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGhhc1tuYW1lXSA9ICEhaXNTdXBwb3J0ZWQ7XG4gICAgfVxuXG4gICAgaWYgKCFoYXMoXCJqc29uXCIpKSB7XG4gICAgICAvLyBDb21tb24gYFtbQ2xhc3NdXWAgbmFtZSBhbGlhc2VzLlxuICAgICAgdmFyIGZ1bmN0aW9uQ2xhc3MgPSBcIltvYmplY3QgRnVuY3Rpb25dXCIsXG4gICAgICAgICAgZGF0ZUNsYXNzID0gXCJbb2JqZWN0IERhdGVdXCIsXG4gICAgICAgICAgbnVtYmVyQ2xhc3MgPSBcIltvYmplY3QgTnVtYmVyXVwiLFxuICAgICAgICAgIHN0cmluZ0NsYXNzID0gXCJbb2JqZWN0IFN0cmluZ11cIixcbiAgICAgICAgICBhcnJheUNsYXNzID0gXCJbb2JqZWN0IEFycmF5XVwiLFxuICAgICAgICAgIGJvb2xlYW5DbGFzcyA9IFwiW29iamVjdCBCb29sZWFuXVwiO1xuXG4gICAgICAvLyBEZXRlY3QgaW5jb21wbGV0ZSBzdXBwb3J0IGZvciBhY2Nlc3Npbmcgc3RyaW5nIGNoYXJhY3RlcnMgYnkgaW5kZXguXG4gICAgICB2YXIgY2hhckluZGV4QnVnZ3kgPSBoYXMoXCJidWctc3RyaW5nLWNoYXItaW5kZXhcIik7XG5cbiAgICAgIC8vIERlZmluZSBhZGRpdGlvbmFsIHV0aWxpdHkgbWV0aG9kcyBpZiB0aGUgYERhdGVgIG1ldGhvZHMgYXJlIGJ1Z2d5LlxuICAgICAgaWYgKCFpc0V4dGVuZGVkKSB7XG4gICAgICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG4gICAgICAgIC8vIEEgbWFwcGluZyBiZXR3ZWVuIHRoZSBtb250aHMgb2YgdGhlIHllYXIgYW5kIHRoZSBudW1iZXIgb2YgZGF5cyBiZXR3ZWVuXG4gICAgICAgIC8vIEphbnVhcnkgMXN0IGFuZCB0aGUgZmlyc3Qgb2YgdGhlIHJlc3BlY3RpdmUgbW9udGguXG4gICAgICAgIHZhciBNb250aHMgPSBbMCwgMzEsIDU5LCA5MCwgMTIwLCAxNTEsIDE4MSwgMjEyLCAyNDMsIDI3MywgMzA0LCAzMzRdO1xuICAgICAgICAvLyBJbnRlcm5hbDogQ2FsY3VsYXRlcyB0aGUgbnVtYmVyIG9mIGRheXMgYmV0d2VlbiB0aGUgVW5peCBlcG9jaCBhbmQgdGhlXG4gICAgICAgIC8vIGZpcnN0IGRheSBvZiB0aGUgZ2l2ZW4gbW9udGguXG4gICAgICAgIHZhciBnZXREYXkgPSBmdW5jdGlvbiAoeWVhciwgbW9udGgpIHtcbiAgICAgICAgICByZXR1cm4gTW9udGhzW21vbnRoXSArIDM2NSAqICh5ZWFyIC0gMTk3MCkgKyBmbG9vcigoeWVhciAtIDE5NjkgKyAobW9udGggPSArKG1vbnRoID4gMSkpKSAvIDQpIC0gZmxvb3IoKHllYXIgLSAxOTAxICsgbW9udGgpIC8gMTAwKSArIGZsb29yKCh5ZWFyIC0gMTYwMSArIG1vbnRoKSAvIDQwMCk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8vIEludGVybmFsOiBEZXRlcm1pbmVzIGlmIGEgcHJvcGVydHkgaXMgYSBkaXJlY3QgcHJvcGVydHkgb2YgdGhlIGdpdmVuXG4gICAgICAvLyBvYmplY3QuIERlbGVnYXRlcyB0byB0aGUgbmF0aXZlIGBPYmplY3QjaGFzT3duUHJvcGVydHlgIG1ldGhvZC5cbiAgICAgIGlmICghKGlzUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eSkpIHtcbiAgICAgICAgaXNQcm9wZXJ0eSA9IGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgIHZhciBtZW1iZXJzID0ge30sIGNvbnN0cnVjdG9yO1xuICAgICAgICAgIGlmICgobWVtYmVycy5fX3Byb3RvX18gPSBudWxsLCBtZW1iZXJzLl9fcHJvdG9fXyA9IHtcbiAgICAgICAgICAgIC8vIFRoZSAqcHJvdG8qIHByb3BlcnR5IGNhbm5vdCBiZSBzZXQgbXVsdGlwbGUgdGltZXMgaW4gcmVjZW50XG4gICAgICAgICAgICAvLyB2ZXJzaW9ucyBvZiBGaXJlZm94IGFuZCBTZWFNb25rZXkuXG4gICAgICAgICAgICBcInRvU3RyaW5nXCI6IDFcbiAgICAgICAgICB9LCBtZW1iZXJzKS50b1N0cmluZyAhPSBnZXRDbGFzcykge1xuICAgICAgICAgICAgLy8gU2FmYXJpIDw9IDIuMC4zIGRvZXNuJ3QgaW1wbGVtZW50IGBPYmplY3QjaGFzT3duUHJvcGVydHlgLCBidXRcbiAgICAgICAgICAgIC8vIHN1cHBvcnRzIHRoZSBtdXRhYmxlICpwcm90byogcHJvcGVydHkuXG4gICAgICAgICAgICBpc1Byb3BlcnR5ID0gZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgIC8vIENhcHR1cmUgYW5kIGJyZWFrIHRoZSBvYmplY3QncyBwcm90b3R5cGUgY2hhaW4gKHNlZSBzZWN0aW9uIDguNi4yXG4gICAgICAgICAgICAgIC8vIG9mIHRoZSBFUyA1LjEgc3BlYykuIFRoZSBwYXJlbnRoZXNpemVkIGV4cHJlc3Npb24gcHJldmVudHMgYW5cbiAgICAgICAgICAgICAgLy8gdW5zYWZlIHRyYW5zZm9ybWF0aW9uIGJ5IHRoZSBDbG9zdXJlIENvbXBpbGVyLlxuICAgICAgICAgICAgICB2YXIgb3JpZ2luYWwgPSB0aGlzLl9fcHJvdG9fXywgcmVzdWx0ID0gcHJvcGVydHkgaW4gKHRoaXMuX19wcm90b19fID0gbnVsbCwgdGhpcyk7XG4gICAgICAgICAgICAgIC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIHByb3RvdHlwZSBjaGFpbi5cbiAgICAgICAgICAgICAgdGhpcy5fX3Byb3RvX18gPSBvcmlnaW5hbDtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIENhcHR1cmUgYSByZWZlcmVuY2UgdG8gdGhlIHRvcC1sZXZlbCBgT2JqZWN0YCBjb25zdHJ1Y3Rvci5cbiAgICAgICAgICAgIGNvbnN0cnVjdG9yID0gbWVtYmVycy5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIC8vIFVzZSB0aGUgYGNvbnN0cnVjdG9yYCBwcm9wZXJ0eSB0byBzaW11bGF0ZSBgT2JqZWN0I2hhc093blByb3BlcnR5YCBpblxuICAgICAgICAgICAgLy8gb3RoZXIgZW52aXJvbm1lbnRzLlxuICAgICAgICAgICAgaXNQcm9wZXJ0eSA9IGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gKHRoaXMuY29uc3RydWN0b3IgfHwgY29uc3RydWN0b3IpLnByb3RvdHlwZTtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5IGluIHRoaXMgJiYgIShwcm9wZXJ0eSBpbiBwYXJlbnQgJiYgdGhpc1twcm9wZXJ0eV0gPT09IHBhcmVudFtwcm9wZXJ0eV0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbWVtYmVycyA9IG51bGw7XG4gICAgICAgICAgcmV0dXJuIGlzUHJvcGVydHkuY2FsbCh0aGlzLCBwcm9wZXJ0eSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8vIEludGVybmFsOiBOb3JtYWxpemVzIHRoZSBgZm9yLi4uaW5gIGl0ZXJhdGlvbiBhbGdvcml0aG0gYWNyb3NzXG4gICAgICAvLyBlbnZpcm9ubWVudHMuIEVhY2ggZW51bWVyYXRlZCBrZXkgaXMgeWllbGRlZCB0byBhIGBjYWxsYmFja2AgZnVuY3Rpb24uXG4gICAgICBmb3JFYWNoID0gZnVuY3Rpb24gKG9iamVjdCwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIHNpemUgPSAwLCBQcm9wZXJ0aWVzLCBtZW1iZXJzLCBwcm9wZXJ0eTtcblxuICAgICAgICAvLyBUZXN0cyBmb3IgYnVncyBpbiB0aGUgY3VycmVudCBlbnZpcm9ubWVudCdzIGBmb3IuLi5pbmAgYWxnb3JpdGhtLiBUaGVcbiAgICAgICAgLy8gYHZhbHVlT2ZgIHByb3BlcnR5IGluaGVyaXRzIHRoZSBub24tZW51bWVyYWJsZSBmbGFnIGZyb21cbiAgICAgICAgLy8gYE9iamVjdC5wcm90b3R5cGVgIGluIG9sZGVyIHZlcnNpb25zIG9mIElFLCBOZXRzY2FwZSwgYW5kIE1vemlsbGEuXG4gICAgICAgIChQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHRoaXMudmFsdWVPZiA9IDA7XG4gICAgICAgIH0pLnByb3RvdHlwZS52YWx1ZU9mID0gMDtcblxuICAgICAgICAvLyBJdGVyYXRlIG92ZXIgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIGBQcm9wZXJ0aWVzYCBjbGFzcy5cbiAgICAgICAgbWVtYmVycyA9IG5ldyBQcm9wZXJ0aWVzKCk7XG4gICAgICAgIGZvciAocHJvcGVydHkgaW4gbWVtYmVycykge1xuICAgICAgICAgIC8vIElnbm9yZSBhbGwgcHJvcGVydGllcyBpbmhlcml0ZWQgZnJvbSBgT2JqZWN0LnByb3RvdHlwZWAuXG4gICAgICAgICAgaWYgKGlzUHJvcGVydHkuY2FsbChtZW1iZXJzLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgIHNpemUrKztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgUHJvcGVydGllcyA9IG1lbWJlcnMgPSBudWxsO1xuXG4gICAgICAgIC8vIE5vcm1hbGl6ZSB0aGUgaXRlcmF0aW9uIGFsZ29yaXRobS5cbiAgICAgICAgaWYgKCFzaXplKSB7XG4gICAgICAgICAgLy8gQSBsaXN0IG9mIG5vbi1lbnVtZXJhYmxlIHByb3BlcnRpZXMgaW5oZXJpdGVkIGZyb20gYE9iamVjdC5wcm90b3R5cGVgLlxuICAgICAgICAgIG1lbWJlcnMgPSBbXCJ2YWx1ZU9mXCIsIFwidG9TdHJpbmdcIiwgXCJ0b0xvY2FsZVN0cmluZ1wiLCBcInByb3BlcnR5SXNFbnVtZXJhYmxlXCIsIFwiaXNQcm90b3R5cGVPZlwiLCBcImhhc093blByb3BlcnR5XCIsIFwiY29uc3RydWN0b3JcIl07XG4gICAgICAgICAgLy8gSUUgPD0gOCwgTW96aWxsYSAxLjAsIGFuZCBOZXRzY2FwZSA2LjIgaWdub3JlIHNoYWRvd2VkIG5vbi1lbnVtZXJhYmxlXG4gICAgICAgICAgLy8gcHJvcGVydGllcy5cbiAgICAgICAgICBmb3JFYWNoID0gZnVuY3Rpb24gKG9iamVjdCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHZhciBpc0Z1bmN0aW9uID0gZ2V0Q2xhc3MuY2FsbChvYmplY3QpID09IGZ1bmN0aW9uQ2xhc3MsIHByb3BlcnR5LCBsZW5ndGg7XG4gICAgICAgICAgICB2YXIgaGFzUHJvcGVydHkgPSAhaXNGdW5jdGlvbiAmJiB0eXBlb2Ygb2JqZWN0LmNvbnN0cnVjdG9yICE9IFwiZnVuY3Rpb25cIiAmJiBvYmplY3RUeXBlc1t0eXBlb2Ygb2JqZWN0Lmhhc093blByb3BlcnR5XSAmJiBvYmplY3QuaGFzT3duUHJvcGVydHkgfHwgaXNQcm9wZXJ0eTtcbiAgICAgICAgICAgIGZvciAocHJvcGVydHkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICAgIC8vIEdlY2tvIDw9IDEuMCBlbnVtZXJhdGVzIHRoZSBgcHJvdG90eXBlYCBwcm9wZXJ0eSBvZiBmdW5jdGlvbnMgdW5kZXJcbiAgICAgICAgICAgICAgLy8gY2VydGFpbiBjb25kaXRpb25zOyBJRSBkb2VzIG5vdC5cbiAgICAgICAgICAgICAgaWYgKCEoaXNGdW5jdGlvbiAmJiBwcm9wZXJ0eSA9PSBcInByb3RvdHlwZVwiKSAmJiBoYXNQcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2socHJvcGVydHkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNYW51YWxseSBpbnZva2UgdGhlIGNhbGxiYWNrIGZvciBlYWNoIG5vbi1lbnVtZXJhYmxlIHByb3BlcnR5LlxuICAgICAgICAgICAgZm9yIChsZW5ndGggPSBtZW1iZXJzLmxlbmd0aDsgcHJvcGVydHkgPSBtZW1iZXJzWy0tbGVuZ3RoXTsgaGFzUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSAmJiBjYWxsYmFjayhwcm9wZXJ0eSkpO1xuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoc2l6ZSA9PSAyKSB7XG4gICAgICAgICAgLy8gU2FmYXJpIDw9IDIuMC40IGVudW1lcmF0ZXMgc2hhZG93ZWQgcHJvcGVydGllcyB0d2ljZS5cbiAgICAgICAgICBmb3JFYWNoID0gZnVuY3Rpb24gKG9iamVjdCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhIHNldCBvZiBpdGVyYXRlZCBwcm9wZXJ0aWVzLlxuICAgICAgICAgICAgdmFyIG1lbWJlcnMgPSB7fSwgaXNGdW5jdGlvbiA9IGdldENsYXNzLmNhbGwob2JqZWN0KSA9PSBmdW5jdGlvbkNsYXNzLCBwcm9wZXJ0eTtcbiAgICAgICAgICAgIGZvciAocHJvcGVydHkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICAgIC8vIFN0b3JlIGVhY2ggcHJvcGVydHkgbmFtZSB0byBwcmV2ZW50IGRvdWJsZSBlbnVtZXJhdGlvbi4gVGhlXG4gICAgICAgICAgICAgIC8vIGBwcm90b3R5cGVgIHByb3BlcnR5IG9mIGZ1bmN0aW9ucyBpcyBub3QgZW51bWVyYXRlZCBkdWUgdG8gY3Jvc3MtXG4gICAgICAgICAgICAgIC8vIGVudmlyb25tZW50IGluY29uc2lzdGVuY2llcy5cbiAgICAgICAgICAgICAgaWYgKCEoaXNGdW5jdGlvbiAmJiBwcm9wZXJ0eSA9PSBcInByb3RvdHlwZVwiKSAmJiAhaXNQcm9wZXJ0eS5jYWxsKG1lbWJlcnMsIHByb3BlcnR5KSAmJiAobWVtYmVyc1twcm9wZXJ0eV0gPSAxKSAmJiBpc1Byb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhwcm9wZXJ0eSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE5vIGJ1Z3MgZGV0ZWN0ZWQ7IHVzZSB0aGUgc3RhbmRhcmQgYGZvci4uLmluYCBhbGdvcml0aG0uXG4gICAgICAgICAgZm9yRWFjaCA9IGZ1bmN0aW9uIChvYmplY3QsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgaXNGdW5jdGlvbiA9IGdldENsYXNzLmNhbGwob2JqZWN0KSA9PSBmdW5jdGlvbkNsYXNzLCBwcm9wZXJ0eSwgaXNDb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIGZvciAocHJvcGVydHkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICAgIGlmICghKGlzRnVuY3Rpb24gJiYgcHJvcGVydHkgPT0gXCJwcm90b3R5cGVcIikgJiYgaXNQcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpICYmICEoaXNDb25zdHJ1Y3RvciA9IHByb3BlcnR5ID09PSBcImNvbnN0cnVjdG9yXCIpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2socHJvcGVydHkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNYW51YWxseSBpbnZva2UgdGhlIGNhbGxiYWNrIGZvciB0aGUgYGNvbnN0cnVjdG9yYCBwcm9wZXJ0eSBkdWUgdG9cbiAgICAgICAgICAgIC8vIGNyb3NzLWVudmlyb25tZW50IGluY29uc2lzdGVuY2llcy5cbiAgICAgICAgICAgIGlmIChpc0NvbnN0cnVjdG9yIHx8IGlzUHJvcGVydHkuY2FsbChvYmplY3QsIChwcm9wZXJ0eSA9IFwiY29uc3RydWN0b3JcIikpKSB7XG4gICAgICAgICAgICAgIGNhbGxiYWNrKHByb3BlcnR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JFYWNoKG9iamVjdCwgY2FsbGJhY2spO1xuICAgICAgfTtcblxuICAgICAgLy8gUHVibGljOiBTZXJpYWxpemVzIGEgSmF2YVNjcmlwdCBgdmFsdWVgIGFzIGEgSlNPTiBzdHJpbmcuIFRoZSBvcHRpb25hbFxuICAgICAgLy8gYGZpbHRlcmAgYXJndW1lbnQgbWF5IHNwZWNpZnkgZWl0aGVyIGEgZnVuY3Rpb24gdGhhdCBhbHRlcnMgaG93IG9iamVjdCBhbmRcbiAgICAgIC8vIGFycmF5IG1lbWJlcnMgYXJlIHNlcmlhbGl6ZWQsIG9yIGFuIGFycmF5IG9mIHN0cmluZ3MgYW5kIG51bWJlcnMgdGhhdFxuICAgICAgLy8gaW5kaWNhdGVzIHdoaWNoIHByb3BlcnRpZXMgc2hvdWxkIGJlIHNlcmlhbGl6ZWQuIFRoZSBvcHRpb25hbCBgd2lkdGhgXG4gICAgICAvLyBhcmd1bWVudCBtYXkgYmUgZWl0aGVyIGEgc3RyaW5nIG9yIG51bWJlciB0aGF0IHNwZWNpZmllcyB0aGUgaW5kZW50YXRpb25cbiAgICAgIC8vIGxldmVsIG9mIHRoZSBvdXRwdXQuXG4gICAgICBpZiAoIWhhcyhcImpzb24tc3RyaW5naWZ5XCIpKSB7XG4gICAgICAgIC8vIEludGVybmFsOiBBIG1hcCBvZiBjb250cm9sIGNoYXJhY3RlcnMgYW5kIHRoZWlyIGVzY2FwZWQgZXF1aXZhbGVudHMuXG4gICAgICAgIHZhciBFc2NhcGVzID0ge1xuICAgICAgICAgIDkyOiBcIlxcXFxcXFxcXCIsXG4gICAgICAgICAgMzQ6ICdcXFxcXCInLFxuICAgICAgICAgIDg6IFwiXFxcXGJcIixcbiAgICAgICAgICAxMjogXCJcXFxcZlwiLFxuICAgICAgICAgIDEwOiBcIlxcXFxuXCIsXG4gICAgICAgICAgMTM6IFwiXFxcXHJcIixcbiAgICAgICAgICA5OiBcIlxcXFx0XCJcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogQ29udmVydHMgYHZhbHVlYCBpbnRvIGEgemVyby1wYWRkZWQgc3RyaW5nIHN1Y2ggdGhhdCBpdHNcbiAgICAgICAgLy8gbGVuZ3RoIGlzIGF0IGxlYXN0IGVxdWFsIHRvIGB3aWR0aGAuIFRoZSBgd2lkdGhgIG11c3QgYmUgPD0gNi5cbiAgICAgICAgdmFyIGxlYWRpbmdaZXJvZXMgPSBcIjAwMDAwMFwiO1xuICAgICAgICB2YXIgdG9QYWRkZWRTdHJpbmcgPSBmdW5jdGlvbiAod2lkdGgsIHZhbHVlKSB7XG4gICAgICAgICAgLy8gVGhlIGB8fCAwYCBleHByZXNzaW9uIGlzIG5lY2Vzc2FyeSB0byB3b3JrIGFyb3VuZCBhIGJ1ZyBpblxuICAgICAgICAgIC8vIE9wZXJhIDw9IDcuNTR1MiB3aGVyZSBgMCA9PSAtMGAsIGJ1dCBgU3RyaW5nKC0wKSAhPT0gXCIwXCJgLlxuICAgICAgICAgIHJldHVybiAobGVhZGluZ1plcm9lcyArICh2YWx1ZSB8fCAwKSkuc2xpY2UoLXdpZHRoKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogRG91YmxlLXF1b3RlcyBhIHN0cmluZyBgdmFsdWVgLCByZXBsYWNpbmcgYWxsIEFTQ0lJIGNvbnRyb2xcbiAgICAgICAgLy8gY2hhcmFjdGVycyAoY2hhcmFjdGVycyB3aXRoIGNvZGUgdW5pdCB2YWx1ZXMgYmV0d2VlbiAwIGFuZCAzMSkgd2l0aFxuICAgICAgICAvLyB0aGVpciBlc2NhcGVkIGVxdWl2YWxlbnRzLiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZVxuICAgICAgICAvLyBgUXVvdGUodmFsdWUpYCBvcGVyYXRpb24gZGVmaW5lZCBpbiBFUyA1LjEgc2VjdGlvbiAxNS4xMi4zLlxuICAgICAgICB2YXIgdW5pY29kZVByZWZpeCA9IFwiXFxcXHUwMFwiO1xuICAgICAgICB2YXIgcXVvdGUgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gJ1wiJywgaW5kZXggPSAwLCBsZW5ndGggPSB2YWx1ZS5sZW5ndGgsIHVzZUNoYXJJbmRleCA9ICFjaGFySW5kZXhCdWdneSB8fCBsZW5ndGggPiAxMDtcbiAgICAgICAgICB2YXIgc3ltYm9scyA9IHVzZUNoYXJJbmRleCAmJiAoY2hhckluZGV4QnVnZ3kgPyB2YWx1ZS5zcGxpdChcIlwiKSA6IHZhbHVlKTtcbiAgICAgICAgICBmb3IgKDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgIHZhciBjaGFyQ29kZSA9IHZhbHVlLmNoYXJDb2RlQXQoaW5kZXgpO1xuICAgICAgICAgICAgLy8gSWYgdGhlIGNoYXJhY3RlciBpcyBhIGNvbnRyb2wgY2hhcmFjdGVyLCBhcHBlbmQgaXRzIFVuaWNvZGUgb3JcbiAgICAgICAgICAgIC8vIHNob3J0aGFuZCBlc2NhcGUgc2VxdWVuY2U7IG90aGVyd2lzZSwgYXBwZW5kIHRoZSBjaGFyYWN0ZXIgYXMtaXMuXG4gICAgICAgICAgICBzd2l0Y2ggKGNoYXJDb2RlKSB7XG4gICAgICAgICAgICAgIGNhc2UgODogY2FzZSA5OiBjYXNlIDEwOiBjYXNlIDEyOiBjYXNlIDEzOiBjYXNlIDM0OiBjYXNlIDkyOlxuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBFc2NhcGVzW2NoYXJDb2RlXTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPCAzMikge1xuICAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IHVuaWNvZGVQcmVmaXggKyB0b1BhZGRlZFN0cmluZygyLCBjaGFyQ29kZS50b1N0cmluZygxNikpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdCArPSB1c2VDaGFySW5kZXggPyBzeW1ib2xzW2luZGV4XSA6IHZhbHVlLmNoYXJBdChpbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnXCInO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZWN1cnNpdmVseSBzZXJpYWxpemVzIGFuIG9iamVjdC4gSW1wbGVtZW50cyB0aGVcbiAgICAgICAgLy8gYFN0cihrZXksIGhvbGRlcilgLCBgSk8odmFsdWUpYCwgYW5kIGBKQSh2YWx1ZSlgIG9wZXJhdGlvbnMuXG4gICAgICAgIHZhciBzZXJpYWxpemUgPSBmdW5jdGlvbiAocHJvcGVydHksIG9iamVjdCwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIHdoaXRlc3BhY2UsIGluZGVudGF0aW9uLCBzdGFjaykge1xuICAgICAgICAgIHZhciB2YWx1ZSwgY2xhc3NOYW1lLCB5ZWFyLCBtb250aCwgZGF0ZSwgdGltZSwgaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMsIG1pbGxpc2Vjb25kcywgcmVzdWx0cywgZWxlbWVudCwgaW5kZXgsIGxlbmd0aCwgcHJlZml4LCByZXN1bHQ7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIE5lY2Vzc2FyeSBmb3IgaG9zdCBvYmplY3Qgc3VwcG9ydC5cbiAgICAgICAgICAgIHZhbHVlID0gb2JqZWN0W3Byb3BlcnR5XTtcbiAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiICYmIHZhbHVlKSB7XG4gICAgICAgICAgICBjbGFzc05hbWUgPSBnZXRDbGFzcy5jYWxsKHZhbHVlKTtcbiAgICAgICAgICAgIGlmIChjbGFzc05hbWUgPT0gZGF0ZUNsYXNzICYmICFpc1Byb3BlcnR5LmNhbGwodmFsdWUsIFwidG9KU09OXCIpKSB7XG4gICAgICAgICAgICAgIGlmICh2YWx1ZSA+IC0xIC8gMCAmJiB2YWx1ZSA8IDEgLyAwKSB7XG4gICAgICAgICAgICAgICAgLy8gRGF0ZXMgYXJlIHNlcmlhbGl6ZWQgYWNjb3JkaW5nIHRvIHRoZSBgRGF0ZSN0b0pTT05gIG1ldGhvZFxuICAgICAgICAgICAgICAgIC8vIHNwZWNpZmllZCBpbiBFUyA1LjEgc2VjdGlvbiAxNS45LjUuNDQuIFNlZSBzZWN0aW9uIDE1LjkuMS4xNVxuICAgICAgICAgICAgICAgIC8vIGZvciB0aGUgSVNPIDg2MDEgZGF0ZSB0aW1lIHN0cmluZyBmb3JtYXQuXG4gICAgICAgICAgICAgICAgaWYgKGdldERheSkge1xuICAgICAgICAgICAgICAgICAgLy8gTWFudWFsbHkgY29tcHV0ZSB0aGUgeWVhciwgbW9udGgsIGRhdGUsIGhvdXJzLCBtaW51dGVzLFxuICAgICAgICAgICAgICAgICAgLy8gc2Vjb25kcywgYW5kIG1pbGxpc2Vjb25kcyBpZiB0aGUgYGdldFVUQypgIG1ldGhvZHMgYXJlXG4gICAgICAgICAgICAgICAgICAvLyBidWdneS4gQWRhcHRlZCBmcm9tIEBZYWZmbGUncyBgZGF0ZS1zaGltYCBwcm9qZWN0LlxuICAgICAgICAgICAgICAgICAgZGF0ZSA9IGZsb29yKHZhbHVlIC8gODY0ZTUpO1xuICAgICAgICAgICAgICAgICAgZm9yICh5ZWFyID0gZmxvb3IoZGF0ZSAvIDM2NS4yNDI1KSArIDE5NzAgLSAxOyBnZXREYXkoeWVhciArIDEsIDApIDw9IGRhdGU7IHllYXIrKyk7XG4gICAgICAgICAgICAgICAgICBmb3IgKG1vbnRoID0gZmxvb3IoKGRhdGUgLSBnZXREYXkoeWVhciwgMCkpIC8gMzAuNDIpOyBnZXREYXkoeWVhciwgbW9udGggKyAxKSA8PSBkYXRlOyBtb250aCsrKTtcbiAgICAgICAgICAgICAgICAgIGRhdGUgPSAxICsgZGF0ZSAtIGdldERheSh5ZWFyLCBtb250aCk7XG4gICAgICAgICAgICAgICAgICAvLyBUaGUgYHRpbWVgIHZhbHVlIHNwZWNpZmllcyB0aGUgdGltZSB3aXRoaW4gdGhlIGRheSAoc2VlIEVTXG4gICAgICAgICAgICAgICAgICAvLyA1LjEgc2VjdGlvbiAxNS45LjEuMikuIFRoZSBmb3JtdWxhIGAoQSAlIEIgKyBCKSAlIEJgIGlzIHVzZWRcbiAgICAgICAgICAgICAgICAgIC8vIHRvIGNvbXB1dGUgYEEgbW9kdWxvIEJgLCBhcyB0aGUgYCVgIG9wZXJhdG9yIGRvZXMgbm90XG4gICAgICAgICAgICAgICAgICAvLyBjb3JyZXNwb25kIHRvIHRoZSBgbW9kdWxvYCBvcGVyYXRpb24gZm9yIG5lZ2F0aXZlIG51bWJlcnMuXG4gICAgICAgICAgICAgICAgICB0aW1lID0gKHZhbHVlICUgODY0ZTUgKyA4NjRlNSkgJSA4NjRlNTtcbiAgICAgICAgICAgICAgICAgIC8vIFRoZSBob3VycywgbWludXRlcywgc2Vjb25kcywgYW5kIG1pbGxpc2Vjb25kcyBhcmUgb2J0YWluZWQgYnlcbiAgICAgICAgICAgICAgICAgIC8vIGRlY29tcG9zaW5nIHRoZSB0aW1lIHdpdGhpbiB0aGUgZGF5LiBTZWUgc2VjdGlvbiAxNS45LjEuMTAuXG4gICAgICAgICAgICAgICAgICBob3VycyA9IGZsb29yKHRpbWUgLyAzNmU1KSAlIDI0O1xuICAgICAgICAgICAgICAgICAgbWludXRlcyA9IGZsb29yKHRpbWUgLyA2ZTQpICUgNjA7XG4gICAgICAgICAgICAgICAgICBzZWNvbmRzID0gZmxvb3IodGltZSAvIDFlMykgJSA2MDtcbiAgICAgICAgICAgICAgICAgIG1pbGxpc2Vjb25kcyA9IHRpbWUgJSAxZTM7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHllYXIgPSB2YWx1ZS5nZXRVVENGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgICAgbW9udGggPSB2YWx1ZS5nZXRVVENNb250aCgpO1xuICAgICAgICAgICAgICAgICAgZGF0ZSA9IHZhbHVlLmdldFVUQ0RhdGUoKTtcbiAgICAgICAgICAgICAgICAgIGhvdXJzID0gdmFsdWUuZ2V0VVRDSG91cnMoKTtcbiAgICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSB2YWx1ZS5nZXRVVENNaW51dGVzKCk7XG4gICAgICAgICAgICAgICAgICBzZWNvbmRzID0gdmFsdWUuZ2V0VVRDU2Vjb25kcygpO1xuICAgICAgICAgICAgICAgICAgbWlsbGlzZWNvbmRzID0gdmFsdWUuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFNlcmlhbGl6ZSBleHRlbmRlZCB5ZWFycyBjb3JyZWN0bHkuXG4gICAgICAgICAgICAgICAgdmFsdWUgPSAoeWVhciA8PSAwIHx8IHllYXIgPj0gMWU0ID8gKHllYXIgPCAwID8gXCItXCIgOiBcIitcIikgKyB0b1BhZGRlZFN0cmluZyg2LCB5ZWFyIDwgMCA/IC15ZWFyIDogeWVhcikgOiB0b1BhZGRlZFN0cmluZyg0LCB5ZWFyKSkgK1xuICAgICAgICAgICAgICAgICAgXCItXCIgKyB0b1BhZGRlZFN0cmluZygyLCBtb250aCArIDEpICsgXCItXCIgKyB0b1BhZGRlZFN0cmluZygyLCBkYXRlKSArXG4gICAgICAgICAgICAgICAgICAvLyBNb250aHMsIGRhdGVzLCBob3VycywgbWludXRlcywgYW5kIHNlY29uZHMgc2hvdWxkIGhhdmUgdHdvXG4gICAgICAgICAgICAgICAgICAvLyBkaWdpdHM7IG1pbGxpc2Vjb25kcyBzaG91bGQgaGF2ZSB0aHJlZS5cbiAgICAgICAgICAgICAgICAgIFwiVFwiICsgdG9QYWRkZWRTdHJpbmcoMiwgaG91cnMpICsgXCI6XCIgKyB0b1BhZGRlZFN0cmluZygyLCBtaW51dGVzKSArIFwiOlwiICsgdG9QYWRkZWRTdHJpbmcoMiwgc2Vjb25kcykgK1xuICAgICAgICAgICAgICAgICAgLy8gTWlsbGlzZWNvbmRzIGFyZSBvcHRpb25hbCBpbiBFUyA1LjAsIGJ1dCByZXF1aXJlZCBpbiA1LjEuXG4gICAgICAgICAgICAgICAgICBcIi5cIiArIHRvUGFkZGVkU3RyaW5nKDMsIG1pbGxpc2Vjb25kcykgKyBcIlpcIjtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IG51bGw7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlLnRvSlNPTiA9PSBcImZ1bmN0aW9uXCIgJiYgKChjbGFzc05hbWUgIT0gbnVtYmVyQ2xhc3MgJiYgY2xhc3NOYW1lICE9IHN0cmluZ0NsYXNzICYmIGNsYXNzTmFtZSAhPSBhcnJheUNsYXNzKSB8fCBpc1Byb3BlcnR5LmNhbGwodmFsdWUsIFwidG9KU09OXCIpKSkge1xuICAgICAgICAgICAgICAvLyBQcm90b3R5cGUgPD0gMS42LjEgYWRkcyBub24tc3RhbmRhcmQgYHRvSlNPTmAgbWV0aG9kcyB0byB0aGVcbiAgICAgICAgICAgICAgLy8gYE51bWJlcmAsIGBTdHJpbmdgLCBgRGF0ZWAsIGFuZCBgQXJyYXlgIHByb3RvdHlwZXMuIEpTT04gM1xuICAgICAgICAgICAgICAvLyBpZ25vcmVzIGFsbCBgdG9KU09OYCBtZXRob2RzIG9uIHRoZXNlIG9iamVjdHMgdW5sZXNzIHRoZXkgYXJlXG4gICAgICAgICAgICAgIC8vIGRlZmluZWQgZGlyZWN0bHkgb24gYW4gaW5zdGFuY2UuXG4gICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUudG9KU09OKHByb3BlcnR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAvLyBJZiBhIHJlcGxhY2VtZW50IGZ1bmN0aW9uIHdhcyBwcm92aWRlZCwgY2FsbCBpdCB0byBvYnRhaW4gdGhlIHZhbHVlXG4gICAgICAgICAgICAvLyBmb3Igc2VyaWFsaXphdGlvbi5cbiAgICAgICAgICAgIHZhbHVlID0gY2FsbGJhY2suY2FsbChvYmplY3QsIHByb3BlcnR5LCB2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIFwibnVsbFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjbGFzc05hbWUgPSBnZXRDbGFzcy5jYWxsKHZhbHVlKTtcbiAgICAgICAgICBpZiAoY2xhc3NOYW1lID09IGJvb2xlYW5DbGFzcykge1xuICAgICAgICAgICAgLy8gQm9vbGVhbnMgYXJlIHJlcHJlc2VudGVkIGxpdGVyYWxseS5cbiAgICAgICAgICAgIHJldHVybiBcIlwiICsgdmFsdWU7XG4gICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT0gbnVtYmVyQ2xhc3MpIHtcbiAgICAgICAgICAgIC8vIEpTT04gbnVtYmVycyBtdXN0IGJlIGZpbml0ZS4gYEluZmluaXR5YCBhbmQgYE5hTmAgYXJlIHNlcmlhbGl6ZWQgYXNcbiAgICAgICAgICAgIC8vIGBcIm51bGxcImAuXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPiAtMSAvIDAgJiYgdmFsdWUgPCAxIC8gMCA/IFwiXCIgKyB2YWx1ZSA6IFwibnVsbFwiO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09IHN0cmluZ0NsYXNzKSB7XG4gICAgICAgICAgICAvLyBTdHJpbmdzIGFyZSBkb3VibGUtcXVvdGVkIGFuZCBlc2NhcGVkLlxuICAgICAgICAgICAgcmV0dXJuIHF1b3RlKFwiXCIgKyB2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIFJlY3Vyc2l2ZWx5IHNlcmlhbGl6ZSBvYmplY3RzIGFuZCBhcnJheXMuXG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAvLyBDaGVjayBmb3IgY3ljbGljIHN0cnVjdHVyZXMuIFRoaXMgaXMgYSBsaW5lYXIgc2VhcmNoOyBwZXJmb3JtYW5jZVxuICAgICAgICAgICAgLy8gaXMgaW52ZXJzZWx5IHByb3BvcnRpb25hbCB0byB0aGUgbnVtYmVyIG9mIHVuaXF1ZSBuZXN0ZWQgb2JqZWN0cy5cbiAgICAgICAgICAgIGZvciAobGVuZ3RoID0gc3RhY2subGVuZ3RoOyBsZW5ndGgtLTspIHtcbiAgICAgICAgICAgICAgaWYgKHN0YWNrW2xlbmd0aF0gPT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgLy8gQ3ljbGljIHN0cnVjdHVyZXMgY2Fubm90IGJlIHNlcmlhbGl6ZWQgYnkgYEpTT04uc3RyaW5naWZ5YC5cbiAgICAgICAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQWRkIHRoZSBvYmplY3QgdG8gdGhlIHN0YWNrIG9mIHRyYXZlcnNlZCBvYmplY3RzLlxuICAgICAgICAgICAgc3RhY2sucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICByZXN1bHRzID0gW107XG4gICAgICAgICAgICAvLyBTYXZlIHRoZSBjdXJyZW50IGluZGVudGF0aW9uIGxldmVsIGFuZCBpbmRlbnQgb25lIGFkZGl0aW9uYWwgbGV2ZWwuXG4gICAgICAgICAgICBwcmVmaXggPSBpbmRlbnRhdGlvbjtcbiAgICAgICAgICAgIGluZGVudGF0aW9uICs9IHdoaXRlc3BhY2U7XG4gICAgICAgICAgICBpZiAoY2xhc3NOYW1lID09IGFycmF5Q2xhc3MpIHtcbiAgICAgICAgICAgICAgLy8gUmVjdXJzaXZlbHkgc2VyaWFsaXplIGFycmF5IGVsZW1lbnRzLlxuICAgICAgICAgICAgICBmb3IgKGluZGV4ID0gMCwgbGVuZ3RoID0gdmFsdWUubGVuZ3RoOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBzZXJpYWxpemUoaW5kZXgsIHZhbHVlLCBjYWxsYmFjaywgcHJvcGVydGllcywgd2hpdGVzcGFjZSwgaW5kZW50YXRpb24sIHN0YWNrKTtcbiAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goZWxlbWVudCA9PT0gdW5kZWYgPyBcIm51bGxcIiA6IGVsZW1lbnQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdHMubGVuZ3RoID8gKHdoaXRlc3BhY2UgPyBcIltcXG5cIiArIGluZGVudGF0aW9uICsgcmVzdWx0cy5qb2luKFwiLFxcblwiICsgaW5kZW50YXRpb24pICsgXCJcXG5cIiArIHByZWZpeCArIFwiXVwiIDogKFwiW1wiICsgcmVzdWx0cy5qb2luKFwiLFwiKSArIFwiXVwiKSkgOiBcIltdXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvLyBSZWN1cnNpdmVseSBzZXJpYWxpemUgb2JqZWN0IG1lbWJlcnMuIE1lbWJlcnMgYXJlIHNlbGVjdGVkIGZyb21cbiAgICAgICAgICAgICAgLy8gZWl0aGVyIGEgdXNlci1zcGVjaWZpZWQgbGlzdCBvZiBwcm9wZXJ0eSBuYW1lcywgb3IgdGhlIG9iamVjdFxuICAgICAgICAgICAgICAvLyBpdHNlbGYuXG4gICAgICAgICAgICAgIGZvckVhY2gocHJvcGVydGllcyB8fCB2YWx1ZSwgZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSBzZXJpYWxpemUocHJvcGVydHksIHZhbHVlLCBjYWxsYmFjaywgcHJvcGVydGllcywgd2hpdGVzcGFjZSwgaW5kZW50YXRpb24sIHN0YWNrKTtcbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCAhPT0gdW5kZWYpIHtcbiAgICAgICAgICAgICAgICAgIC8vIEFjY29yZGluZyB0byBFUyA1LjEgc2VjdGlvbiAxNS4xMi4zOiBcIklmIGBnYXBgIHt3aGl0ZXNwYWNlfVxuICAgICAgICAgICAgICAgICAgLy8gaXMgbm90IHRoZSBlbXB0eSBzdHJpbmcsIGxldCBgbWVtYmVyYCB7cXVvdGUocHJvcGVydHkpICsgXCI6XCJ9XG4gICAgICAgICAgICAgICAgICAvLyBiZSB0aGUgY29uY2F0ZW5hdGlvbiBvZiBgbWVtYmVyYCBhbmQgdGhlIGBzcGFjZWAgY2hhcmFjdGVyLlwiXG4gICAgICAgICAgICAgICAgICAvLyBUaGUgXCJgc3BhY2VgIGNoYXJhY3RlclwiIHJlZmVycyB0byB0aGUgbGl0ZXJhbCBzcGFjZVxuICAgICAgICAgICAgICAgICAgLy8gY2hhcmFjdGVyLCBub3QgdGhlIGBzcGFjZWAge3dpZHRofSBhcmd1bWVudCBwcm92aWRlZCB0b1xuICAgICAgICAgICAgICAgICAgLy8gYEpTT04uc3RyaW5naWZ5YC5cbiAgICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChxdW90ZShwcm9wZXJ0eSkgKyBcIjpcIiArICh3aGl0ZXNwYWNlID8gXCIgXCIgOiBcIlwiKSArIGVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdHMubGVuZ3RoID8gKHdoaXRlc3BhY2UgPyBcIntcXG5cIiArIGluZGVudGF0aW9uICsgcmVzdWx0cy5qb2luKFwiLFxcblwiICsgaW5kZW50YXRpb24pICsgXCJcXG5cIiArIHByZWZpeCArIFwifVwiIDogKFwie1wiICsgcmVzdWx0cy5qb2luKFwiLFwiKSArIFwifVwiKSkgOiBcInt9XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBSZW1vdmUgdGhlIG9iamVjdCBmcm9tIHRoZSB0cmF2ZXJzZWQgb2JqZWN0IHN0YWNrLlxuICAgICAgICAgICAgc3RhY2sucG9wKCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBQdWJsaWM6IGBKU09OLnN0cmluZ2lmeWAuIFNlZSBFUyA1LjEgc2VjdGlvbiAxNS4xMi4zLlxuICAgICAgICBleHBvcnRzLnN0cmluZ2lmeSA9IGZ1bmN0aW9uIChzb3VyY2UsIGZpbHRlciwgd2lkdGgpIHtcbiAgICAgICAgICB2YXIgd2hpdGVzcGFjZSwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIGNsYXNzTmFtZTtcbiAgICAgICAgICBpZiAob2JqZWN0VHlwZXNbdHlwZW9mIGZpbHRlcl0gJiYgZmlsdGVyKSB7XG4gICAgICAgICAgICBpZiAoKGNsYXNzTmFtZSA9IGdldENsYXNzLmNhbGwoZmlsdGVyKSkgPT0gZnVuY3Rpb25DbGFzcykge1xuICAgICAgICAgICAgICBjYWxsYmFjayA9IGZpbHRlcjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09IGFycmF5Q2xhc3MpIHtcbiAgICAgICAgICAgICAgLy8gQ29udmVydCB0aGUgcHJvcGVydHkgbmFtZXMgYXJyYXkgaW50byBhIG1ha2VzaGlmdCBzZXQuXG4gICAgICAgICAgICAgIHByb3BlcnRpZXMgPSB7fTtcbiAgICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwLCBsZW5ndGggPSBmaWx0ZXIubGVuZ3RoLCB2YWx1ZTsgaW5kZXggPCBsZW5ndGg7IHZhbHVlID0gZmlsdGVyW2luZGV4KytdLCAoKGNsYXNzTmFtZSA9IGdldENsYXNzLmNhbGwodmFsdWUpKSwgY2xhc3NOYW1lID09IHN0cmluZ0NsYXNzIHx8IGNsYXNzTmFtZSA9PSBudW1iZXJDbGFzcykgJiYgKHByb3BlcnRpZXNbdmFsdWVdID0gMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAod2lkdGgpIHtcbiAgICAgICAgICAgIGlmICgoY2xhc3NOYW1lID0gZ2V0Q2xhc3MuY2FsbCh3aWR0aCkpID09IG51bWJlckNsYXNzKSB7XG4gICAgICAgICAgICAgIC8vIENvbnZlcnQgdGhlIGB3aWR0aGAgdG8gYW4gaW50ZWdlciBhbmQgY3JlYXRlIGEgc3RyaW5nIGNvbnRhaW5pbmdcbiAgICAgICAgICAgICAgLy8gYHdpZHRoYCBudW1iZXIgb2Ygc3BhY2UgY2hhcmFjdGVycy5cbiAgICAgICAgICAgICAgaWYgKCh3aWR0aCAtPSB3aWR0aCAlIDEpID4gMCkge1xuICAgICAgICAgICAgICAgIGZvciAod2hpdGVzcGFjZSA9IFwiXCIsIHdpZHRoID4gMTAgJiYgKHdpZHRoID0gMTApOyB3aGl0ZXNwYWNlLmxlbmd0aCA8IHdpZHRoOyB3aGl0ZXNwYWNlICs9IFwiIFwiKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT0gc3RyaW5nQ2xhc3MpIHtcbiAgICAgICAgICAgICAgd2hpdGVzcGFjZSA9IHdpZHRoLmxlbmd0aCA8PSAxMCA/IHdpZHRoIDogd2lkdGguc2xpY2UoMCwgMTApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBPcGVyYSA8PSA3LjU0dTIgZGlzY2FyZHMgdGhlIHZhbHVlcyBhc3NvY2lhdGVkIHdpdGggZW1wdHkgc3RyaW5nIGtleXNcbiAgICAgICAgICAvLyAoYFwiXCJgKSBvbmx5IGlmIHRoZXkgYXJlIHVzZWQgZGlyZWN0bHkgd2l0aGluIGFuIG9iamVjdCBtZW1iZXIgbGlzdFxuICAgICAgICAgIC8vIChlLmcuLCBgIShcIlwiIGluIHsgXCJcIjogMX0pYCkuXG4gICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZShcIlwiLCAodmFsdWUgPSB7fSwgdmFsdWVbXCJcIl0gPSBzb3VyY2UsIHZhbHVlKSwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIHdoaXRlc3BhY2UsIFwiXCIsIFtdKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLy8gUHVibGljOiBQYXJzZXMgYSBKU09OIHNvdXJjZSBzdHJpbmcuXG4gICAgICBpZiAoIWhhcyhcImpzb24tcGFyc2VcIikpIHtcbiAgICAgICAgdmFyIGZyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGU7XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IEEgbWFwIG9mIGVzY2FwZWQgY29udHJvbCBjaGFyYWN0ZXJzIGFuZCB0aGVpciB1bmVzY2FwZWRcbiAgICAgICAgLy8gZXF1aXZhbGVudHMuXG4gICAgICAgIHZhciBVbmVzY2FwZXMgPSB7XG4gICAgICAgICAgOTI6IFwiXFxcXFwiLFxuICAgICAgICAgIDM0OiAnXCInLFxuICAgICAgICAgIDQ3OiBcIi9cIixcbiAgICAgICAgICA5ODogXCJcXGJcIixcbiAgICAgICAgICAxMTY6IFwiXFx0XCIsXG4gICAgICAgICAgMTEwOiBcIlxcblwiLFxuICAgICAgICAgIDEwMjogXCJcXGZcIixcbiAgICAgICAgICAxMTQ6IFwiXFxyXCJcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogU3RvcmVzIHRoZSBwYXJzZXIgc3RhdGUuXG4gICAgICAgIHZhciBJbmRleCwgU291cmNlO1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZXNldHMgdGhlIHBhcnNlciBzdGF0ZSBhbmQgdGhyb3dzIGEgYFN5bnRheEVycm9yYC5cbiAgICAgICAgdmFyIGFib3J0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIEluZGV4ID0gU291cmNlID0gbnVsbDtcbiAgICAgICAgICB0aHJvdyBTeW50YXhFcnJvcigpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZXR1cm5zIHRoZSBuZXh0IHRva2VuLCBvciBgXCIkXCJgIGlmIHRoZSBwYXJzZXIgaGFzIHJlYWNoZWRcbiAgICAgICAgLy8gdGhlIGVuZCBvZiB0aGUgc291cmNlIHN0cmluZy4gQSB0b2tlbiBtYXkgYmUgYSBzdHJpbmcsIG51bWJlciwgYG51bGxgXG4gICAgICAgIC8vIGxpdGVyYWwsIG9yIEJvb2xlYW4gbGl0ZXJhbC5cbiAgICAgICAgdmFyIGxleCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgc291cmNlID0gU291cmNlLCBsZW5ndGggPSBzb3VyY2UubGVuZ3RoLCB2YWx1ZSwgYmVnaW4sIHBvc2l0aW9uLCBpc1NpZ25lZCwgY2hhckNvZGU7XG4gICAgICAgICAgd2hpbGUgKEluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KTtcbiAgICAgICAgICAgIHN3aXRjaCAoY2hhckNvZGUpIHtcbiAgICAgICAgICAgICAgY2FzZSA5OiBjYXNlIDEwOiBjYXNlIDEzOiBjYXNlIDMyOlxuICAgICAgICAgICAgICAgIC8vIFNraXAgd2hpdGVzcGFjZSB0b2tlbnMsIGluY2x1ZGluZyB0YWJzLCBjYXJyaWFnZSByZXR1cm5zLCBsaW5lXG4gICAgICAgICAgICAgICAgLy8gZmVlZHMsIGFuZCBzcGFjZSBjaGFyYWN0ZXJzLlxuICAgICAgICAgICAgICAgIEluZGV4Kys7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIGNhc2UgMTIzOiBjYXNlIDEyNTogY2FzZSA5MTogY2FzZSA5MzogY2FzZSA1ODogY2FzZSA0NDpcbiAgICAgICAgICAgICAgICAvLyBQYXJzZSBhIHB1bmN0dWF0b3IgdG9rZW4gKGB7YCwgYH1gLCBgW2AsIGBdYCwgYDpgLCBvciBgLGApIGF0XG4gICAgICAgICAgICAgICAgLy8gdGhlIGN1cnJlbnQgcG9zaXRpb24uXG4gICAgICAgICAgICAgICAgdmFsdWUgPSBjaGFySW5kZXhCdWdneSA/IHNvdXJjZS5jaGFyQXQoSW5kZXgpIDogc291cmNlW0luZGV4XTtcbiAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgICAgICAvLyBgXCJgIGRlbGltaXRzIGEgSlNPTiBzdHJpbmc7IGFkdmFuY2UgdG8gdGhlIG5leHQgY2hhcmFjdGVyIGFuZFxuICAgICAgICAgICAgICAgIC8vIGJlZ2luIHBhcnNpbmcgdGhlIHN0cmluZy4gU3RyaW5nIHRva2VucyBhcmUgcHJlZml4ZWQgd2l0aCB0aGVcbiAgICAgICAgICAgICAgICAvLyBzZW50aW5lbCBgQGAgY2hhcmFjdGVyIHRvIGRpc3Rpbmd1aXNoIHRoZW0gZnJvbSBwdW5jdHVhdG9ycyBhbmRcbiAgICAgICAgICAgICAgICAvLyBlbmQtb2Ytc3RyaW5nIHRva2Vucy5cbiAgICAgICAgICAgICAgICBmb3IgKHZhbHVlID0gXCJAXCIsIEluZGV4Kys7IEluZGV4IDwgbGVuZ3RoOykge1xuICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPCAzMikge1xuICAgICAgICAgICAgICAgICAgICAvLyBVbmVzY2FwZWQgQVNDSUkgY29udHJvbCBjaGFyYWN0ZXJzICh0aG9zZSB3aXRoIGEgY29kZSB1bml0XG4gICAgICAgICAgICAgICAgICAgIC8vIGxlc3MgdGhhbiB0aGUgc3BhY2UgY2hhcmFjdGVyKSBhcmUgbm90IHBlcm1pdHRlZC5cbiAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY2hhckNvZGUgPT0gOTIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQSByZXZlcnNlIHNvbGlkdXMgKGBcXGApIG1hcmtzIHRoZSBiZWdpbm5pbmcgb2YgYW4gZXNjYXBlZFxuICAgICAgICAgICAgICAgICAgICAvLyBjb250cm9sIGNoYXJhY3RlciAoaW5jbHVkaW5nIGBcImAsIGBcXGAsIGFuZCBgL2ApIG9yIFVuaWNvZGVcbiAgICAgICAgICAgICAgICAgICAgLy8gZXNjYXBlIHNlcXVlbmNlLlxuICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KCsrSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGNoYXJDb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSA5MjogY2FzZSAzNDogY2FzZSA0NzogY2FzZSA5ODogY2FzZSAxMTY6IGNhc2UgMTEwOiBjYXNlIDEwMjogY2FzZSAxMTQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXZpdmUgZXNjYXBlZCBjb250cm9sIGNoYXJhY3RlcnMuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSArPSBVbmVzY2FwZXNbY2hhckNvZGVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgSW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTE3OlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYFxcdWAgbWFya3MgdGhlIGJlZ2lubmluZyBvZiBhIFVuaWNvZGUgZXNjYXBlIHNlcXVlbmNlLlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWR2YW5jZSB0byB0aGUgZmlyc3QgY2hhcmFjdGVyIGFuZCB2YWxpZGF0ZSB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZvdXItZGlnaXQgY29kZSBwb2ludC5cbiAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luID0gKytJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAocG9zaXRpb24gPSBJbmRleCArIDQ7IEluZGV4IDwgcG9zaXRpb247IEluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEEgdmFsaWQgc2VxdWVuY2UgY29tcHJpc2VzIGZvdXIgaGV4ZGlnaXRzIChjYXNlLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBpbnNlbnNpdGl2ZSkgdGhhdCBmb3JtIGEgc2luZ2xlIGhleGFkZWNpbWFsIHZhbHVlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1NyB8fCBjaGFyQ29kZSA+PSA5NyAmJiBjaGFyQ29kZSA8PSAxMDIgfHwgY2hhckNvZGUgPj0gNjUgJiYgY2hhckNvZGUgPD0gNzApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW52YWxpZCBVbmljb2RlIGVzY2FwZSBzZXF1ZW5jZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXZpdmUgdGhlIGVzY2FwZWQgY2hhcmFjdGVyLlxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgKz0gZnJvbUNoYXJDb2RlKFwiMHhcIiArIHNvdXJjZS5zbGljZShiZWdpbiwgSW5kZXgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBJbnZhbGlkIGVzY2FwZSBzZXF1ZW5jZS5cbiAgICAgICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA9PSAzNCkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIEFuIHVuZXNjYXBlZCBkb3VibGUtcXVvdGUgY2hhcmFjdGVyIG1hcmtzIHRoZSBlbmQgb2YgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgLy8gc3RyaW5nLlxuICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBiZWdpbiA9IEluZGV4O1xuICAgICAgICAgICAgICAgICAgICAvLyBPcHRpbWl6ZSBmb3IgdGhlIGNvbW1vbiBjYXNlIHdoZXJlIGEgc3RyaW5nIGlzIHZhbGlkLlxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY2hhckNvZGUgPj0gMzIgJiYgY2hhckNvZGUgIT0gOTIgJiYgY2hhckNvZGUgIT0gMzQpIHtcbiAgICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KCsrSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIEFwcGVuZCB0aGUgc3RyaW5nIGFzLWlzLlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZSArPSBzb3VyY2Uuc2xpY2UoYmVnaW4sIEluZGV4KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KSA9PSAzNCkge1xuICAgICAgICAgICAgICAgICAgLy8gQWR2YW5jZSB0byB0aGUgbmV4dCBjaGFyYWN0ZXIgYW5kIHJldHVybiB0aGUgcmV2aXZlZCBzdHJpbmcuXG4gICAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBVbnRlcm1pbmF0ZWQgc3RyaW5nLlxuICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgLy8gUGFyc2UgbnVtYmVycyBhbmQgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgYmVnaW4gPSBJbmRleDtcbiAgICAgICAgICAgICAgICAvLyBBZHZhbmNlIHBhc3QgdGhlIG5lZ2F0aXZlIHNpZ24sIGlmIG9uZSBpcyBzcGVjaWZpZWQuXG4gICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID09IDQ1KSB7XG4gICAgICAgICAgICAgICAgICBpc1NpZ25lZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KCsrSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBQYXJzZSBhbiBpbnRlZ2VyIG9yIGZsb2F0aW5nLXBvaW50IHZhbHVlLlxuICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1Nykge1xuICAgICAgICAgICAgICAgICAgLy8gTGVhZGluZyB6ZXJvZXMgYXJlIGludGVycHJldGVkIGFzIG9jdGFsIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID09IDQ4ICYmICgoY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCArIDEpKSwgY2hhckNvZGUgPj0gNDggJiYgY2hhckNvZGUgPD0gNTcpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIElsbGVnYWwgb2N0YWwgbGl0ZXJhbC5cbiAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGlzU2lnbmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAvLyBQYXJzZSB0aGUgaW50ZWdlciBjb21wb25lbnQuXG4gICAgICAgICAgICAgICAgICBmb3IgKDsgSW5kZXggPCBsZW5ndGggJiYgKChjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KSksIGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KTsgSW5kZXgrKyk7XG4gICAgICAgICAgICAgICAgICAvLyBGbG9hdHMgY2Fubm90IGNvbnRhaW4gYSBsZWFkaW5nIGRlY2ltYWwgcG9pbnQ7IGhvd2V2ZXIsIHRoaXNcbiAgICAgICAgICAgICAgICAgIC8vIGNhc2UgaXMgYWxyZWFkeSBhY2NvdW50ZWQgZm9yIGJ5IHRoZSBwYXJzZXIuXG4gICAgICAgICAgICAgICAgICBpZiAoc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpID09IDQ2KSB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gKytJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgLy8gUGFyc2UgdGhlIGRlY2ltYWwgY29tcG9uZW50LlxuICAgICAgICAgICAgICAgICAgICBmb3IgKDsgcG9zaXRpb24gPCBsZW5ndGggJiYgKChjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KHBvc2l0aW9uKSksIGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KTsgcG9zaXRpb24rKyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3NpdGlvbiA9PSBJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIElsbGVnYWwgdHJhaWxpbmcgZGVjaW1hbC5cbiAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIEluZGV4ID0gcG9zaXRpb247XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAvLyBQYXJzZSBleHBvbmVudHMuIFRoZSBgZWAgZGVub3RpbmcgdGhlIGV4cG9uZW50IGlzXG4gICAgICAgICAgICAgICAgICAvLyBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPT0gMTAxIHx8IGNoYXJDb2RlID09IDY5KSB7XG4gICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoKytJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNraXAgcGFzdCB0aGUgc2lnbiBmb2xsb3dpbmcgdGhlIGV4cG9uZW50LCBpZiBvbmUgaXNcbiAgICAgICAgICAgICAgICAgICAgLy8gc3BlY2lmaWVkLlxuICAgICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPT0gNDMgfHwgY2hhckNvZGUgPT0gNDUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIFBhcnNlIHRoZSBleHBvbmVudGlhbCBjb21wb25lbnQuXG4gICAgICAgICAgICAgICAgICAgIGZvciAocG9zaXRpb24gPSBJbmRleDsgcG9zaXRpb24gPCBsZW5ndGggJiYgKChjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KHBvc2l0aW9uKSksIGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KTsgcG9zaXRpb24rKyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3NpdGlvbiA9PSBJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIElsbGVnYWwgZW1wdHkgZXhwb25lbnQuXG4gICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBJbmRleCA9IHBvc2l0aW9uO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgLy8gQ29lcmNlIHRoZSBwYXJzZWQgdmFsdWUgdG8gYSBKYXZhU2NyaXB0IG51bWJlci5cbiAgICAgICAgICAgICAgICAgIHJldHVybiArc291cmNlLnNsaWNlKGJlZ2luLCBJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEEgbmVnYXRpdmUgc2lnbiBtYXkgb25seSBwcmVjZWRlIG51bWJlcnMuXG4gICAgICAgICAgICAgICAgaWYgKGlzU2lnbmVkKSB7XG4gICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBgdHJ1ZWAsIGBmYWxzZWAsIGFuZCBgbnVsbGAgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgaWYgKHNvdXJjZS5zbGljZShJbmRleCwgSW5kZXggKyA0KSA9PSBcInRydWVcIikge1xuICAgICAgICAgICAgICAgICAgSW5kZXggKz0gNDtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnNsaWNlKEluZGV4LCBJbmRleCArIDUpID09IFwiZmFsc2VcIikge1xuICAgICAgICAgICAgICAgICAgSW5kZXggKz0gNTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5zbGljZShJbmRleCwgSW5kZXggKyA0KSA9PSBcIm51bGxcIikge1xuICAgICAgICAgICAgICAgICAgSW5kZXggKz0gNDtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBVbnJlY29nbml6ZWQgdG9rZW4uXG4gICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gUmV0dXJuIHRoZSBzZW50aW5lbCBgJGAgY2hhcmFjdGVyIGlmIHRoZSBwYXJzZXIgaGFzIHJlYWNoZWQgdGhlIGVuZFxuICAgICAgICAgIC8vIG9mIHRoZSBzb3VyY2Ugc3RyaW5nLlxuICAgICAgICAgIHJldHVybiBcIiRcIjtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogUGFyc2VzIGEgSlNPTiBgdmFsdWVgIHRva2VuLlxuICAgICAgICB2YXIgZ2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdHMsIGhhc01lbWJlcnM7XG4gICAgICAgICAgaWYgKHZhbHVlID09IFwiJFwiKSB7XG4gICAgICAgICAgICAvLyBVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dC5cbiAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgaWYgKChjaGFySW5kZXhCdWdneSA/IHZhbHVlLmNoYXJBdCgwKSA6IHZhbHVlWzBdKSA9PSBcIkBcIikge1xuICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIHNlbnRpbmVsIGBAYCBjaGFyYWN0ZXIuXG4gICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5zbGljZSgxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFBhcnNlIG9iamVjdCBhbmQgYXJyYXkgbGl0ZXJhbHMuXG4gICAgICAgICAgICBpZiAodmFsdWUgPT0gXCJbXCIpIHtcbiAgICAgICAgICAgICAgLy8gUGFyc2VzIGEgSlNPTiBhcnJheSwgcmV0dXJuaW5nIGEgbmV3IEphdmFTY3JpcHQgYXJyYXkuXG4gICAgICAgICAgICAgIHJlc3VsdHMgPSBbXTtcbiAgICAgICAgICAgICAgZm9yICg7OyBoYXNNZW1iZXJzIHx8IChoYXNNZW1iZXJzID0gdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGxleCgpO1xuICAgICAgICAgICAgICAgIC8vIEEgY2xvc2luZyBzcXVhcmUgYnJhY2tldCBtYXJrcyB0aGUgZW5kIG9mIHRoZSBhcnJheSBsaXRlcmFsLlxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIl1cIikge1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBhcnJheSBsaXRlcmFsIGNvbnRhaW5zIGVsZW1lbnRzLCB0aGUgY3VycmVudCB0b2tlblxuICAgICAgICAgICAgICAgIC8vIHNob3VsZCBiZSBhIGNvbW1hIHNlcGFyYXRpbmcgdGhlIHByZXZpb3VzIGVsZW1lbnQgZnJvbSB0aGVcbiAgICAgICAgICAgICAgICAvLyBuZXh0LlxuICAgICAgICAgICAgICAgIGlmIChoYXNNZW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCIsXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiXVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gVW5leHBlY3RlZCB0cmFpbGluZyBgLGAgaW4gYXJyYXkgbGl0ZXJhbC5cbiAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBBIGAsYCBtdXN0IHNlcGFyYXRlIGVhY2ggYXJyYXkgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gRWxpc2lvbnMgYW5kIGxlYWRpbmcgY29tbWFzIGFyZSBub3QgcGVybWl0dGVkLlxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIixcIikge1xuICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGdldCh2YWx1ZSkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PSBcIntcIikge1xuICAgICAgICAgICAgICAvLyBQYXJzZXMgYSBKU09OIG9iamVjdCwgcmV0dXJuaW5nIGEgbmV3IEphdmFTY3JpcHQgb2JqZWN0LlxuICAgICAgICAgICAgICByZXN1bHRzID0ge307XG4gICAgICAgICAgICAgIGZvciAoOzsgaGFzTWVtYmVycyB8fCAoaGFzTWVtYmVycyA9IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAvLyBBIGNsb3NpbmcgY3VybHkgYnJhY2UgbWFya3MgdGhlIGVuZCBvZiB0aGUgb2JqZWN0IGxpdGVyYWwuXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwifVwiKSB7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9iamVjdCBsaXRlcmFsIGNvbnRhaW5zIG1lbWJlcnMsIHRoZSBjdXJyZW50IHRva2VuXG4gICAgICAgICAgICAgICAgLy8gc2hvdWxkIGJlIGEgY29tbWEgc2VwYXJhdG9yLlxuICAgICAgICAgICAgICAgIGlmIChoYXNNZW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCIsXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwifVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gVW5leHBlY3RlZCB0cmFpbGluZyBgLGAgaW4gb2JqZWN0IGxpdGVyYWwuXG4gICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQSBgLGAgbXVzdCBzZXBhcmF0ZSBlYWNoIG9iamVjdCBtZW1iZXIuXG4gICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIExlYWRpbmcgY29tbWFzIGFyZSBub3QgcGVybWl0dGVkLCBvYmplY3QgcHJvcGVydHkgbmFtZXMgbXVzdCBiZVxuICAgICAgICAgICAgICAgIC8vIGRvdWJsZS1xdW90ZWQgc3RyaW5ncywgYW5kIGEgYDpgIG11c3Qgc2VwYXJhdGUgZWFjaCBwcm9wZXJ0eVxuICAgICAgICAgICAgICAgIC8vIG5hbWUgYW5kIHZhbHVlLlxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIixcIiB8fCB0eXBlb2YgdmFsdWUgIT0gXCJzdHJpbmdcIiB8fCAoY2hhckluZGV4QnVnZ3kgPyB2YWx1ZS5jaGFyQXQoMCkgOiB2YWx1ZVswXSkgIT0gXCJAXCIgfHwgbGV4KCkgIT0gXCI6XCIpIHtcbiAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdHNbdmFsdWUuc2xpY2UoMSldID0gZ2V0KGxleCgpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFVuZXhwZWN0ZWQgdG9rZW4gZW5jb3VudGVyZWQuXG4gICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFVwZGF0ZXMgYSB0cmF2ZXJzZWQgb2JqZWN0IG1lbWJlci5cbiAgICAgICAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uIChzb3VyY2UsIHByb3BlcnR5LCBjYWxsYmFjaykge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0gd2Fsayhzb3VyY2UsIHByb3BlcnR5LCBjYWxsYmFjayk7XG4gICAgICAgICAgaWYgKGVsZW1lbnQgPT09IHVuZGVmKSB7XG4gICAgICAgICAgICBkZWxldGUgc291cmNlW3Byb3BlcnR5XTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc291cmNlW3Byb3BlcnR5XSA9IGVsZW1lbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZWN1cnNpdmVseSB0cmF2ZXJzZXMgYSBwYXJzZWQgSlNPTiBvYmplY3QsIGludm9raW5nIHRoZVxuICAgICAgICAvLyBgY2FsbGJhY2tgIGZ1bmN0aW9uIGZvciBlYWNoIHZhbHVlLiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZVxuICAgICAgICAvLyBgV2Fsayhob2xkZXIsIG5hbWUpYCBvcGVyYXRpb24gZGVmaW5lZCBpbiBFUyA1LjEgc2VjdGlvbiAxNS4xMi4yLlxuICAgICAgICB2YXIgd2FsayA9IGZ1bmN0aW9uIChzb3VyY2UsIHByb3BlcnR5LCBjYWxsYmFjaykge1xuICAgICAgICAgIHZhciB2YWx1ZSA9IHNvdXJjZVtwcm9wZXJ0eV0sIGxlbmd0aDtcbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgIC8vIGBmb3JFYWNoYCBjYW4ndCBiZSB1c2VkIHRvIHRyYXZlcnNlIGFuIGFycmF5IGluIE9wZXJhIDw9IDguNTRcbiAgICAgICAgICAgIC8vIGJlY2F1c2UgaXRzIGBPYmplY3QjaGFzT3duUHJvcGVydHlgIGltcGxlbWVudGF0aW9uIHJldHVybnMgYGZhbHNlYFxuICAgICAgICAgICAgLy8gZm9yIGFycmF5IGluZGljZXMgKGUuZy4sIGAhWzEsIDIsIDNdLmhhc093blByb3BlcnR5KFwiMFwiKWApLlxuICAgICAgICAgICAgaWYgKGdldENsYXNzLmNhbGwodmFsdWUpID09IGFycmF5Q2xhc3MpIHtcbiAgICAgICAgICAgICAgZm9yIChsZW5ndGggPSB2YWx1ZS5sZW5ndGg7IGxlbmd0aC0tOykge1xuICAgICAgICAgICAgICAgIHVwZGF0ZSh2YWx1ZSwgbGVuZ3RoLCBjYWxsYmFjayk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGZvckVhY2godmFsdWUsIGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIHVwZGF0ZSh2YWx1ZSwgcHJvcGVydHksIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjYWxsYmFjay5jYWxsKHNvdXJjZSwgcHJvcGVydHksIHZhbHVlKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBQdWJsaWM6IGBKU09OLnBhcnNlYC4gU2VlIEVTIDUuMSBzZWN0aW9uIDE1LjEyLjIuXG4gICAgICAgIGV4cG9ydHMucGFyc2UgPSBmdW5jdGlvbiAoc291cmNlLCBjYWxsYmFjaykge1xuICAgICAgICAgIHZhciByZXN1bHQsIHZhbHVlO1xuICAgICAgICAgIEluZGV4ID0gMDtcbiAgICAgICAgICBTb3VyY2UgPSBcIlwiICsgc291cmNlO1xuICAgICAgICAgIHJlc3VsdCA9IGdldChsZXgoKSk7XG4gICAgICAgICAgLy8gSWYgYSBKU09OIHN0cmluZyBjb250YWlucyBtdWx0aXBsZSB0b2tlbnMsIGl0IGlzIGludmFsaWQuXG4gICAgICAgICAgaWYgKGxleCgpICE9IFwiJFwiKSB7XG4gICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBSZXNldCB0aGUgcGFyc2VyIHN0YXRlLlxuICAgICAgICAgIEluZGV4ID0gU291cmNlID0gbnVsbDtcbiAgICAgICAgICByZXR1cm4gY2FsbGJhY2sgJiYgZ2V0Q2xhc3MuY2FsbChjYWxsYmFjaykgPT0gZnVuY3Rpb25DbGFzcyA/IHdhbGsoKHZhbHVlID0ge30sIHZhbHVlW1wiXCJdID0gcmVzdWx0LCB2YWx1ZSksIFwiXCIsIGNhbGxiYWNrKSA6IHJlc3VsdDtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBleHBvcnRzW1wicnVuSW5Db250ZXh0XCJdID0gcnVuSW5Db250ZXh0O1xuICAgIHJldHVybiBleHBvcnRzO1xuICB9XG5cbiAgaWYgKGZyZWVFeHBvcnRzICYmICFpc0xvYWRlcikge1xuICAgIC8vIEV4cG9ydCBmb3IgQ29tbW9uSlMgZW52aXJvbm1lbnRzLlxuICAgIHJ1bkluQ29udGV4dChyb290LCBmcmVlRXhwb3J0cyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gRXhwb3J0IGZvciB3ZWIgYnJvd3NlcnMgYW5kIEphdmFTY3JpcHQgZW5naW5lcy5cbiAgICB2YXIgbmF0aXZlSlNPTiA9IHJvb3QuSlNPTixcbiAgICAgICAgcHJldmlvdXNKU09OID0gcm9vdFtcIkpTT04zXCJdLFxuICAgICAgICBpc1Jlc3RvcmVkID0gZmFsc2U7XG5cbiAgICB2YXIgSlNPTjMgPSBydW5JbkNvbnRleHQocm9vdCwgKHJvb3RbXCJKU09OM1wiXSA9IHtcbiAgICAgIC8vIFB1YmxpYzogUmVzdG9yZXMgdGhlIG9yaWdpbmFsIHZhbHVlIG9mIHRoZSBnbG9iYWwgYEpTT05gIG9iamVjdCBhbmRcbiAgICAgIC8vIHJldHVybnMgYSByZWZlcmVuY2UgdG8gdGhlIGBKU09OM2Agb2JqZWN0LlxuICAgICAgXCJub0NvbmZsaWN0XCI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFpc1Jlc3RvcmVkKSB7XG4gICAgICAgICAgaXNSZXN0b3JlZCA9IHRydWU7XG4gICAgICAgICAgcm9vdC5KU09OID0gbmF0aXZlSlNPTjtcbiAgICAgICAgICByb290W1wiSlNPTjNcIl0gPSBwcmV2aW91c0pTT047XG4gICAgICAgICAgbmF0aXZlSlNPTiA9IHByZXZpb3VzSlNPTiA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEpTT04zO1xuICAgICAgfVxuICAgIH0pKTtcblxuICAgIHJvb3QuSlNPTiA9IHtcbiAgICAgIFwicGFyc2VcIjogSlNPTjMucGFyc2UsXG4gICAgICBcInN0cmluZ2lmeVwiOiBKU09OMy5zdHJpbmdpZnlcbiAgICB9O1xuICB9XG5cbiAgLy8gRXhwb3J0IGZvciBhc3luY2hyb25vdXMgbW9kdWxlIGxvYWRlcnMuXG4gIGlmIChpc0xvYWRlcikge1xuICAgIGRlZmluZShmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gSlNPTjM7XG4gICAgfSk7XG4gIH1cbn0pLmNhbGwodGhpcyk7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHt9XSw1OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXMgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFNpbXBsZSBxdWVyeSBzdHJpbmcgcGFyc2VyLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBxdWVyeSBUaGUgcXVlcnkgc3RyaW5nIHRoYXQgbmVlZHMgdG8gYmUgcGFyc2VkLlxuICogQHJldHVybnMge09iamVjdH1cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIHF1ZXJ5c3RyaW5nKHF1ZXJ5KSB7XG4gIHZhciBwYXJzZXIgPSAvKFtePT8mXSspPT8oW14mXSopL2dcbiAgICAsIHJlc3VsdCA9IHt9XG4gICAgLCBwYXJ0O1xuXG4gIC8vXG4gIC8vIExpdHRsZSBuaWZ0eSBwYXJzaW5nIGhhY2ssIGxldmVyYWdlIHRoZSBmYWN0IHRoYXQgUmVnRXhwLmV4ZWMgaW5jcmVtZW50c1xuICAvLyB0aGUgbGFzdEluZGV4IHByb3BlcnR5IHNvIHdlIGNhbiBjb250aW51ZSBleGVjdXRpbmcgdGhpcyBsb29wIHVudGlsIHdlJ3ZlXG4gIC8vIHBhcnNlZCBhbGwgcmVzdWx0cy5cbiAgLy9cbiAgZm9yICg7XG4gICAgcGFydCA9IHBhcnNlci5leGVjKHF1ZXJ5KTtcbiAgICByZXN1bHRbZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRbMV0pXSA9IGRlY29kZVVSSUNvbXBvbmVudChwYXJ0WzJdKVxuICApO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGEgcXVlcnkgc3RyaW5nIHRvIGFuIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIE9iamVjdCB0aGF0IHNob3VsZCBiZSB0cmFuc2Zvcm1lZC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBwcmVmaXggT3B0aW9uYWwgcHJlZml4LlxuICogQHJldHVybnMge1N0cmluZ31cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIHF1ZXJ5c3RyaW5naWZ5KG9iaiwgcHJlZml4KSB7XG4gIHByZWZpeCA9IHByZWZpeCB8fCAnJztcblxuICB2YXIgcGFpcnMgPSBbXTtcblxuICAvL1xuICAvLyBPcHRpb25hbGx5IHByZWZpeCB3aXRoIGEgJz8nIGlmIG5lZWRlZFxuICAvL1xuICBpZiAoJ3N0cmluZycgIT09IHR5cGVvZiBwcmVmaXgpIHByZWZpeCA9ICc/JztcblxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKGhhcy5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgcGFpcnMucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArJz0nKyBlbmNvZGVVUklDb21wb25lbnQob2JqW2tleV0pKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGFpcnMubGVuZ3RoID8gcHJlZml4ICsgcGFpcnMuam9pbignJicpIDogJyc7XG59XG5cbi8vXG4vLyBFeHBvc2UgdGhlIG1vZHVsZS5cbi8vXG5leHBvcnRzLnN0cmluZ2lmeSA9IHF1ZXJ5c3RyaW5naWZ5O1xuZXhwb3J0cy5wYXJzZSA9IHF1ZXJ5c3RyaW5nO1xuXG59LHt9XSw2MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ2hlY2sgaWYgd2UncmUgcmVxdWlyZWQgdG8gYWRkIGEgcG9ydCBudW1iZXIuXG4gKlxuICogQHNlZSBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RlZmF1bHQtcG9ydFxuICogQHBhcmFtIHtOdW1iZXJ8U3RyaW5nfSBwb3J0IFBvcnQgbnVtYmVyIHdlIG5lZWQgdG8gY2hlY2tcbiAqIEBwYXJhbSB7U3RyaW5nfSBwcm90b2NvbCBQcm90b2NvbCB3ZSBuZWVkIHRvIGNoZWNrIGFnYWluc3QuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gSXMgaXQgYSBkZWZhdWx0IHBvcnQgZm9yIHRoZSBnaXZlbiBwcm90b2NvbFxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVxdWlyZWQocG9ydCwgcHJvdG9jb2wpIHtcbiAgcHJvdG9jb2wgPSBwcm90b2NvbC5zcGxpdCgnOicpWzBdO1xuICBwb3J0ID0gK3BvcnQ7XG5cbiAgaWYgKCFwb3J0KSByZXR1cm4gZmFsc2U7XG5cbiAgc3dpdGNoIChwcm90b2NvbCkge1xuICAgIGNhc2UgJ2h0dHAnOlxuICAgIGNhc2UgJ3dzJzpcbiAgICByZXR1cm4gcG9ydCAhPT0gODA7XG5cbiAgICBjYXNlICdodHRwcyc6XG4gICAgY2FzZSAnd3NzJzpcbiAgICByZXR1cm4gcG9ydCAhPT0gNDQzO1xuXG4gICAgY2FzZSAnZnRwJzpcbiAgICByZXR1cm4gcG9ydCAhPT0gMjE7XG5cbiAgICBjYXNlICdnb3BoZXInOlxuICAgIHJldHVybiBwb3J0ICE9PSA3MDtcblxuICAgIGNhc2UgJ2ZpbGUnOlxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBwb3J0ICE9PSAwO1xufTtcblxufSx7fV0sNjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVxdWlyZWQgPSByZXF1aXJlKCdyZXF1aXJlcy1wb3J0JylcbiAgLCBsb2xjYXRpb24gPSByZXF1aXJlKCcuL2xvbGNhdGlvbicpXG4gICwgcXMgPSByZXF1aXJlKCdxdWVyeXN0cmluZ2lmeScpXG4gICwgcHJvdG9jb2xyZSA9IC9eKFthLXpdW2EtejAtOS4rLV0qOik/KFxcL1xcLyk/KFtcXFNcXHNdKikvaTtcblxuLyoqXG4gKiBUaGVzZSBhcmUgdGhlIHBhcnNlIHJ1bGVzIGZvciB0aGUgVVJMIHBhcnNlciwgaXQgaW5mb3JtcyB0aGUgcGFyc2VyXG4gKiBhYm91dDpcbiAqXG4gKiAwLiBUaGUgY2hhciBpdCBOZWVkcyB0byBwYXJzZSwgaWYgaXQncyBhIHN0cmluZyBpdCBzaG91bGQgYmUgZG9uZSB1c2luZ1xuICogICAgaW5kZXhPZiwgUmVnRXhwIHVzaW5nIGV4ZWMgYW5kIE5hTiBtZWFucyBzZXQgYXMgY3VycmVudCB2YWx1ZS5cbiAqIDEuIFRoZSBwcm9wZXJ0eSB3ZSBzaG91bGQgc2V0IHdoZW4gcGFyc2luZyB0aGlzIHZhbHVlLlxuICogMi4gSW5kaWNhdGlvbiBpZiBpdCdzIGJhY2t3YXJkcyBvciBmb3J3YXJkIHBhcnNpbmcsIHdoZW4gc2V0IGFzIG51bWJlciBpdCdzXG4gKiAgICB0aGUgdmFsdWUgb2YgZXh0cmEgY2hhcnMgdGhhdCBzaG91bGQgYmUgc3BsaXQgb2ZmLlxuICogMy4gSW5oZXJpdCBmcm9tIGxvY2F0aW9uIGlmIG5vbiBleGlzdGluZyBpbiB0aGUgcGFyc2VyLlxuICogNC4gYHRvTG93ZXJDYXNlYCB0aGUgcmVzdWx0aW5nIHZhbHVlLlxuICovXG52YXIgcnVsZXMgPSBbXG4gIFsnIycsICdoYXNoJ10sICAgICAgICAgICAgICAgICAgICAgICAgLy8gRXh0cmFjdCBmcm9tIHRoZSBiYWNrLlxuICBbJz8nLCAncXVlcnknXSwgICAgICAgICAgICAgICAgICAgICAgIC8vIEV4dHJhY3QgZnJvbSB0aGUgYmFjay5cbiAgWycvJywgJ3BhdGhuYW1lJ10sICAgICAgICAgICAgICAgICAgICAvLyBFeHRyYWN0IGZyb20gdGhlIGJhY2suXG4gIFsnQCcsICdhdXRoJywgMV0sICAgICAgICAgICAgICAgICAgICAgLy8gRXh0cmFjdCBmcm9tIHRoZSBmcm9udC5cbiAgW05hTiwgJ2hvc3QnLCB1bmRlZmluZWQsIDEsIDFdLCAgICAgICAvLyBTZXQgbGVmdCBvdmVyIHZhbHVlLlxuICBbLzooXFxkKykkLywgJ3BvcnQnLCB1bmRlZmluZWQsIDFdLCAgICAvLyBSZWdFeHAgdGhlIGJhY2suXG4gIFtOYU4sICdob3N0bmFtZScsIHVuZGVmaW5lZCwgMSwgMV0gICAgLy8gU2V0IGxlZnQgb3Zlci5cbl07XG5cbi8qKlxuICogQHR5cGVkZWYgUHJvdG9jb2xFeHRyYWN0XG4gKiBAdHlwZSBPYmplY3RcbiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSBwcm90b2NvbCBQcm90b2NvbCBtYXRjaGVkIGluIHRoZSBVUkwsIGluIGxvd2VyY2FzZS5cbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gc2xhc2hlcyBgdHJ1ZWAgaWYgcHJvdG9jb2wgaXMgZm9sbG93ZWQgYnkgXCIvL1wiLCBlbHNlIGBmYWxzZWAuXG4gKiBAcHJvcGVydHkge1N0cmluZ30gcmVzdCBSZXN0IG9mIHRoZSBVUkwgdGhhdCBpcyBub3QgcGFydCBvZiB0aGUgcHJvdG9jb2wuXG4gKi9cblxuLyoqXG4gKiBFeHRyYWN0IHByb3RvY29sIGluZm9ybWF0aW9uIGZyb20gYSBVUkwgd2l0aC93aXRob3V0IGRvdWJsZSBzbGFzaCAoXCIvL1wiKS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzcyBVUkwgd2Ugd2FudCB0byBleHRyYWN0IGZyb20uXG4gKiBAcmV0dXJuIHtQcm90b2NvbEV4dHJhY3R9IEV4dHJhY3RlZCBpbmZvcm1hdGlvbi5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBleHRyYWN0UHJvdG9jb2woYWRkcmVzcykge1xuICB2YXIgbWF0Y2ggPSBwcm90b2NvbHJlLmV4ZWMoYWRkcmVzcyk7XG5cbiAgcmV0dXJuIHtcbiAgICBwcm90b2NvbDogbWF0Y2hbMV0gPyBtYXRjaFsxXS50b0xvd2VyQ2FzZSgpIDogJycsXG4gICAgc2xhc2hlczogISFtYXRjaFsyXSxcbiAgICByZXN0OiBtYXRjaFszXVxuICB9O1xufVxuXG4vKipcbiAqIFJlc29sdmUgYSByZWxhdGl2ZSBVUkwgcGF0aG5hbWUgYWdhaW5zdCBhIGJhc2UgVVJMIHBhdGhuYW1lLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSByZWxhdGl2ZSBQYXRobmFtZSBvZiB0aGUgcmVsYXRpdmUgVVJMLlxuICogQHBhcmFtIHtTdHJpbmd9IGJhc2UgUGF0aG5hbWUgb2YgdGhlIGJhc2UgVVJMLlxuICogQHJldHVybiB7U3RyaW5nfSBSZXNvbHZlZCBwYXRobmFtZS5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiByZXNvbHZlKHJlbGF0aXZlLCBiYXNlKSB7XG4gIHZhciBwYXRoID0gKGJhc2UgfHwgJy8nKS5zcGxpdCgnLycpLnNsaWNlKDAsIC0xKS5jb25jYXQocmVsYXRpdmUuc3BsaXQoJy8nKSlcbiAgICAsIGkgPSBwYXRoLmxlbmd0aFxuICAgICwgbGFzdCA9IHBhdGhbaSAtIDFdXG4gICAgLCB1bnNoaWZ0ID0gZmFsc2VcbiAgICAsIHVwID0gMDtcblxuICB3aGlsZSAoaS0tKSB7XG4gICAgaWYgKHBhdGhbaV0gPT09ICcuJykge1xuICAgICAgcGF0aC5zcGxpY2UoaSwgMSk7XG4gICAgfSBlbHNlIGlmIChwYXRoW2ldID09PSAnLi4nKSB7XG4gICAgICBwYXRoLnNwbGljZShpLCAxKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgaWYgKGkgPT09IDApIHVuc2hpZnQgPSB0cnVlO1xuICAgICAgcGF0aC5zcGxpY2UoaSwgMSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICh1bnNoaWZ0KSBwYXRoLnVuc2hpZnQoJycpO1xuICBpZiAobGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicpIHBhdGgucHVzaCgnJyk7XG5cbiAgcmV0dXJuIHBhdGguam9pbignLycpO1xufVxuXG4vKipcbiAqIFRoZSBhY3R1YWwgVVJMIGluc3RhbmNlLiBJbnN0ZWFkIG9mIHJldHVybmluZyBhbiBvYmplY3Qgd2UndmUgb3B0ZWQtaW4gdG9cbiAqIGNyZWF0ZSBhbiBhY3R1YWwgY29uc3RydWN0b3IgYXMgaXQncyBtdWNoIG1vcmUgbWVtb3J5IGVmZmljaWVudCBhbmRcbiAqIGZhc3RlciBhbmQgaXQgcGxlYXNlcyBteSBPQ0QuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzcyBVUkwgd2Ugd2FudCB0byBwYXJzZS5cbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gbG9jYXRpb24gTG9jYXRpb24gZGVmYXVsdHMgZm9yIHJlbGF0aXZlIHBhdGhzLlxuICogQHBhcmFtIHtCb29sZWFufEZ1bmN0aW9ufSBwYXJzZXIgUGFyc2VyIGZvciB0aGUgcXVlcnkgc3RyaW5nLlxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gVVJMKGFkZHJlc3MsIGxvY2F0aW9uLCBwYXJzZXIpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFVSTCkpIHtcbiAgICByZXR1cm4gbmV3IFVSTChhZGRyZXNzLCBsb2NhdGlvbiwgcGFyc2VyKTtcbiAgfVxuXG4gIHZhciByZWxhdGl2ZSwgZXh0cmFjdGVkLCBwYXJzZSwgaW5zdHJ1Y3Rpb24sIGluZGV4LCBrZXlcbiAgICAsIGluc3RydWN0aW9ucyA9IHJ1bGVzLnNsaWNlKClcbiAgICAsIHR5cGUgPSB0eXBlb2YgbG9jYXRpb25cbiAgICAsIHVybCA9IHRoaXNcbiAgICAsIGkgPSAwO1xuXG4gIC8vXG4gIC8vIFRoZSBmb2xsb3dpbmcgaWYgc3RhdGVtZW50cyBhbGxvd3MgdGhpcyBtb2R1bGUgdHdvIGhhdmUgY29tcGF0aWJpbGl0eSB3aXRoXG4gIC8vIDIgZGlmZmVyZW50IEFQSTpcbiAgLy9cbiAgLy8gMS4gTm9kZS5qcydzIGB1cmwucGFyc2VgIGFwaSB3aGljaCBhY2NlcHRzIGEgVVJMLCBib29sZWFuIGFzIGFyZ3VtZW50c1xuICAvLyAgICB3aGVyZSB0aGUgYm9vbGVhbiBpbmRpY2F0ZXMgdGhhdCB0aGUgcXVlcnkgc3RyaW5nIHNob3VsZCBhbHNvIGJlIHBhcnNlZC5cbiAgLy9cbiAgLy8gMi4gVGhlIGBVUkxgIGludGVyZmFjZSBvZiB0aGUgYnJvd3NlciB3aGljaCBhY2NlcHRzIGEgVVJMLCBvYmplY3QgYXNcbiAgLy8gICAgYXJndW1lbnRzLiBUaGUgc3VwcGxpZWQgb2JqZWN0IHdpbGwgYmUgdXNlZCBhcyBkZWZhdWx0IHZhbHVlcyAvIGZhbGwtYmFja1xuICAvLyAgICBmb3IgcmVsYXRpdmUgcGF0aHMuXG4gIC8vXG4gIGlmICgnb2JqZWN0JyAhPT0gdHlwZSAmJiAnc3RyaW5nJyAhPT0gdHlwZSkge1xuICAgIHBhcnNlciA9IGxvY2F0aW9uO1xuICAgIGxvY2F0aW9uID0gbnVsbDtcbiAgfVxuXG4gIGlmIChwYXJzZXIgJiYgJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIHBhcnNlcikgcGFyc2VyID0gcXMucGFyc2U7XG5cbiAgbG9jYXRpb24gPSBsb2xjYXRpb24obG9jYXRpb24pO1xuXG4gIC8vXG4gIC8vIEV4dHJhY3QgcHJvdG9jb2wgaW5mb3JtYXRpb24gYmVmb3JlIHJ1bm5pbmcgdGhlIGluc3RydWN0aW9ucy5cbiAgLy9cbiAgZXh0cmFjdGVkID0gZXh0cmFjdFByb3RvY29sKGFkZHJlc3MgfHwgJycpO1xuICByZWxhdGl2ZSA9ICFleHRyYWN0ZWQucHJvdG9jb2wgJiYgIWV4dHJhY3RlZC5zbGFzaGVzO1xuICB1cmwuc2xhc2hlcyA9IGV4dHJhY3RlZC5zbGFzaGVzIHx8IHJlbGF0aXZlICYmIGxvY2F0aW9uLnNsYXNoZXM7XG4gIHVybC5wcm90b2NvbCA9IGV4dHJhY3RlZC5wcm90b2NvbCB8fCBsb2NhdGlvbi5wcm90b2NvbCB8fCAnJztcbiAgYWRkcmVzcyA9IGV4dHJhY3RlZC5yZXN0O1xuXG4gIC8vXG4gIC8vIFdoZW4gdGhlIGF1dGhvcml0eSBjb21wb25lbnQgaXMgYWJzZW50IHRoZSBVUkwgc3RhcnRzIHdpdGggYSBwYXRoXG4gIC8vIGNvbXBvbmVudC5cbiAgLy9cbiAgaWYgKCFleHRyYWN0ZWQuc2xhc2hlcykgaW5zdHJ1Y3Rpb25zWzJdID0gWy8oLiopLywgJ3BhdGhuYW1lJ107XG5cbiAgZm9yICg7IGkgPCBpbnN0cnVjdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpbnN0cnVjdGlvbiA9IGluc3RydWN0aW9uc1tpXTtcbiAgICBwYXJzZSA9IGluc3RydWN0aW9uWzBdO1xuICAgIGtleSA9IGluc3RydWN0aW9uWzFdO1xuXG4gICAgaWYgKHBhcnNlICE9PSBwYXJzZSkge1xuICAgICAgdXJsW2tleV0gPSBhZGRyZXNzO1xuICAgIH0gZWxzZSBpZiAoJ3N0cmluZycgPT09IHR5cGVvZiBwYXJzZSkge1xuICAgICAgaWYgKH4oaW5kZXggPSBhZGRyZXNzLmluZGV4T2YocGFyc2UpKSkge1xuICAgICAgICBpZiAoJ251bWJlcicgPT09IHR5cGVvZiBpbnN0cnVjdGlvblsyXSkge1xuICAgICAgICAgIHVybFtrZXldID0gYWRkcmVzcy5zbGljZSgwLCBpbmRleCk7XG4gICAgICAgICAgYWRkcmVzcyA9IGFkZHJlc3Muc2xpY2UoaW5kZXggKyBpbnN0cnVjdGlvblsyXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdXJsW2tleV0gPSBhZGRyZXNzLnNsaWNlKGluZGV4KTtcbiAgICAgICAgICBhZGRyZXNzID0gYWRkcmVzcy5zbGljZSgwLCBpbmRleCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKChpbmRleCA9IHBhcnNlLmV4ZWMoYWRkcmVzcykpKSB7XG4gICAgICB1cmxba2V5XSA9IGluZGV4WzFdO1xuICAgICAgYWRkcmVzcyA9IGFkZHJlc3Muc2xpY2UoMCwgaW5kZXguaW5kZXgpO1xuICAgIH1cblxuICAgIHVybFtrZXldID0gdXJsW2tleV0gfHwgKFxuICAgICAgcmVsYXRpdmUgJiYgaW5zdHJ1Y3Rpb25bM10gPyBsb2NhdGlvbltrZXldIHx8ICcnIDogJydcbiAgICApO1xuXG4gICAgLy9cbiAgICAvLyBIb3N0bmFtZSwgaG9zdCBhbmQgcHJvdG9jb2wgc2hvdWxkIGJlIGxvd2VyY2FzZWQgc28gdGhleSBjYW4gYmUgdXNlZCB0b1xuICAgIC8vIGNyZWF0ZSBhIHByb3BlciBgb3JpZ2luYC5cbiAgICAvL1xuICAgIGlmIChpbnN0cnVjdGlvbls0XSkgdXJsW2tleV0gPSB1cmxba2V5XS50b0xvd2VyQ2FzZSgpO1xuICB9XG5cbiAgLy9cbiAgLy8gQWxzbyBwYXJzZSB0aGUgc3VwcGxpZWQgcXVlcnkgc3RyaW5nIGluIHRvIGFuIG9iamVjdC4gSWYgd2UncmUgc3VwcGxpZWRcbiAgLy8gd2l0aCBhIGN1c3RvbSBwYXJzZXIgYXMgZnVuY3Rpb24gdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgZGVmYXVsdCBidWlsZC1pblxuICAvLyBwYXJzZXIuXG4gIC8vXG4gIGlmIChwYXJzZXIpIHVybC5xdWVyeSA9IHBhcnNlcih1cmwucXVlcnkpO1xuXG4gIC8vXG4gIC8vIElmIHRoZSBVUkwgaXMgcmVsYXRpdmUsIHJlc29sdmUgdGhlIHBhdGhuYW1lIGFnYWluc3QgdGhlIGJhc2UgVVJMLlxuICAvL1xuICBpZiAoXG4gICAgICByZWxhdGl2ZVxuICAgICYmIGxvY2F0aW9uLnNsYXNoZXNcbiAgICAmJiB1cmwucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLydcbiAgICAmJiAodXJsLnBhdGhuYW1lICE9PSAnJyB8fCBsb2NhdGlvbi5wYXRobmFtZSAhPT0gJycpXG4gICkge1xuICAgIHVybC5wYXRobmFtZSA9IHJlc29sdmUodXJsLnBhdGhuYW1lLCBsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH1cblxuICAvL1xuICAvLyBXZSBzaG91bGQgbm90IGFkZCBwb3J0IG51bWJlcnMgaWYgdGhleSBhcmUgYWxyZWFkeSB0aGUgZGVmYXVsdCBwb3J0IG51bWJlclxuICAvLyBmb3IgYSBnaXZlbiBwcm90b2NvbC4gQXMgdGhlIGhvc3QgYWxzbyBjb250YWlucyB0aGUgcG9ydCBudW1iZXIgd2UncmUgZ29pbmdcbiAgLy8gb3ZlcnJpZGUgaXQgd2l0aCB0aGUgaG9zdG5hbWUgd2hpY2ggY29udGFpbnMgbm8gcG9ydCBudW1iZXIuXG4gIC8vXG4gIGlmICghcmVxdWlyZWQodXJsLnBvcnQsIHVybC5wcm90b2NvbCkpIHtcbiAgICB1cmwuaG9zdCA9IHVybC5ob3N0bmFtZTtcbiAgICB1cmwucG9ydCA9ICcnO1xuICB9XG5cbiAgLy9cbiAgLy8gUGFyc2UgZG93biB0aGUgYGF1dGhgIGZvciB0aGUgdXNlcm5hbWUgYW5kIHBhc3N3b3JkLlxuICAvL1xuICB1cmwudXNlcm5hbWUgPSB1cmwucGFzc3dvcmQgPSAnJztcbiAgaWYgKHVybC5hdXRoKSB7XG4gICAgaW5zdHJ1Y3Rpb24gPSB1cmwuYXV0aC5zcGxpdCgnOicpO1xuICAgIHVybC51c2VybmFtZSA9IGluc3RydWN0aW9uWzBdIHx8ICcnO1xuICAgIHVybC5wYXNzd29yZCA9IGluc3RydWN0aW9uWzFdIHx8ICcnO1xuICB9XG5cbiAgdXJsLm9yaWdpbiA9IHVybC5wcm90b2NvbCAmJiB1cmwuaG9zdCAmJiB1cmwucHJvdG9jb2wgIT09ICdmaWxlOidcbiAgICA/IHVybC5wcm90b2NvbCArJy8vJysgdXJsLmhvc3RcbiAgICA6ICdudWxsJztcblxuICAvL1xuICAvLyBUaGUgaHJlZiBpcyBqdXN0IHRoZSBjb21waWxlZCByZXN1bHQuXG4gIC8vXG4gIHVybC5ocmVmID0gdXJsLnRvU3RyaW5nKCk7XG59XG5cbi8qKlxuICogVGhpcyBpcyBjb252ZW5pZW5jZSBtZXRob2QgZm9yIGNoYW5naW5nIHByb3BlcnRpZXMgaW4gdGhlIFVSTCBpbnN0YW5jZSB0b1xuICogaW5zdXJlIHRoYXQgdGhleSBhbGwgcHJvcGFnYXRlIGNvcnJlY3RseS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFydCAgICAgICAgICBQcm9wZXJ0eSB3ZSBuZWVkIHRvIGFkanVzdC5cbiAqIEBwYXJhbSB7TWl4ZWR9IHZhbHVlICAgICAgICAgIFRoZSBuZXdseSBhc3NpZ25lZCB2YWx1ZS5cbiAqIEBwYXJhbSB7Qm9vbGVhbnxGdW5jdGlvbn0gZm4gIFdoZW4gc2V0dGluZyB0aGUgcXVlcnksIGl0IHdpbGwgYmUgdGhlIGZ1bmN0aW9uXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VkIHRvIHBhcnNlIHRoZSBxdWVyeS5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdoZW4gc2V0dGluZyB0aGUgcHJvdG9jb2wsIGRvdWJsZSBzbGFzaCB3aWxsIGJlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVkIGZyb20gdGhlIGZpbmFsIHVybCBpZiBpdCBpcyB0cnVlLlxuICogQHJldHVybnMge1VSTH1cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIHNldChwYXJ0LCB2YWx1ZSwgZm4pIHtcbiAgdmFyIHVybCA9IHRoaXM7XG5cbiAgc3dpdGNoIChwYXJ0KSB7XG4gICAgY2FzZSAncXVlcnknOlxuICAgICAgaWYgKCdzdHJpbmcnID09PSB0eXBlb2YgdmFsdWUgJiYgdmFsdWUubGVuZ3RoKSB7XG4gICAgICAgIHZhbHVlID0gKGZuIHx8IHFzLnBhcnNlKSh2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIHVybFtwYXJ0XSA9IHZhbHVlO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdwb3J0JzpcbiAgICAgIHVybFtwYXJ0XSA9IHZhbHVlO1xuXG4gICAgICBpZiAoIXJlcXVpcmVkKHZhbHVlLCB1cmwucHJvdG9jb2wpKSB7XG4gICAgICAgIHVybC5ob3N0ID0gdXJsLmhvc3RuYW1lO1xuICAgICAgICB1cmxbcGFydF0gPSAnJztcbiAgICAgIH0gZWxzZSBpZiAodmFsdWUpIHtcbiAgICAgICAgdXJsLmhvc3QgPSB1cmwuaG9zdG5hbWUgKyc6JysgdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnaG9zdG5hbWUnOlxuICAgICAgdXJsW3BhcnRdID0gdmFsdWU7XG5cbiAgICAgIGlmICh1cmwucG9ydCkgdmFsdWUgKz0gJzonKyB1cmwucG9ydDtcbiAgICAgIHVybC5ob3N0ID0gdmFsdWU7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2hvc3QnOlxuICAgICAgdXJsW3BhcnRdID0gdmFsdWU7XG5cbiAgICAgIGlmICgvOlxcZCskLy50ZXN0KHZhbHVlKSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLnNwbGl0KCc6Jyk7XG4gICAgICAgIHVybC5wb3J0ID0gdmFsdWUucG9wKCk7XG4gICAgICAgIHVybC5ob3N0bmFtZSA9IHZhbHVlLmpvaW4oJzonKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVybC5ob3N0bmFtZSA9IHZhbHVlO1xuICAgICAgICB1cmwucG9ydCA9ICcnO1xuICAgICAgfVxuXG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3Byb3RvY29sJzpcbiAgICAgIHVybC5wcm90b2NvbCA9IHZhbHVlLnRvTG93ZXJDYXNlKCk7XG4gICAgICB1cmwuc2xhc2hlcyA9ICFmbjtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAncGF0aG5hbWUnOlxuICAgICAgdXJsLnBhdGhuYW1lID0gdmFsdWUubGVuZ3RoICYmIHZhbHVlLmNoYXJBdCgwKSAhPT0gJy8nID8gJy8nICsgdmFsdWUgOiB2YWx1ZTtcblxuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdXJsW3BhcnRdID0gdmFsdWU7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGlucyA9IHJ1bGVzW2ldO1xuXG4gICAgaWYgKGluc1s0XSkgdXJsW2luc1sxXV0gPSB1cmxbaW5zWzFdXS50b0xvd2VyQ2FzZSgpO1xuICB9XG5cbiAgdXJsLm9yaWdpbiA9IHVybC5wcm90b2NvbCAmJiB1cmwuaG9zdCAmJiB1cmwucHJvdG9jb2wgIT09ICdmaWxlOidcbiAgICA/IHVybC5wcm90b2NvbCArJy8vJysgdXJsLmhvc3RcbiAgICA6ICdudWxsJztcblxuICB1cmwuaHJlZiA9IHVybC50b1N0cmluZygpO1xuXG4gIHJldHVybiB1cmw7XG59O1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgcHJvcGVydGllcyBiYWNrIGluIHRvIGEgdmFsaWQgYW5kIGZ1bGwgVVJMIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzdHJpbmdpZnkgT3B0aW9uYWwgcXVlcnkgc3RyaW5naWZ5IGZ1bmN0aW9uLlxuICogQHJldHVybnMge1N0cmluZ31cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIHRvU3RyaW5nKHN0cmluZ2lmeSkge1xuICBpZiAoIXN0cmluZ2lmeSB8fCAnZnVuY3Rpb24nICE9PSB0eXBlb2Ygc3RyaW5naWZ5KSBzdHJpbmdpZnkgPSBxcy5zdHJpbmdpZnk7XG5cbiAgdmFyIHF1ZXJ5XG4gICAgLCB1cmwgPSB0aGlzXG4gICAgLCBwcm90b2NvbCA9IHVybC5wcm90b2NvbDtcblxuICBpZiAocHJvdG9jb2wgJiYgcHJvdG9jb2wuY2hhckF0KHByb3RvY29sLmxlbmd0aCAtIDEpICE9PSAnOicpIHByb3RvY29sICs9ICc6JztcblxuICB2YXIgcmVzdWx0ID0gcHJvdG9jb2wgKyAodXJsLnNsYXNoZXMgPyAnLy8nIDogJycpO1xuXG4gIGlmICh1cmwudXNlcm5hbWUpIHtcbiAgICByZXN1bHQgKz0gdXJsLnVzZXJuYW1lO1xuICAgIGlmICh1cmwucGFzc3dvcmQpIHJlc3VsdCArPSAnOicrIHVybC5wYXNzd29yZDtcbiAgICByZXN1bHQgKz0gJ0AnO1xuICB9XG5cbiAgcmVzdWx0ICs9IHVybC5ob3N0ICsgdXJsLnBhdGhuYW1lO1xuXG4gIHF1ZXJ5ID0gJ29iamVjdCcgPT09IHR5cGVvZiB1cmwucXVlcnkgPyBzdHJpbmdpZnkodXJsLnF1ZXJ5KSA6IHVybC5xdWVyeTtcbiAgaWYgKHF1ZXJ5KSByZXN1bHQgKz0gJz8nICE9PSBxdWVyeS5jaGFyQXQoMCkgPyAnPycrIHF1ZXJ5IDogcXVlcnk7XG5cbiAgaWYgKHVybC5oYXNoKSByZXN1bHQgKz0gdXJsLmhhc2g7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuVVJMLnByb3RvdHlwZSA9IHsgc2V0OiBzZXQsIHRvU3RyaW5nOiB0b1N0cmluZyB9O1xuXG4vL1xuLy8gRXhwb3NlIHRoZSBVUkwgcGFyc2VyIGFuZCBzb21lIGFkZGl0aW9uYWwgcHJvcGVydGllcyB0aGF0IG1pZ2h0IGJlIHVzZWZ1bCBmb3Jcbi8vIG90aGVycyBvciB0ZXN0aW5nLlxuLy9cblVSTC5leHRyYWN0UHJvdG9jb2wgPSBleHRyYWN0UHJvdG9jb2w7XG5VUkwubG9jYXRpb24gPSBsb2xjYXRpb247XG5VUkwucXMgPSBxcztcblxubW9kdWxlLmV4cG9ydHMgPSBVUkw7XG5cbn0se1wiLi9sb2xjYXRpb25cIjo2MixcInF1ZXJ5c3RyaW5naWZ5XCI6NTksXCJyZXF1aXJlcy1wb3J0XCI6NjB9XSw2MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBzbGFzaGVzID0gL15bQS1aYS16XVtBLVphLXowLTkrLS5dKjpcXC9cXC8vO1xuXG4vKipcbiAqIFRoZXNlIHByb3BlcnRpZXMgc2hvdWxkIG5vdCBiZSBjb3BpZWQgb3IgaW5oZXJpdGVkIGZyb20uIFRoaXMgaXMgb25seSBuZWVkZWRcbiAqIGZvciBhbGwgbm9uIGJsb2IgVVJMJ3MgYXMgYSBibG9iIFVSTCBkb2VzIG5vdCBpbmNsdWRlIGEgaGFzaCwgb25seSB0aGVcbiAqIG9yaWdpbi5cbiAqXG4gKiBAdHlwZSB7T2JqZWN0fVxuICogQHByaXZhdGVcbiAqL1xudmFyIGlnbm9yZSA9IHsgaGFzaDogMSwgcXVlcnk6IDEgfVxuICAsIFVSTDtcblxuLyoqXG4gKiBUaGUgbG9jYXRpb24gb2JqZWN0IGRpZmZlcnMgd2hlbiB5b3VyIGNvZGUgaXMgbG9hZGVkIHRocm91Z2ggYSBub3JtYWwgcGFnZSxcbiAqIFdvcmtlciBvciB0aHJvdWdoIGEgd29ya2VyIHVzaW5nIGEgYmxvYi4gQW5kIHdpdGggdGhlIGJsb2JibGUgYmVnaW5zIHRoZVxuICogdHJvdWJsZSBhcyB0aGUgbG9jYXRpb24gb2JqZWN0IHdpbGwgY29udGFpbiB0aGUgVVJMIG9mIHRoZSBibG9iLCBub3QgdGhlXG4gKiBsb2NhdGlvbiBvZiB0aGUgcGFnZSB3aGVyZSBvdXIgY29kZSBpcyBsb2FkZWQgaW4uIFRoZSBhY3R1YWwgb3JpZ2luIGlzXG4gKiBlbmNvZGVkIGluIHRoZSBgcGF0aG5hbWVgIHNvIHdlIGNhbiB0aGFua2Z1bGx5IGdlbmVyYXRlIGEgZ29vZCBcImRlZmF1bHRcIlxuICogbG9jYXRpb24gZnJvbSBpdCBzbyB3ZSBjYW4gZ2VuZXJhdGUgcHJvcGVyIHJlbGF0aXZlIFVSTCdzIGFnYWluLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gbG9jIE9wdGlvbmFsIGRlZmF1bHQgbG9jYXRpb24gb2JqZWN0LlxuICogQHJldHVybnMge09iamVjdH0gbG9sY2F0aW9uIG9iamVjdC5cbiAqIEBhcGkgcHVibGljXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbG9sY2F0aW9uKGxvYykge1xuICBsb2MgPSBsb2MgfHwgZ2xvYmFsLmxvY2F0aW9uIHx8IHt9O1xuICBVUkwgPSBVUkwgfHwgcmVxdWlyZSgnLi8nKTtcblxuICB2YXIgZmluYWxkZXN0aW5hdGlvbiA9IHt9XG4gICAgLCB0eXBlID0gdHlwZW9mIGxvY1xuICAgICwga2V5O1xuXG4gIGlmICgnYmxvYjonID09PSBsb2MucHJvdG9jb2wpIHtcbiAgICBmaW5hbGRlc3RpbmF0aW9uID0gbmV3IFVSTCh1bmVzY2FwZShsb2MucGF0aG5hbWUpLCB7fSk7XG4gIH0gZWxzZSBpZiAoJ3N0cmluZycgPT09IHR5cGUpIHtcbiAgICBmaW5hbGRlc3RpbmF0aW9uID0gbmV3IFVSTChsb2MsIHt9KTtcbiAgICBmb3IgKGtleSBpbiBpZ25vcmUpIGRlbGV0ZSBmaW5hbGRlc3RpbmF0aW9uW2tleV07XG4gIH0gZWxzZSBpZiAoJ29iamVjdCcgPT09IHR5cGUpIHtcbiAgICBmb3IgKGtleSBpbiBsb2MpIHtcbiAgICAgIGlmIChrZXkgaW4gaWdub3JlKSBjb250aW51ZTtcbiAgICAgIGZpbmFsZGVzdGluYXRpb25ba2V5XSA9IGxvY1trZXldO1xuICAgIH1cblxuICAgIGlmIChmaW5hbGRlc3RpbmF0aW9uLnNsYXNoZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZmluYWxkZXN0aW5hdGlvbi5zbGFzaGVzID0gc2xhc2hlcy50ZXN0KGxvYy5ocmVmKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmluYWxkZXN0aW5hdGlvbjtcbn07XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vXCI6NjF9XX0se30sWzFdKSgxKVxufSk7XG5cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c29ja2pzLmpzLm1hcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///31\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar SockJS = __webpack_require__(/*! sockjs-client/dist/sockjs */ 31);\\n\\nvar retries = 0;\\nvar sock = null;\\n\\nvar socket = function initSocket(url, handlers) {\\n  sock = new SockJS(url);\\n\\n  sock.onopen = function onopen() {\\n    retries = 0;\\n  };\\n\\n  sock.onclose = function onclose() {\\n    if (retries === 0) {\\n      handlers.close();\\n    }\\n\\n    // Try to reconnect.\\n    sock = null;\\n\\n    // After 10 retries stop trying, to prevent logspam.\\n    if (retries <= 10) {\\n      // Exponentially increase timeout to reconnect.\\n      // Respectfully copied from the package `got`.\\n      // eslint-disable-next-line no-mixed-operators, no-restricted-properties\\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\\n      retries += 1;\\n\\n      setTimeout(function () {\\n        socket(url, handlers);\\n      }, retryInMs);\\n    }\\n  };\\n\\n  sock.onmessage = function onmessage(e) {\\n    // This assumes that all data sent via the websocket is JSON.\\n    var msg = JSON.parse(e.data);\\n    if (handlers[msg.type]) {\\n      handlers[msg.type](msg.data);\\n    }\\n  };\\n};\\n\\nmodule.exports = socket;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50L3NvY2tldC5qcz9lMjljIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUksU0FBUyxvQkFBUTs7QUFFckIsSUFBSSxVQUFVO0FBQ2QsSUFBSSxPQUFPOztBQUVYLElBQUksU0FBUyxTQUFTLFdBQVcsS0FBSyxVQUNwQztTQUFPLElBQUksT0FFWDs7T0FBSyxTQUFTLFNBQVMsU0FDckI7Y0FDRDtBQUVEOztPQUFLLFVBQVUsU0FBUyxVQUN0QjtRQUFJLFlBQVksR0FDZDtlQUNEO0FBRUQ7O0FBQ0E7V0FFQTs7QUFDQTtRQUFJLFdBQVcsSUFDYjtBQUNBO0FBQ0E7QUFDQTtVQUFJLFlBQVksT0FBTyxLQUFLLElBQUksR0FBRyxXQUFXLEtBQUssV0FDbkQ7aUJBRUE7O2lCQUFXLFlBQ1Q7ZUFBTyxLQUNSO0FBRkQsU0FHRDtBQUNGO0FBRUQ7O09BQUssWUFBWSxTQUFTLFVBQVUsR0FDbEM7QUFDQTtRQUFJLE1BQU0sS0FBSyxNQUFNLEVBQ3JCO1FBQUksU0FBUyxJQUFJLE9BQ2Y7ZUFBUyxJQUFJLE1BQU0sSUFDcEI7QUFDRjtBQUNGO0FBcENEOztBQXNDQSxPQUFPLFVBQVUiLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBTb2NrSlMgPSByZXF1aXJlKCdzb2NranMtY2xpZW50L2Rpc3Qvc29ja2pzJyk7XG5cbnZhciByZXRyaWVzID0gMDtcbnZhciBzb2NrID0gbnVsbDtcblxudmFyIHNvY2tldCA9IGZ1bmN0aW9uIGluaXRTb2NrZXQodXJsLCBoYW5kbGVycykge1xuICBzb2NrID0gbmV3IFNvY2tKUyh1cmwpO1xuXG4gIHNvY2sub25vcGVuID0gZnVuY3Rpb24gb25vcGVuKCkge1xuICAgIHJldHJpZXMgPSAwO1xuICB9O1xuXG4gIHNvY2sub25jbG9zZSA9IGZ1bmN0aW9uIG9uY2xvc2UoKSB7XG4gICAgaWYgKHJldHJpZXMgPT09IDApIHtcbiAgICAgIGhhbmRsZXJzLmNsb3NlKCk7XG4gICAgfVxuXG4gICAgLy8gVHJ5IHRvIHJlY29ubmVjdC5cbiAgICBzb2NrID0gbnVsbDtcblxuICAgIC8vIEFmdGVyIDEwIHJldHJpZXMgc3RvcCB0cnlpbmcsIHRvIHByZXZlbnQgbG9nc3BhbS5cbiAgICBpZiAocmV0cmllcyA8PSAxMCkge1xuICAgICAgLy8gRXhwb25lbnRpYWxseSBpbmNyZWFzZSB0aW1lb3V0IHRvIHJlY29ubmVjdC5cbiAgICAgIC8vIFJlc3BlY3RmdWxseSBjb3BpZWQgZnJvbSB0aGUgcGFja2FnZSBgZ290YC5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1taXhlZC1vcGVyYXRvcnMsIG5vLXJlc3RyaWN0ZWQtcHJvcGVydGllc1xuICAgICAgdmFyIHJldHJ5SW5NcyA9IDEwMDAgKiBNYXRoLnBvdygyLCByZXRyaWVzKSArIE1hdGgucmFuZG9tKCkgKiAxMDA7XG4gICAgICByZXRyaWVzICs9IDE7XG5cbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBzb2NrZXQodXJsLCBoYW5kbGVycyk7XG4gICAgICB9LCByZXRyeUluTXMpO1xuICAgIH1cbiAgfTtcblxuICBzb2NrLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIG9ubWVzc2FnZShlKSB7XG4gICAgLy8gVGhpcyBhc3N1bWVzIHRoYXQgYWxsIGRhdGEgc2VudCB2aWEgdGhlIHdlYnNvY2tldCBpcyBKU09OLlxuICAgIHZhciBtc2cgPSBKU09OLnBhcnNlKGUuZGF0YSk7XG4gICAgaWYgKGhhbmRsZXJzW21zZy50eXBlXSkge1xuICAgICAgaGFuZGxlcnNbbXNnLnR5cGVdKG1zZy5kYXRhKTtcbiAgICB9XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNvY2tldDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///32\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\\n\\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\\n    return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n} : function (obj) {\\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n};\\n\\n/*\\n* loglevel - https://github.com/pimterry/loglevel\\n*\\n* Copyright (c) 2013 Tim Perry\\n* Licensed under the MIT license.\\n*/\\n(function (root, definition) {\\n    \"use strict\";\\n\\n    if (true) {\\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \\'function\\' ?\\n\\t\\t\\t\\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_FACTORY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n    } else {}\\n})(undefined, function () {\\n    \"use strict\";\\n\\n    // Slightly dubious tricks to cut down minimized file size\\n\\n    var noop = function noop() {};\\n    var undefinedType = \"undefined\";\\n\\n    var logMethods = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"];\\n\\n    // Cross-browser bind equivalent that works at least back to IE6\\n    function bindMethod(obj, methodName) {\\n        var method = obj[methodName];\\n        if (typeof method.bind === \\'function\\') {\\n            return method.bind(obj);\\n        } else {\\n            try {\\n                return Function.prototype.bind.call(method, obj);\\n            } catch (e) {\\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\\n                return function () {\\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\\n                };\\n            }\\n        }\\n    }\\n\\n    // Build the best logging method possible for this env\\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\\n    function realMethod(methodName) {\\n        if (methodName === \\'debug\\') {\\n            methodName = \\'log\\';\\n        }\\n\\n        if ((typeof console === \\'undefined\\' ? \\'undefined\\' : _typeof(console)) === undefinedType) {\\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\\n        } else if (console[methodName] !== undefined) {\\n            return bindMethod(console, methodName);\\n        } else if (console.log !== undefined) {\\n            return bindMethod(console, \\'log\\');\\n        } else {\\n            return noop;\\n        }\\n    }\\n\\n    // These private functions always need `this` to be set properly\\n\\n    function replaceLoggingMethods(level, loggerName) {\\n        /*jshint validthis:true */\\n        for (var i = 0; i < logMethods.length; i++) {\\n            var methodName = logMethods[i];\\n            this[methodName] = i < level ? noop : this.methodFactory(methodName, level, loggerName);\\n        }\\n\\n        // Define log.log as an alias for log.debug\\n        this.log = this.debug;\\n    }\\n\\n    // In old IE versions, the console isn\\'t present until you first open it.\\n    // We build realMethod() replacements here that regenerate logging methods\\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\\n        return function () {\\n            if ((typeof console === \\'undefined\\' ? \\'undefined\\' : _typeof(console)) !== undefinedType) {\\n                replaceLoggingMethods.call(this, level, loggerName);\\n                this[methodName].apply(this, arguments);\\n            }\\n        };\\n    }\\n\\n    // By default, we use closely bound real methods wherever possible, and\\n    // otherwise we wait for a console to appear, and then try again.\\n    function defaultMethodFactory(methodName, level, loggerName) {\\n        /*jshint validthis:true */\\n        return realMethod(methodName) || enableLoggingWhenConsoleArrives.apply(this, arguments);\\n    }\\n\\n    function Logger(name, defaultLevel, factory) {\\n        var self = this;\\n        var currentLevel;\\n        var storageKey = \"loglevel\";\\n        if (name) {\\n            storageKey += \":\" + name;\\n        }\\n\\n        function persistLevelIfPossible(levelNum) {\\n            var levelName = (logMethods[levelNum] || \\'silent\\').toUpperCase();\\n\\n            if ((typeof window === \\'undefined\\' ? \\'undefined\\' : _typeof(window)) === undefinedType) return;\\n\\n            // Use localStorage if available\\n            try {\\n                window.localStorage[storageKey] = levelName;\\n                return;\\n            } catch (ignore) {}\\n\\n            // Use session cookie as fallback\\n            try {\\n                window.document.cookie = encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\\n            } catch (ignore) {}\\n        }\\n\\n        function getPersistedLevel() {\\n            var storedLevel;\\n\\n            if ((typeof window === \\'undefined\\' ? \\'undefined\\' : _typeof(window)) === undefinedType) return;\\n\\n            try {\\n                storedLevel = window.localStorage[storageKey];\\n            } catch (ignore) {}\\n\\n            // Fallback to cookies if local storage gives us nothing\\n            if ((typeof storedLevel === \\'undefined\\' ? \\'undefined\\' : _typeof(storedLevel)) === undefinedType) {\\n                try {\\n                    var cookie = window.document.cookie;\\n                    var location = cookie.indexOf(encodeURIComponent(storageKey) + \"=\");\\n                    if (location !== -1) {\\n                        storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\\n                    }\\n                } catch (ignore) {}\\n            }\\n\\n            // If the stored level is not valid, treat it as if nothing was stored.\\n            if (self.levels[storedLevel] === undefined) {\\n                storedLevel = undefined;\\n            }\\n\\n            return storedLevel;\\n        }\\n\\n        /*\\n         *\\n         * Public logger API - see https://github.com/pimterry/loglevel for details\\n         *\\n         */\\n\\n        self.name = name;\\n\\n        self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\\n            \"ERROR\": 4, \"SILENT\": 5 };\\n\\n        self.methodFactory = factory || defaultMethodFactory;\\n\\n        self.getLevel = function () {\\n            return currentLevel;\\n        };\\n\\n        self.setLevel = function (level, persist) {\\n            if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\\n                level = self.levels[level.toUpperCase()];\\n            }\\n            if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\\n                currentLevel = level;\\n                if (persist !== false) {\\n                    // defaults to true\\n                    persistLevelIfPossible(level);\\n                }\\n                replaceLoggingMethods.call(self, level, name);\\n                if ((typeof console === \\'undefined\\' ? \\'undefined\\' : _typeof(console)) === undefinedType && level < self.levels.SILENT) {\\n                    return \"No console available for logging\";\\n                }\\n            } else {\\n                throw \"log.setLevel() called with invalid level: \" + level;\\n            }\\n        };\\n\\n        self.setDefaultLevel = function (level) {\\n            if (!getPersistedLevel()) {\\n                self.setLevel(level, false);\\n            }\\n        };\\n\\n        self.enableAll = function (persist) {\\n            self.setLevel(self.levels.TRACE, persist);\\n        };\\n\\n        self.disableAll = function (persist) {\\n            self.setLevel(self.levels.SILENT, persist);\\n        };\\n\\n        // Initialize with the right level\\n        var initialLevel = getPersistedLevel();\\n        if (initialLevel == null) {\\n            initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\\n        }\\n        self.setLevel(initialLevel, false);\\n    }\\n\\n    /*\\n     *\\n     * Top-level API\\n     *\\n     */\\n\\n    var defaultLogger = new Logger();\\n\\n    var _loggersByName = {};\\n    defaultLogger.getLogger = function getLogger(name) {\\n        if (typeof name !== \"string\" || name === \"\") {\\n            throw new TypeError(\"You must supply a name when creating a logger.\");\\n        }\\n\\n        var logger = _loggersByName[name];\\n        if (!logger) {\\n            logger = _loggersByName[name] = new Logger(name, defaultLogger.getLevel(), defaultLogger.methodFactory);\\n        }\\n        return logger;\\n    };\\n\\n    // Grab the current global log variable in case of overwrite\\n    var _log = (typeof window === \\'undefined\\' ? \\'undefined\\' : _typeof(window)) !== undefinedType ? window.log : undefined;\\n    defaultLogger.noConflict = function () {\\n        if ((typeof window === \\'undefined\\' ? \\'undefined\\' : _typeof(window)) !== undefinedType && window.log === defaultLogger) {\\n            window.log = _log;\\n        }\\n\\n        return defaultLogger;\\n    };\\n\\n    defaultLogger.getLoggers = function getLoggers() {\\n        return _loggersByName;\\n    };\\n\\n    return defaultLogger;\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///33\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nmodule.exports = function () {\\n\\treturn (/[\\\\u001b\\\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g\\n\\t);\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW5zaS1yZWdleC9pbmRleC5qcz85ZWVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE9BQU8sVUFBVSxZQUNoQjtBQUFPLFFBQ1A7O0FBRkQiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIC9bXFx1MDAxYlxcdTAwOWJdW1soKSM7P10qKD86WzAtOV17MSw0fSg/OjtbMC05XXswLDR9KSopP1swLTlBLVBSWmNmLW5xcnk9PjxdL2c7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///34\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar ansiRegex = __webpack_require__(/*! ansi-regex */ 34)();\\n\\nmodule.exports = function (str) {\\n\\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RyaXAtYW5zaS9pbmRleC5qcz83NjcxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLElBQUksWUFBWSxvQkFBUTs7QUFFeEIsT0FBTyxVQUFVLFVBQVUsS0FDMUI7UUFBTyxPQUFPLFFBQVEsV0FBVyxJQUFJLFFBQVEsV0FBVyxNQUN4RDtBQUZEIiwiZmlsZSI6IjM1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGFuc2lSZWdleCA9IHJlcXVpcmUoJ2Fuc2ktcmVnZXgnKSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIpIHtcblx0cmV0dXJuIHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gc3RyLnJlcGxhY2UoYW5zaVJlZ2V4LCAnJykgOiBzdHI7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///35\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n};\\n\\nvar stringifyPrimitive = function stringifyPrimitive(v) {\\n  switch (typeof v === 'undefined' ? 'undefined' : _typeof(v)) {\\n    case 'string':\\n      return v;\\n\\n    case 'boolean':\\n      return v ? 'true' : 'false';\\n\\n    case 'number':\\n      return isFinite(v) ? v : '';\\n\\n    default:\\n      return '';\\n  }\\n};\\n\\nmodule.exports = function (obj, sep, eq, name) {\\n  sep = sep || '&';\\n  eq = eq || '=';\\n  if (obj === null) {\\n    obj = undefined;\\n  }\\n\\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\\n    return map(objectKeys(obj), function (k) {\\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\\n      if (isArray(obj[k])) {\\n        return map(obj[k], function (v) {\\n          return ks + encodeURIComponent(stringifyPrimitive(v));\\n        }).join(sep);\\n      } else {\\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\\n      }\\n    }).join(sep);\\n  }\\n\\n  if (!name) return '';\\n  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));\\n};\\n\\nvar isArray = Array.isArray || function (xs) {\\n  return Object.prototype.toString.call(xs) === '[object Array]';\\n};\\n\\nfunction map(xs, f) {\\n  if (xs.map) return xs.map(f);\\n  var res = [];\\n  for (var i = 0; i < xs.length; i++) {\\n    res.push(f(xs[i], i));\\n  }\\n  return res;\\n}\\n\\nvar objectKeys = Object.keys || function (obj) {\\n  var res = [];\\n  for (var key in obj) {\\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\\n  }\\n  return res;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcz9lMDk5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7QUFFQSxJQUFJLHFCQUFxQiw0QkFBUyxHQUNoQztpQkFBZSwwQ0FDYjtTQUNFO2FBRUY7O1NBQ0U7YUFBTyxJQUFJLFNBRWI7O1NBQ0U7YUFBTyxTQUFTLEtBQUssSUFFdkI7O0FBQ0U7YUFFTDs7QUFkRDs7QUFnQkEsT0FBTyxVQUFVLFVBQVMsS0FBSyxLQUFLLElBQUksTUFDdEM7UUFBTSxPQUNOO09BQUssTUFDTDtNQUFJLFFBQVEsTUFDVjtVQUNEO0FBRUQ7O01BQUksUUFBTyxzREFBUSxVQUNqQjtlQUFXLFdBQVcsTUFBTSxVQUFTLEdBQ25DO1VBQUksS0FBSyxtQkFBbUIsbUJBQW1CLE1BQy9DO1VBQUksUUFBUSxJQUFJLEtBQ2Q7bUJBQVcsSUFBSSxJQUFJLFVBQVMsR0FDMUI7aUJBQU8sS0FBSyxtQkFBbUIsbUJBQ2hDO0FBRk0sV0FFSixLQUNKO0FBSkQsYUFLRTtlQUFPLEtBQUssbUJBQW1CLG1CQUFtQixJQUNuRDtBQUNGO0FBVE0sT0FTSixLQUVKO0FBRUQ7O01BQUksQ0FBQyxNQUFNLE9BQ1g7U0FBTyxtQkFBbUIsbUJBQW1CLFNBQVMsS0FDL0MsbUJBQW1CLG1CQUMzQjtBQXhCRDs7QUEwQkEsSUFBSSxVQUFVLE1BQU0sV0FBVyxVQUFVLElBQ3ZDO1NBQU8sT0FBTyxVQUFVLFNBQVMsS0FBSyxRQUN2QztBQUZEOztBQUlBLFNBQVMsSUFBSyxJQUFJLEdBQ2hCO01BQUksR0FBRyxLQUFLLE9BQU8sR0FBRyxJQUN0QjtNQUFJLE1BQ0o7T0FBSyxJQUFJLElBQUksR0FBRyxJQUFJLEdBQUcsUUFBUSxLQUM3QjtRQUFJLEtBQUssRUFBRSxHQUFHLElBQ2Y7QUFDRDtTQUNEOzs7QUFFRCxJQUFJLGFBQWEsT0FBTyxRQUFRLFVBQVUsS0FDeEM7TUFBSSxNQUNKO09BQUssSUFBSSxPQUFPLEtBQ2Q7UUFBSSxPQUFPLFVBQVUsZUFBZSxLQUFLLEtBQUssTUFBTSxJQUFJLEtBQ3pEO0FBQ0Q7U0FDRDtBQU5EIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHN0cmluZ2lmeVByaW1pdGl2ZSA9IGZ1bmN0aW9uKHYpIHtcbiAgc3dpdGNoICh0eXBlb2Ygdikge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICByZXR1cm4gdjtcblxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIHYgPyAndHJ1ZScgOiAnZmFsc2UnO1xuXG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgIHJldHVybiBpc0Zpbml0ZSh2KSA/IHYgOiAnJztcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBzZXAsIGVxLCBuYW1lKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICBpZiAob2JqID09PSBudWxsKSB7XG4gICAgb2JqID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG1hcChvYmplY3RLZXlzKG9iaiksIGZ1bmN0aW9uKGspIHtcbiAgICAgIHZhciBrcyA9IGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoaykpICsgZXE7XG4gICAgICBpZiAoaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgIHJldHVybiBtYXAob2JqW2tdLCBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZSh2KSk7XG4gICAgICAgIH0pLmpvaW4oc2VwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqW2tdKSk7XG4gICAgICB9XG4gICAgfSkuam9pbihzZXApO1xuXG4gIH1cblxuICBpZiAoIW5hbWUpIHJldHVybiAnJztcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUobmFtZSkpICsgZXEgK1xuICAgICAgICAgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmopKTtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeHMpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5mdW5jdGlvbiBtYXAgKHhzLCBmKSB7XG4gIGlmICh4cy5tYXApIHJldHVybiB4cy5tYXAoZik7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykge1xuICAgIHJlcy5wdXNoKGYoeHNbaV0sIGkpKTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHJlcy5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///36\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n\\n\\n// If obj.hasOwnProperty has been overridden, then calling\\n// obj.hasOwnProperty(prop) will break.\\n// See: https://github.com/joyent/node/issues/1707\\n\\nfunction hasOwnProperty(obj, prop) {\\n  return Object.prototype.hasOwnProperty.call(obj, prop);\\n}\\n\\nmodule.exports = function (qs, sep, eq, options) {\\n  sep = sep || '&';\\n  eq = eq || '=';\\n  var obj = {};\\n\\n  if (typeof qs !== 'string' || qs.length === 0) {\\n    return obj;\\n  }\\n\\n  var regexp = /\\\\+/g;\\n  qs = qs.split(sep);\\n\\n  var maxKeys = 1000;\\n  if (options && typeof options.maxKeys === 'number') {\\n    maxKeys = options.maxKeys;\\n  }\\n\\n  var len = qs.length;\\n  // maxKeys <= 0 means that we should not limit keys count\\n  if (maxKeys > 0 && len > maxKeys) {\\n    len = maxKeys;\\n  }\\n\\n  for (var i = 0; i < len; ++i) {\\n    var x = qs[i].replace(regexp, '%20'),\\n        idx = x.indexOf(eq),\\n        kstr,\\n        vstr,\\n        k,\\n        v;\\n\\n    if (idx >= 0) {\\n      kstr = x.substr(0, idx);\\n      vstr = x.substr(idx + 1);\\n    } else {\\n      kstr = x;\\n      vstr = '';\\n    }\\n\\n    k = decodeURIComponent(kstr);\\n    v = decodeURIComponent(vstr);\\n\\n    if (!hasOwnProperty(obj, k)) {\\n      obj[k] = v;\\n    } else if (isArray(obj[k])) {\\n      obj[k].push(v);\\n    } else {\\n      obj[k] = [obj[k], v];\\n    }\\n  }\\n\\n  return obj;\\n};\\n\\nvar isArray = Array.isArray || function (xs) {\\n  return Object.prototype.toString.call(xs) === '[object Array]';\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2RlY29kZS5qcz85MWRkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUNBLFNBQVMsZUFBZSxLQUFLLE1BQzNCO1NBQU8sT0FBTyxVQUFVLGVBQWUsS0FBSyxLQUM3Qzs7O0FBRUQsT0FBTyxVQUFVLFVBQVMsSUFBSSxLQUFLLElBQUksU0FDckM7UUFBTSxPQUNOO09BQUssTUFDTDtNQUFJLE1BRUo7O01BQUksT0FBTyxPQUFPLFlBQVksR0FBRyxXQUFXLEdBQzFDO1dBQ0Q7QUFFRDs7TUFBSSxTQUNKO09BQUssR0FBRyxNQUVSOztNQUFJLFVBQ0o7TUFBSSxXQUFXLE9BQU8sUUFBUSxZQUFZLFVBQ3hDO2NBQVUsUUFDWDtBQUVEOztNQUFJLE1BQU0sR0FDVjtBQUNBO01BQUksVUFBVSxLQUFLLE1BQU0sU0FDdkI7VUFDRDtBQUVEOztPQUFLLElBQUksSUFBSSxHQUFHLElBQUksS0FBSyxFQUFFLEdBQ3pCO1FBQUksSUFBSSxHQUFHLEdBQUcsUUFBUSxRQUFRO1FBQzFCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCO1FBQU07UUFBTTtRQUVoQjs7UUFBSSxPQUFPLEdBQ1Q7YUFBTyxFQUFFLE9BQU8sR0FDaEI7YUFBTyxFQUFFLE9BQU8sTUFDakI7QUFIRCxXQUlFO2FBQ0E7YUFDRDtBQUVEOztRQUFJLG1CQUNKO1FBQUksbUJBRUo7O1FBQUksQ0FBQyxlQUFlLEtBQUssSUFDdkI7VUFBSSxLQUNMO0FBRkQsZUFFVyxRQUFRLElBQUksS0FDckI7VUFBSSxHQUFHLEtBQ1I7QUFGTSxXQUdMO1VBQUksS0FBSyxDQUFDLElBQUksSUFDZjtBQUNGO0FBRUQ7O1NBQ0Q7QUFqREQ7O0FBbURBLElBQUksVUFBVSxNQUFNLFdBQVcsVUFBVSxJQUN2QztTQUFPLE9BQU8sVUFBVSxTQUFTLEtBQUssUUFDdkM7QUFGRCIsImZpbGUiOiIzNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4ndXNlIHN0cmljdCc7XG5cbi8vIElmIG9iai5oYXNPd25Qcm9wZXJ0eSBoYXMgYmVlbiBvdmVycmlkZGVuLCB0aGVuIGNhbGxpbmdcbi8vIG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSB3aWxsIGJyZWFrLlxuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vam95ZW50L25vZGUvaXNzdWVzLzE3MDdcbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocXMsIHNlcCwgZXEsIG9wdGlvbnMpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIHZhciBvYmogPSB7fTtcblxuICBpZiAodHlwZW9mIHFzICE9PSAnc3RyaW5nJyB8fCBxcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IC9cXCsvZztcbiAgcXMgPSBxcy5zcGxpdChzZXApO1xuXG4gIHZhciBtYXhLZXlzID0gMTAwMDtcbiAgaWYgKG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMubWF4S2V5cyA9PT0gJ251bWJlcicpIHtcbiAgICBtYXhLZXlzID0gb3B0aW9ucy5tYXhLZXlzO1xuICB9XG5cbiAgdmFyIGxlbiA9IHFzLmxlbmd0aDtcbiAgLy8gbWF4S2V5cyA8PSAwIG1lYW5zIHRoYXQgd2Ugc2hvdWxkIG5vdCBsaW1pdCBrZXlzIGNvdW50XG4gIGlmIChtYXhLZXlzID4gMCAmJiBsZW4gPiBtYXhLZXlzKSB7XG4gICAgbGVuID0gbWF4S2V5cztcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgeCA9IHFzW2ldLnJlcGxhY2UocmVnZXhwLCAnJTIwJyksXG4gICAgICAgIGlkeCA9IHguaW5kZXhPZihlcSksXG4gICAgICAgIGtzdHIsIHZzdHIsIGssIHY7XG5cbiAgICBpZiAoaWR4ID49IDApIHtcbiAgICAgIGtzdHIgPSB4LnN1YnN0cigwLCBpZHgpO1xuICAgICAgdnN0ciA9IHguc3Vic3RyKGlkeCArIDEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBrc3RyID0geDtcbiAgICAgIHZzdHIgPSAnJztcbiAgICB9XG5cbiAgICBrID0gZGVjb2RlVVJJQ29tcG9uZW50KGtzdHIpO1xuICAgIHYgPSBkZWNvZGVVUklDb21wb25lbnQodnN0cik7XG5cbiAgICBpZiAoIWhhc093blByb3BlcnR5KG9iaiwgaykpIHtcbiAgICAgIG9ialtrXSA9IHY7XG4gICAgfSBlbHNlIGlmIChpc0FycmF5KG9ialtrXSkpIHtcbiAgICAgIG9ialtrXS5wdXNoKHYpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmpba10gPSBbb2JqW2tdLCB2XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufTtcblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///37\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ 37);\\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ 36);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzP2IzODMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsUUFBUSxTQUFTLFFBQVEsUUFBUSxvQkFBUTtBQUN6QyxRQUFRLFNBQVMsUUFBUSxZQUFZLG9CQUFRIiwiZmlsZSI6IjM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///38\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\\n};\\n\\nmodule.exports = {\\n  isString: function isString(arg) {\\n    return typeof arg === \\'string\\';\\n  },\\n  isObject: function isObject(arg) {\\n    return (typeof arg === \\'undefined\\' ? \\'undefined\\' : _typeof(arg)) === \\'object\\' && arg !== null;\\n  },\\n  isNull: function isNull(arg) {\\n    return arg === null;\\n  },\\n  isNullOrUndefined: function isNullOrUndefined(arg) {\\n    return arg == null;\\n  }\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanM/MzVlOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQUVBLE9BQU87WUFDSyxrQkFBUyxLQUNqQjtXQUFPLE9BQU8sUUFDZjtBQUNEO1lBQVUsa0JBQVMsS0FDakI7V0FBTyxRQUFPLHNEQUFTLFlBQVksUUFDcEM7QUFDRDtVQUFRLGdCQUFTLEtBQ2Y7V0FBTyxRQUNSO0FBQ0Q7cUJBQW1CLDJCQUFTLEtBQzFCO1dBQU8sT0FDUjtBQVpjO0FBQ2YiLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc1N0cmluZzogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnc3RyaW5nJztcbiAgfSxcbiAgaXNPYmplY3Q6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB0eXBlb2YoYXJnKSA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xuICB9LFxuICBpc051bGw6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBhcmcgPT09IG51bGw7XG4gIH0sXG4gIGlzTnVsbE9yVW5kZWZpbmVkOiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gYXJnID09IG51bGw7XG4gIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///39\\n')},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nmodule.exports = function (module) {\\n\\tif (!module.webpackPolyfill) {\\n\\t\\tmodule.deprecate = function () {};\\n\\t\\tmodule.paths = [];\\n\\t\\t// module.parent = undefined by default\\n\\t\\tif (!module.children) module.children = [];\\n\\t\\tObject.defineProperty(module, \"loaded\", {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tget: function get() {\\n\\t\\t\\t\\treturn module.l;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tObject.defineProperty(module, \"id\", {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tget: function get() {\\n\\t\\t\\t\\treturn module.i;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tmodule.webpackPolyfill = 1;\\n\\t}\\n\\treturn module;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLFVBQVUsVUFBUyxRQUN6QjtLQUFJLENBQUMsT0FBTyxpQkFDWDtTQUFPLFlBQVksWUFBYSxDQUNoQztTQUFPLFFBQ1A7QUFDQTtNQUFJLENBQUMsT0FBTyxVQUFVLE9BQU8sV0FDN0I7U0FBTyxlQUFlLFFBQVE7ZUFFN0I7UUFBSyxlQUNKO1dBQU8sT0FDUDtBQUVGO0FBTEM7U0FLTSxlQUFlLFFBQVE7ZUFFN0I7UUFBSyxlQUNKO1dBQU8sT0FDUDtBQUVGO0FBTEM7U0FLTSxrQkFDUDtBQUNEO1FBQ0E7QUFyQkQiLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmICghbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcclxuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XHJcblx0fVxyXG5cdHJldHVybiBtb2R1bGU7XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///40\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n\\treturn typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n} : function (obj) {\\n\\treturn obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n};\\n\\n/*! https://mths.be/punycode v1.4.1 by @mathias */\\n;(function (root) {\\n\\n\\t/** Detect free variables */\\n\\tvar freeExports = ( false ? undefined : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;\\n\\tvar freeModule = ( false ? undefined : _typeof(module)) == 'object' && module && !module.nodeType && module;\\n\\tvar freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global;\\n\\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\\n\\t\\troot = freeGlobal;\\n\\t}\\n\\n\\t/**\\n  * The `punycode` object.\\n  * @name punycode\\n  * @type Object\\n  */\\n\\tvar punycode,\\n\\n\\n\\t/** Highest positive signed 32-bit float value */\\n\\tmaxInt = 2147483647,\\n\\n\\t// aka. 0x7FFFFFFF or 2^31-1\\n\\n\\t/** Bootstring parameters */\\n\\tbase = 36,\\n\\t    tMin = 1,\\n\\t    tMax = 26,\\n\\t    skew = 38,\\n\\t    damp = 700,\\n\\t    initialBias = 72,\\n\\t    initialN = 128,\\n\\n\\t// 0x80\\n\\tdelimiter = '-',\\n\\n\\t// '\\\\x2D'\\n\\n\\t/** Regular expressions */\\n\\tregexPunycode = /^xn--/,\\n\\t    regexNonASCII = /[^\\\\x20-\\\\x7E]/,\\n\\n\\t// unprintable ASCII chars + non-ASCII chars\\n\\tregexSeparators = /[\\\\x2E\\\\u3002\\\\uFF0E\\\\uFF61]/g,\\n\\n\\t// RFC 3490 separators\\n\\n\\t/** Error messages */\\n\\terrors = {\\n\\t\\t'overflow': 'Overflow: input needs wider integers to process',\\n\\t\\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\\n\\t\\t'invalid-input': 'Invalid input'\\n\\t},\\n\\n\\n\\t/** Convenience shortcuts */\\n\\tbaseMinusTMin = base - tMin,\\n\\t    floor = Math.floor,\\n\\t    stringFromCharCode = String.fromCharCode,\\n\\n\\n\\t/** Temporary variable */\\n\\tkey;\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\t/**\\n  * A generic error utility function.\\n  * @private\\n  * @param {String} type The error type.\\n  * @returns {Error} Throws a `RangeError` with the applicable error message.\\n  */\\n\\tfunction error(type) {\\n\\t\\tthrow new RangeError(errors[type]);\\n\\t}\\n\\n\\t/**\\n  * A generic `Array#map` utility function.\\n  * @private\\n  * @param {Array} array The array to iterate over.\\n  * @param {Function} callback The function that gets called for every array\\n  * item.\\n  * @returns {Array} A new array of values returned by the callback function.\\n  */\\n\\tfunction map(array, fn) {\\n\\t\\tvar length = array.length;\\n\\t\\tvar result = [];\\n\\t\\twhile (length--) {\\n\\t\\t\\tresult[length] = fn(array[length]);\\n\\t\\t}\\n\\t\\treturn result;\\n\\t}\\n\\n\\t/**\\n  * A simple `Array#map`-like wrapper to work with domain name strings or email\\n  * addresses.\\n  * @private\\n  * @param {String} domain The domain name or email address.\\n  * @param {Function} callback The function that gets called for every\\n  * character.\\n  * @returns {Array} A new string of characters returned by the callback\\n  * function.\\n  */\\n\\tfunction mapDomain(string, fn) {\\n\\t\\tvar parts = string.split('@');\\n\\t\\tvar result = '';\\n\\t\\tif (parts.length > 1) {\\n\\t\\t\\t// In email addresses, only the domain name should be punycoded. Leave\\n\\t\\t\\t// the local part (i.e. everything up to `@`) intact.\\n\\t\\t\\tresult = parts[0] + '@';\\n\\t\\t\\tstring = parts[1];\\n\\t\\t}\\n\\t\\t// Avoid `split(regex)` for IE8 compatibility. See #17.\\n\\t\\tstring = string.replace(regexSeparators, '\\\\x2E');\\n\\t\\tvar labels = string.split('.');\\n\\t\\tvar encoded = map(labels, fn).join('.');\\n\\t\\treturn result + encoded;\\n\\t}\\n\\n\\t/**\\n  * Creates an array containing the numeric code points of each Unicode\\n  * character in the string. While JavaScript uses UCS-2 internally,\\n  * this function will convert a pair of surrogate halves (each of which\\n  * UCS-2 exposes as separate characters) into a single code point,\\n  * matching UTF-16.\\n  * @see `punycode.ucs2.encode`\\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\\n  * @memberOf punycode.ucs2\\n  * @name decode\\n  * @param {String} string The Unicode input string (UCS-2).\\n  * @returns {Array} The new array of code points.\\n  */\\n\\tfunction ucs2decode(string) {\\n\\t\\tvar output = [],\\n\\t\\t    counter = 0,\\n\\t\\t    length = string.length,\\n\\t\\t    value,\\n\\t\\t    extra;\\n\\t\\twhile (counter < length) {\\n\\t\\t\\tvalue = string.charCodeAt(counter++);\\n\\t\\t\\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\\n\\t\\t\\t\\t// high surrogate, and there is a next character\\n\\t\\t\\t\\textra = string.charCodeAt(counter++);\\n\\t\\t\\t\\tif ((extra & 0xFC00) == 0xDC00) {\\n\\t\\t\\t\\t\\t// low surrogate\\n\\t\\t\\t\\t\\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// unmatched surrogate; only append this code unit, in case the next\\n\\t\\t\\t\\t\\t// code unit is the high surrogate of a surrogate pair\\n\\t\\t\\t\\t\\toutput.push(value);\\n\\t\\t\\t\\t\\tcounter--;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\toutput.push(value);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn output;\\n\\t}\\n\\n\\t/**\\n  * Creates a string based on an array of numeric code points.\\n  * @see `punycode.ucs2.decode`\\n  * @memberOf punycode.ucs2\\n  * @name encode\\n  * @param {Array} codePoints The array of numeric code points.\\n  * @returns {String} The new Unicode string (UCS-2).\\n  */\\n\\tfunction ucs2encode(array) {\\n\\t\\treturn map(array, function (value) {\\n\\t\\t\\tvar output = '';\\n\\t\\t\\tif (value > 0xFFFF) {\\n\\t\\t\\t\\tvalue -= 0x10000;\\n\\t\\t\\t\\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\\n\\t\\t\\t\\tvalue = 0xDC00 | value & 0x3FF;\\n\\t\\t\\t}\\n\\t\\t\\toutput += stringFromCharCode(value);\\n\\t\\t\\treturn output;\\n\\t\\t}).join('');\\n\\t}\\n\\n\\t/**\\n  * Converts a basic code point into a digit/integer.\\n  * @see `digitToBasic()`\\n  * @private\\n  * @param {Number} codePoint The basic numeric code point value.\\n  * @returns {Number} The numeric value of a basic code point (for use in\\n  * representing integers) in the range `0` to `base - 1`, or `base` if\\n  * the code point does not represent a value.\\n  */\\n\\tfunction basicToDigit(codePoint) {\\n\\t\\tif (codePoint - 48 < 10) {\\n\\t\\t\\treturn codePoint - 22;\\n\\t\\t}\\n\\t\\tif (codePoint - 65 < 26) {\\n\\t\\t\\treturn codePoint - 65;\\n\\t\\t}\\n\\t\\tif (codePoint - 97 < 26) {\\n\\t\\t\\treturn codePoint - 97;\\n\\t\\t}\\n\\t\\treturn base;\\n\\t}\\n\\n\\t/**\\n  * Converts a digit/integer into a basic code point.\\n  * @see `basicToDigit()`\\n  * @private\\n  * @param {Number} digit The numeric value of a basic code point.\\n  * @returns {Number} The basic code point whose value (when used for\\n  * representing integers) is `digit`, which needs to be in the range\\n  * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\\n  * used; else, the lowercase form is used. The behavior is undefined\\n  * if `flag` is non-zero and `digit` has no uppercase form.\\n  */\\n\\tfunction digitToBasic(digit, flag) {\\n\\t\\t//  0..25 map to ASCII a..z or A..Z\\n\\t\\t// 26..35 map to ASCII 0..9\\n\\t\\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\\n\\t}\\n\\n\\t/**\\n  * Bias adaptation function as per section 3.4 of RFC 3492.\\n  * https://tools.ietf.org/html/rfc3492#section-3.4\\n  * @private\\n  */\\n\\tfunction adapt(delta, numPoints, firstTime) {\\n\\t\\tvar k = 0;\\n\\t\\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\\n\\t\\tdelta += floor(delta / numPoints);\\n\\t\\tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\\n\\t\\t\\tdelta = floor(delta / baseMinusTMin);\\n\\t\\t}\\n\\t\\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\\n\\t}\\n\\n\\t/**\\n  * Converts a Punycode string of ASCII-only symbols to a string of Unicode\\n  * symbols.\\n  * @memberOf punycode\\n  * @param {String} input The Punycode string of ASCII-only symbols.\\n  * @returns {String} The resulting string of Unicode symbols.\\n  */\\n\\tfunction decode(input) {\\n\\t\\t// Don't use UCS-2\\n\\t\\tvar output = [],\\n\\t\\t    inputLength = input.length,\\n\\t\\t    out,\\n\\t\\t    i = 0,\\n\\t\\t    n = initialN,\\n\\t\\t    bias = initialBias,\\n\\t\\t    basic,\\n\\t\\t    j,\\n\\t\\t    index,\\n\\t\\t    oldi,\\n\\t\\t    w,\\n\\t\\t    k,\\n\\t\\t    digit,\\n\\t\\t    t,\\n\\n\\n\\t\\t/** Cached calculation results */\\n\\t\\tbaseMinusT;\\n\\n\\t\\t// Handle the basic code points: let `basic` be the number of input code\\n\\t\\t// points before the last delimiter, or `0` if there is none, then copy\\n\\t\\t// the first basic code points to the output.\\n\\n\\t\\tbasic = input.lastIndexOf(delimiter);\\n\\t\\tif (basic < 0) {\\n\\t\\t\\tbasic = 0;\\n\\t\\t}\\n\\n\\t\\tfor (j = 0; j < basic; ++j) {\\n\\t\\t\\t// if it's not a basic code point\\n\\t\\t\\tif (input.charCodeAt(j) >= 0x80) {\\n\\t\\t\\t\\terror('not-basic');\\n\\t\\t\\t}\\n\\t\\t\\toutput.push(input.charCodeAt(j));\\n\\t\\t}\\n\\n\\t\\t// Main decoding loop: start just after the last delimiter if any basic code\\n\\t\\t// points were copied; start at the beginning otherwise.\\n\\n\\t\\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\\n\\n\\t\\t\\t// `index` is the index of the next character to be consumed.\\n\\t\\t\\t// Decode a generalized variable-length integer into `delta`,\\n\\t\\t\\t// which gets added to `i`. The overflow checking is easier\\n\\t\\t\\t// if we increase `i` as we go, then subtract off its starting\\n\\t\\t\\t// value at the end to obtain `delta`.\\n\\t\\t\\tfor (oldi = i, w = 1, k = base;; /* no condition */k += base) {\\n\\n\\t\\t\\t\\tif (index >= inputLength) {\\n\\t\\t\\t\\t\\terror('invalid-input');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdigit = basicToDigit(input.charCodeAt(index++));\\n\\n\\t\\t\\t\\tif (digit >= base || digit > floor((maxInt - i) / w)) {\\n\\t\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ti += digit * w;\\n\\t\\t\\t\\tt = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\\n\\n\\t\\t\\t\\tif (digit < t) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbaseMinusT = base - t;\\n\\t\\t\\t\\tif (w > floor(maxInt / baseMinusT)) {\\n\\t\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tw *= baseMinusT;\\n\\t\\t\\t}\\n\\n\\t\\t\\tout = output.length + 1;\\n\\t\\t\\tbias = adapt(i - oldi, out, oldi == 0);\\n\\n\\t\\t\\t// `i` was supposed to wrap around from `out` to `0`,\\n\\t\\t\\t// incrementing `n` each time, so we'll fix that now:\\n\\t\\t\\tif (floor(i / out) > maxInt - n) {\\n\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t}\\n\\n\\t\\t\\tn += floor(i / out);\\n\\t\\t\\ti %= out;\\n\\n\\t\\t\\t// Insert `n` at position `i` of the output\\n\\t\\t\\toutput.splice(i++, 0, n);\\n\\t\\t}\\n\\n\\t\\treturn ucs2encode(output);\\n\\t}\\n\\n\\t/**\\n  * Converts a string of Unicode symbols (e.g. a domain name label) to a\\n  * Punycode string of ASCII-only symbols.\\n  * @memberOf punycode\\n  * @param {String} input The string of Unicode symbols.\\n  * @returns {String} The resulting Punycode string of ASCII-only symbols.\\n  */\\n\\tfunction encode(input) {\\n\\t\\tvar n,\\n\\t\\t    delta,\\n\\t\\t    handledCPCount,\\n\\t\\t    basicLength,\\n\\t\\t    bias,\\n\\t\\t    j,\\n\\t\\t    m,\\n\\t\\t    q,\\n\\t\\t    k,\\n\\t\\t    t,\\n\\t\\t    currentValue,\\n\\t\\t    output = [],\\n\\n\\n\\t\\t/** `inputLength` will hold the number of code points in `input`. */\\n\\t\\tinputLength,\\n\\n\\n\\t\\t/** Cached calculation results */\\n\\t\\thandledCPCountPlusOne,\\n\\t\\t    baseMinusT,\\n\\t\\t    qMinusT;\\n\\n\\t\\t// Convert the input in UCS-2 to Unicode\\n\\t\\tinput = ucs2decode(input);\\n\\n\\t\\t// Cache the length\\n\\t\\tinputLength = input.length;\\n\\n\\t\\t// Initialize the state\\n\\t\\tn = initialN;\\n\\t\\tdelta = 0;\\n\\t\\tbias = initialBias;\\n\\n\\t\\t// Handle the basic code points\\n\\t\\tfor (j = 0; j < inputLength; ++j) {\\n\\t\\t\\tcurrentValue = input[j];\\n\\t\\t\\tif (currentValue < 0x80) {\\n\\t\\t\\t\\toutput.push(stringFromCharCode(currentValue));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\thandledCPCount = basicLength = output.length;\\n\\n\\t\\t// `handledCPCount` is the number of code points that have been handled;\\n\\t\\t// `basicLength` is the number of basic code points.\\n\\n\\t\\t// Finish the basic string - if it is not empty - with a delimiter\\n\\t\\tif (basicLength) {\\n\\t\\t\\toutput.push(delimiter);\\n\\t\\t}\\n\\n\\t\\t// Main encoding loop:\\n\\t\\twhile (handledCPCount < inputLength) {\\n\\n\\t\\t\\t// All non-basic code points < n have been handled already. Find the next\\n\\t\\t\\t// larger one:\\n\\t\\t\\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\\n\\t\\t\\t\\tcurrentValue = input[j];\\n\\t\\t\\t\\tif (currentValue >= n && currentValue < m) {\\n\\t\\t\\t\\t\\tm = currentValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\\n\\t\\t\\t// but guard against overflow\\n\\t\\t\\thandledCPCountPlusOne = handledCPCount + 1;\\n\\t\\t\\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\\n\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t}\\n\\n\\t\\t\\tdelta += (m - n) * handledCPCountPlusOne;\\n\\t\\t\\tn = m;\\n\\n\\t\\t\\tfor (j = 0; j < inputLength; ++j) {\\n\\t\\t\\t\\tcurrentValue = input[j];\\n\\n\\t\\t\\t\\tif (currentValue < n && ++delta > maxInt) {\\n\\t\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (currentValue == n) {\\n\\t\\t\\t\\t\\t// Represent delta as a generalized variable-length integer\\n\\t\\t\\t\\t\\tfor (q = delta, k = base;; /* no condition */k += base) {\\n\\t\\t\\t\\t\\t\\tt = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\\n\\t\\t\\t\\t\\t\\tif (q < t) {\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tqMinusT = q - t;\\n\\t\\t\\t\\t\\t\\tbaseMinusT = base - t;\\n\\t\\t\\t\\t\\t\\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\\n\\t\\t\\t\\t\\t\\tq = floor(qMinusT / baseMinusT);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\\n\\t\\t\\t\\t\\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\\n\\t\\t\\t\\t\\tdelta = 0;\\n\\t\\t\\t\\t\\t++handledCPCount;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t++delta;\\n\\t\\t\\t++n;\\n\\t\\t}\\n\\t\\treturn output.join('');\\n\\t}\\n\\n\\t/**\\n  * Converts a Punycode string representing a domain name or an email address\\n  * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\\n  * it doesn't matter if you call it on a string that has already been\\n  * converted to Unicode.\\n  * @memberOf punycode\\n  * @param {String} input The Punycoded domain name or email address to\\n  * convert to Unicode.\\n  * @returns {String} The Unicode representation of the given Punycode\\n  * string.\\n  */\\n\\tfunction toUnicode(input) {\\n\\t\\treturn mapDomain(input, function (string) {\\n\\t\\t\\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\\n\\t\\t});\\n\\t}\\n\\n\\t/**\\n  * Converts a Unicode string representing a domain name or an email address to\\n  * Punycode. Only the non-ASCII parts of the domain name will be converted,\\n  * i.e. it doesn't matter if you call it with a domain that's already in\\n  * ASCII.\\n  * @memberOf punycode\\n  * @param {String} input The domain name or email address to convert, as a\\n  * Unicode string.\\n  * @returns {String} The Punycode representation of the given domain name or\\n  * email address.\\n  */\\n\\tfunction toASCII(input) {\\n\\t\\treturn mapDomain(input, function (string) {\\n\\t\\t\\treturn regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\\n\\t\\t});\\n\\t}\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\t/** Define the public API */\\n\\tpunycode = {\\n\\t\\t/**\\n   * A string representing the current Punycode.js version number.\\n   * @memberOf punycode\\n   * @type String\\n   */\\n\\t\\t'version': '1.4.1',\\n\\t\\t/**\\n   * An object of methods to convert from JavaScript's internal character\\n   * representation (UCS-2) to Unicode code points, and back.\\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\\n   * @memberOf punycode\\n   * @type Object\\n   */\\n\\t\\t'ucs2': {\\n\\t\\t\\t'decode': ucs2decode,\\n\\t\\t\\t'encode': ucs2encode\\n\\t\\t},\\n\\t\\t'decode': decode,\\n\\t\\t'encode': encode,\\n\\t\\t'toASCII': toASCII,\\n\\t\\t'toUnicode': toUnicode\\n\\t};\\n\\n\\t/** Expose `punycode` */\\n\\t// Some AMD build optimizers, like r.js, check for specific condition patterns\\n\\t// like the following:\\n\\tif (\\\"function\\\" == 'function' && _typeof(__webpack_require__(/*! !webpack amd options */ 7)) == 'object' && __webpack_require__(/*! !webpack amd options */ 7)) {\\n\\t\\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\\n\\t\\t\\treturn punycode;\\n\\t\\t}).call(exports, __webpack_require__, exports, module),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n\\t} else if (freeExports && freeModule) {\\n\\t\\tif (module.exports == freeExports) {\\n\\t\\t\\t// in Node.js, io.js, or RingoJS v0.8.0+\\n\\t\\t\\tfreeModule.exports = punycode;\\n\\t\\t} else {\\n\\t\\t\\t// in Narwhal or RingoJS v0.7.0-\\n\\t\\t\\tfor (key in punycode) {\\n\\t\\t\\t\\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else {\\n\\t\\t// in Rhino or a web browser\\n\\t\\troot.punycode = punycode;\\n\\t}\\n})(undefined);\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ 40)(module), __webpack_require__(/*! ./../webpack/buildin/global.js */ 8)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///41\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof2(obj);\\n};\\n\\nvar punycode = __webpack_require__(/*! punycode */ 41);\\nvar util = __webpack_require__(/*! ./util */ 39);\\n\\nexports.parse = urlParse;\\nexports.resolve = urlResolve;\\nexports.resolveObject = urlResolveObject;\\nexports.format = urlFormat;\\n\\nexports.Url = Url;\\n\\nfunction Url() {\\n  this.protocol = null;\\n  this.slashes = null;\\n  this.auth = null;\\n  this.host = null;\\n  this.port = null;\\n  this.hostname = null;\\n  this.hash = null;\\n  this.search = null;\\n  this.query = null;\\n  this.pathname = null;\\n  this.path = null;\\n  this.href = null;\\n}\\n\\n// Reference: RFC 3986, RFC 1808, RFC 2396\\n\\n// define these here so at least they only have to be\\n// compiled once on the first module load.\\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\\n    portPattern = /:[0-9]*$/,\\n\\n\\n// Special case for a simple path URL\\nsimplePathPattern = /^(\\\\/\\\\/?(?!\\\\/)[^\\\\?\\\\s]*)(\\\\?[^\\\\s]*)?$/,\\n\\n\\n// RFC 2396: characters reserved for delimiting URLs.\\n// We actually just auto-escape these.\\ndelims = ['<', '>', '\\\"', '`', ' ', '\\\\r', '\\\\n', '\\\\t'],\\n\\n\\n// RFC 2396: characters not allowed for various reasons.\\nunwise = ['{', '}', '|', '\\\\\\\\', '^', '`'].concat(delims),\\n\\n\\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\\nautoEscape = ['\\\\''].concat(unwise),\\n\\n\\n// Characters that are never ever allowed in a hostname.\\n// Note that any invalid chars are also handled, but these\\n// are the ones that are *expected* to be seen, so we fast-path\\n// them.\\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\\n    hostEndingChars = ['/', '?', '#'],\\n    hostnameMaxLen = 255,\\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\\n\\n\\n// protocols that can allow \\\"unsafe\\\" and \\\"unwise\\\" chars.\\nunsafeProtocol = {\\n  'javascript': true,\\n  'javascript:': true\\n},\\n\\n\\n// protocols that never have a hostname.\\nhostlessProtocol = {\\n  'javascript': true,\\n  'javascript:': true\\n},\\n\\n\\n// protocols that always contain a // bit.\\nslashedProtocol = {\\n  'http': true,\\n  'https': true,\\n  'ftp': true,\\n  'gopher': true,\\n  'file': true,\\n  'http:': true,\\n  'https:': true,\\n  'ftp:': true,\\n  'gopher:': true,\\n  'file:': true\\n},\\n    querystring = __webpack_require__(/*! querystring */ 38);\\n\\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\\n  if (url && util.isObject(url) && url instanceof Url) return url;\\n\\n  var u = new Url();\\n  u.parse(url, parseQueryString, slashesDenoteHost);\\n  return u;\\n}\\n\\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\\n  if (!util.isString(url)) {\\n    throw new TypeError(\\\"Parameter 'url' must be a string, not \\\" + (typeof url === 'undefined' ? 'undefined' : _typeof(url)));\\n  }\\n\\n  // Copy chrome, IE, opera backslash-handling behavior.\\n  // Back slashes before the query string get converted to forward slashes\\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\\n  var queryIndex = url.indexOf('?'),\\n      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\\n      uSplit = url.split(splitter),\\n      slashRegex = /\\\\\\\\/g;\\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\\n  url = uSplit.join(splitter);\\n\\n  var rest = url;\\n\\n  // trim before proceeding.\\n  // This is to support parse stuff like \\\"  http://foo.com  \\\\n\\\"\\n  rest = rest.trim();\\n\\n  if (!slashesDenoteHost && url.split('#').length === 1) {\\n    // Try fast path regexp\\n    var simplePath = simplePathPattern.exec(rest);\\n    if (simplePath) {\\n      this.path = rest;\\n      this.href = rest;\\n      this.pathname = simplePath[1];\\n      if (simplePath[2]) {\\n        this.search = simplePath[2];\\n        if (parseQueryString) {\\n          this.query = querystring.parse(this.search.substr(1));\\n        } else {\\n          this.query = this.search.substr(1);\\n        }\\n      } else if (parseQueryString) {\\n        this.search = '';\\n        this.query = {};\\n      }\\n      return this;\\n    }\\n  }\\n\\n  var proto = protocolPattern.exec(rest);\\n  if (proto) {\\n    proto = proto[0];\\n    var lowerProto = proto.toLowerCase();\\n    this.protocol = lowerProto;\\n    rest = rest.substr(proto.length);\\n  }\\n\\n  // figure out if it's got a host\\n  // user@server is *always* interpreted as a hostname, and url\\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\\n  // how the browser resolves relative URLs.\\n  if (slashesDenoteHost || proto || rest.match(/^\\\\/\\\\/[^@\\\\/]+@[^@\\\\/]+/)) {\\n    var slashes = rest.substr(0, 2) === '//';\\n    if (slashes && !(proto && hostlessProtocol[proto])) {\\n      rest = rest.substr(2);\\n      this.slashes = true;\\n    }\\n  }\\n\\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\\n\\n    // there's a hostname.\\n    // the first instance of /, ?, ;, or # ends the host.\\n    //\\n    // If there is an @ in the hostname, then non-host chars *are* allowed\\n    // to the left of the last @ sign, unless some host-ending character\\n    // comes *before* the @-sign.\\n    // URLs are obnoxious.\\n    //\\n    // ex:\\n    // http://a@b@c/ => user:a@b host:c\\n    // http://a@b?@c => user:a host:c path:/?@c\\n\\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\\n    // Review our test case against browsers more comprehensively.\\n\\n    // find the first instance of any hostEndingChars\\n    var hostEnd = -1;\\n    for (var i = 0; i < hostEndingChars.length; i++) {\\n      var hec = rest.indexOf(hostEndingChars[i]);\\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\\n    }\\n\\n    // at this point, either we have an explicit point where the\\n    // auth portion cannot go past, or the last @ char is the decider.\\n    var auth, atSign;\\n    if (hostEnd === -1) {\\n      // atSign can be anywhere.\\n      atSign = rest.lastIndexOf('@');\\n    } else {\\n      // atSign must be in auth portion.\\n      // http://a@b/c@d => host:b auth:a path:/c@d\\n      atSign = rest.lastIndexOf('@', hostEnd);\\n    }\\n\\n    // Now we have a portion which is definitely the auth.\\n    // Pull that off.\\n    if (atSign !== -1) {\\n      auth = rest.slice(0, atSign);\\n      rest = rest.slice(atSign + 1);\\n      this.auth = decodeURIComponent(auth);\\n    }\\n\\n    // the host is the remaining to the left of the first non-host char\\n    hostEnd = -1;\\n    for (var i = 0; i < nonHostChars.length; i++) {\\n      var hec = rest.indexOf(nonHostChars[i]);\\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\\n    }\\n    // if we still have not hit it, then the entire thing is a host.\\n    if (hostEnd === -1) hostEnd = rest.length;\\n\\n    this.host = rest.slice(0, hostEnd);\\n    rest = rest.slice(hostEnd);\\n\\n    // pull out port.\\n    this.parseHost();\\n\\n    // we've indicated that there is a hostname,\\n    // so even if it's empty, it has to be present.\\n    this.hostname = this.hostname || '';\\n\\n    // if hostname begins with [ and ends with ]\\n    // assume that it's an IPv6 address.\\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\\n\\n    // validate a little.\\n    if (!ipv6Hostname) {\\n      var hostparts = this.hostname.split(/\\\\./);\\n      for (var i = 0, l = hostparts.length; i < l; i++) {\\n        var part = hostparts[i];\\n        if (!part) continue;\\n        if (!part.match(hostnamePartPattern)) {\\n          var newpart = '';\\n          for (var j = 0, k = part.length; j < k; j++) {\\n            if (part.charCodeAt(j) > 127) {\\n              // we replace non-ASCII char with a temporary placeholder\\n              // we need this to make sure size of hostname is not\\n              // broken by replacing non-ASCII by nothing\\n              newpart += 'x';\\n            } else {\\n              newpart += part[j];\\n            }\\n          }\\n          // we test again with ASCII char only\\n          if (!newpart.match(hostnamePartPattern)) {\\n            var validParts = hostparts.slice(0, i);\\n            var notHost = hostparts.slice(i + 1);\\n            var bit = part.match(hostnamePartStart);\\n            if (bit) {\\n              validParts.push(bit[1]);\\n              notHost.unshift(bit[2]);\\n            }\\n            if (notHost.length) {\\n              rest = '/' + notHost.join('.') + rest;\\n            }\\n            this.hostname = validParts.join('.');\\n            break;\\n          }\\n        }\\n      }\\n    }\\n\\n    if (this.hostname.length > hostnameMaxLen) {\\n      this.hostname = '';\\n    } else {\\n      // hostnames are always lower case.\\n      this.hostname = this.hostname.toLowerCase();\\n    }\\n\\n    if (!ipv6Hostname) {\\n      // IDNA Support: Returns a punycoded representation of \\\"domain\\\".\\n      // It only converts parts of the domain name that\\n      // have non-ASCII characters, i.e. it doesn't matter if\\n      // you call it with a domain that already is ASCII-only.\\n      this.hostname = punycode.toASCII(this.hostname);\\n    }\\n\\n    var p = this.port ? ':' + this.port : '';\\n    var h = this.hostname || '';\\n    this.host = h + p;\\n    this.href += this.host;\\n\\n    // strip [ and ] from the hostname\\n    // the host field still retains them, though\\n    if (ipv6Hostname) {\\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\\n      if (rest[0] !== '/') {\\n        rest = '/' + rest;\\n      }\\n    }\\n  }\\n\\n  // now rest is set to the post-host stuff.\\n  // chop off any delim chars.\\n  if (!unsafeProtocol[lowerProto]) {\\n\\n    // First, make 100% sure that any \\\"autoEscape\\\" chars get\\n    // escaped, even if encodeURIComponent doesn't think they\\n    // need to be.\\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\\n      var ae = autoEscape[i];\\n      if (rest.indexOf(ae) === -1) continue;\\n      var esc = encodeURIComponent(ae);\\n      if (esc === ae) {\\n        esc = escape(ae);\\n      }\\n      rest = rest.split(ae).join(esc);\\n    }\\n  }\\n\\n  // chop off from the tail first.\\n  var hash = rest.indexOf('#');\\n  if (hash !== -1) {\\n    // got a fragment string.\\n    this.hash = rest.substr(hash);\\n    rest = rest.slice(0, hash);\\n  }\\n  var qm = rest.indexOf('?');\\n  if (qm !== -1) {\\n    this.search = rest.substr(qm);\\n    this.query = rest.substr(qm + 1);\\n    if (parseQueryString) {\\n      this.query = querystring.parse(this.query);\\n    }\\n    rest = rest.slice(0, qm);\\n  } else if (parseQueryString) {\\n    // no query string, but parseQueryString still requested\\n    this.search = '';\\n    this.query = {};\\n  }\\n  if (rest) this.pathname = rest;\\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\\n    this.pathname = '/';\\n  }\\n\\n  //to support http.request\\n  if (this.pathname || this.search) {\\n    var p = this.pathname || '';\\n    var s = this.search || '';\\n    this.path = p + s;\\n  }\\n\\n  // finally, reconstruct the href based on what has been validated.\\n  this.href = this.format();\\n  return this;\\n};\\n\\n// format a parsed object into a url string\\nfunction urlFormat(obj) {\\n  // ensure it's an object, and not a string url.\\n  // If it's an obj, this is a no-op.\\n  // this way, you can call url_format() on strings\\n  // to clean up potentially wonky urls.\\n  if (util.isString(obj)) obj = urlParse(obj);\\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\\n  return obj.format();\\n}\\n\\nUrl.prototype.format = function () {\\n  var auth = this.auth || '';\\n  if (auth) {\\n    auth = encodeURIComponent(auth);\\n    auth = auth.replace(/%3A/i, ':');\\n    auth += '@';\\n  }\\n\\n  var protocol = this.protocol || '',\\n      pathname = this.pathname || '',\\n      hash = this.hash || '',\\n      host = false,\\n      query = '';\\n\\n  if (this.host) {\\n    host = auth + this.host;\\n  } else if (this.hostname) {\\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\\n    if (this.port) {\\n      host += ':' + this.port;\\n    }\\n  }\\n\\n  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {\\n    query = querystring.stringify(this.query);\\n  }\\n\\n  var search = this.search || query && '?' + query || '';\\n\\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\\n\\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\\n  // unless they had them to begin with.\\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\\n    host = '//' + (host || '');\\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\\n  } else if (!host) {\\n    host = '';\\n  }\\n\\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\\n  if (search && search.charAt(0) !== '?') search = '?' + search;\\n\\n  pathname = pathname.replace(/[?#]/g, function (match) {\\n    return encodeURIComponent(match);\\n  });\\n  search = search.replace('#', '%23');\\n\\n  return protocol + host + pathname + search + hash;\\n};\\n\\nfunction urlResolve(source, relative) {\\n  return urlParse(source, false, true).resolve(relative);\\n}\\n\\nUrl.prototype.resolve = function (relative) {\\n  return this.resolveObject(urlParse(relative, false, true)).format();\\n};\\n\\nfunction urlResolveObject(source, relative) {\\n  if (!source) return relative;\\n  return urlParse(source, false, true).resolveObject(relative);\\n}\\n\\nUrl.prototype.resolveObject = function (relative) {\\n  if (util.isString(relative)) {\\n    var rel = new Url();\\n    rel.parse(relative, false, true);\\n    relative = rel;\\n  }\\n\\n  var result = new Url();\\n  var tkeys = Object.keys(this);\\n  for (var tk = 0; tk < tkeys.length; tk++) {\\n    var tkey = tkeys[tk];\\n    result[tkey] = this[tkey];\\n  }\\n\\n  // hash is always overridden, no matter what.\\n  // even href=\\\"\\\" will remove it.\\n  result.hash = relative.hash;\\n\\n  // if the relative url is empty, then there's nothing left to do here.\\n  if (relative.href === '') {\\n    result.href = result.format();\\n    return result;\\n  }\\n\\n  // hrefs like //foo/bar always cut to the protocol.\\n  if (relative.slashes && !relative.protocol) {\\n    // take everything except the protocol from relative\\n    var rkeys = Object.keys(relative);\\n    for (var rk = 0; rk < rkeys.length; rk++) {\\n      var rkey = rkeys[rk];\\n      if (rkey !== 'protocol') result[rkey] = relative[rkey];\\n    }\\n\\n    //urlParse appends trailing / to urls like http://www.example.com\\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\\n      result.path = result.pathname = '/';\\n    }\\n\\n    result.href = result.format();\\n    return result;\\n  }\\n\\n  if (relative.protocol && relative.protocol !== result.protocol) {\\n    // if it's a known url protocol, then changing\\n    // the protocol does weird things\\n    // first, if it's not file:, then we MUST have a host,\\n    // and if there was a path\\n    // to begin with, then we MUST have a path.\\n    // if it is file:, then the host is dropped,\\n    // because that's known to be hostless.\\n    // anything else is assumed to be absolute.\\n    if (!slashedProtocol[relative.protocol]) {\\n      var keys = Object.keys(relative);\\n      for (var v = 0; v < keys.length; v++) {\\n        var k = keys[v];\\n        result[k] = relative[k];\\n      }\\n      result.href = result.format();\\n      return result;\\n    }\\n\\n    result.protocol = relative.protocol;\\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\\n      var relPath = (relative.pathname || '').split('/');\\n      while (relPath.length && !(relative.host = relPath.shift())) {}\\n      if (!relative.host) relative.host = '';\\n      if (!relative.hostname) relative.hostname = '';\\n      if (relPath[0] !== '') relPath.unshift('');\\n      if (relPath.length < 2) relPath.unshift('');\\n      result.pathname = relPath.join('/');\\n    } else {\\n      result.pathname = relative.pathname;\\n    }\\n    result.search = relative.search;\\n    result.query = relative.query;\\n    result.host = relative.host || '';\\n    result.auth = relative.auth;\\n    result.hostname = relative.hostname || relative.host;\\n    result.port = relative.port;\\n    // to support http.request\\n    if (result.pathname || result.search) {\\n      var p = result.pathname || '';\\n      var s = result.search || '';\\n      result.path = p + s;\\n    }\\n    result.slashes = result.slashes || relative.slashes;\\n    result.href = result.format();\\n    return result;\\n  }\\n\\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\\n      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\\n      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,\\n      removeAllDots = mustEndAbs,\\n      srcPath = result.pathname && result.pathname.split('/') || [],\\n      relPath = relative.pathname && relative.pathname.split('/') || [],\\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\\n\\n  // if the url is a non-slashed url, then relative\\n  // links like ../.. should be able\\n  // to crawl up to the hostname, as well.  This is strange.\\n  // result.protocol has already been set by now.\\n  // Later on, put the first path part into the host field.\\n  if (psychotic) {\\n    result.hostname = '';\\n    result.port = null;\\n    if (result.host) {\\n      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);\\n    }\\n    result.host = '';\\n    if (relative.protocol) {\\n      relative.hostname = null;\\n      relative.port = null;\\n      if (relative.host) {\\n        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);\\n      }\\n      relative.host = null;\\n    }\\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\\n  }\\n\\n  if (isRelAbs) {\\n    // it's absolute.\\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\\n    result.search = relative.search;\\n    result.query = relative.query;\\n    srcPath = relPath;\\n    // fall through to the dot-handling below.\\n  } else if (relPath.length) {\\n    // it's relative\\n    // throw away the existing file, and take the new path instead.\\n    if (!srcPath) srcPath = [];\\n    srcPath.pop();\\n    srcPath = srcPath.concat(relPath);\\n    result.search = relative.search;\\n    result.query = relative.query;\\n  } else if (!util.isNullOrUndefined(relative.search)) {\\n    // just pull out the search.\\n    // like href='?foo'.\\n    // Put this after the other two cases because it simplifies the booleans\\n    if (psychotic) {\\n      result.hostname = result.host = srcPath.shift();\\n      //occationaly the auth can get stuck only in host\\n      //this especially happens in cases like\\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\\n      if (authInHost) {\\n        result.auth = authInHost.shift();\\n        result.host = result.hostname = authInHost.shift();\\n      }\\n    }\\n    result.search = relative.search;\\n    result.query = relative.query;\\n    //to support http.request\\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\\n    }\\n    result.href = result.format();\\n    return result;\\n  }\\n\\n  if (!srcPath.length) {\\n    // no path at all.  easy.\\n    // we've already handled the other stuff above.\\n    result.pathname = null;\\n    //to support http.request\\n    if (result.search) {\\n      result.path = '/' + result.search;\\n    } else {\\n      result.path = null;\\n    }\\n    result.href = result.format();\\n    return result;\\n  }\\n\\n  // if a url ENDs in . or .., then it must get a trailing slash.\\n  // however, if it ends in anything else non-slashy,\\n  // then it must NOT get a trailing slash.\\n  var last = srcPath.slice(-1)[0];\\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\\n\\n  // strip single dots, resolve double dots to parent dir\\n  // if the path tries to go above the root, `up` ends up > 0\\n  var up = 0;\\n  for (var i = srcPath.length; i >= 0; i--) {\\n    last = srcPath[i];\\n    if (last === '.') {\\n      srcPath.splice(i, 1);\\n    } else if (last === '..') {\\n      srcPath.splice(i, 1);\\n      up++;\\n    } else if (up) {\\n      srcPath.splice(i, 1);\\n      up--;\\n    }\\n  }\\n\\n  // if the path is allowed to go above the root, restore leading ..s\\n  if (!mustEndAbs && !removeAllDots) {\\n    for (; up--; up) {\\n      srcPath.unshift('..');\\n    }\\n  }\\n\\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\\n    srcPath.unshift('');\\n  }\\n\\n  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {\\n    srcPath.push('');\\n  }\\n\\n  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/';\\n\\n  // put the host back\\n  if (psychotic) {\\n    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\\n    //occationaly the auth can get stuck only in host\\n    //this especially happens in cases like\\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\\n    if (authInHost) {\\n      result.auth = authInHost.shift();\\n      result.host = result.hostname = authInHost.shift();\\n    }\\n  }\\n\\n  mustEndAbs = mustEndAbs || result.host && srcPath.length;\\n\\n  if (mustEndAbs && !isAbsolute) {\\n    srcPath.unshift('');\\n  }\\n\\n  if (!srcPath.length) {\\n    result.pathname = null;\\n    result.path = null;\\n  } else {\\n    result.pathname = srcPath.join('/');\\n  }\\n\\n  //to support request.http\\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\\n  }\\n  result.auth = relative.auth || result.auth;\\n  result.slashes = result.slashes || relative.slashes;\\n  result.href = result.format();\\n  return result;\\n};\\n\\nUrl.prototype.parseHost = function () {\\n  var host = this.host;\\n  var port = portPattern.exec(host);\\n  if (port) {\\n    port = port[0];\\n    if (port !== ':') {\\n      this.port = port.substr(1);\\n    }\\n    host = host.substr(0, host.length - port.length);\\n  }\\n  if (host) this.hostname = host;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///42\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval(\"/* WEBPACK VAR INJECTION */(function(__resourceQuery) {\\n\\n/* global __resourceQuery WorkerGlobalScope self */\\n/* eslint prefer-destructuring: off */\\n\\nvar url = __webpack_require__(/*! url */ 42);\\nvar stripAnsi = __webpack_require__(/*! strip-ansi */ 35);\\nvar log = __webpack_require__(/*! loglevel */ 33).getLogger('webpack-dev-server');\\nvar socket = __webpack_require__(/*! ./socket */ 32);\\nvar overlay = __webpack_require__(/*! ./overlay */ 30);\\n\\nfunction getCurrentScriptSource() {\\n  // `document.currentScript` is the most accurate way to find the current script,\\n  // but is not supported in all browsers.\\n  if (document.currentScript) {\\n    return document.currentScript.getAttribute('src');\\n  }\\n  // Fall back to getting all scripts in the document.\\n  var scriptElements = document.scripts || [];\\n  var currentScript = scriptElements[scriptElements.length - 1];\\n  if (currentScript) {\\n    return currentScript.getAttribute('src');\\n  }\\n  // Fail as there was no script to use.\\n  throw new Error('[WDS] Failed to get current script source.');\\n}\\n\\nvar urlParts = void 0;\\nvar hotReload = true;\\nif (typeof window !== 'undefined') {\\n  var qs = window.location.search.toLowerCase();\\n  hotReload = qs.indexOf('hotreload=false') === -1;\\n}\\nif (true) {\\n  // If this bundle is inlined, use the resource query to get the correct url.\\n  urlParts = url.parse(__resourceQuery.substr(1));\\n} else { var scriptHost; }\\n\\nif (!urlParts.port || urlParts.port === '0') {\\n  urlParts.port = self.location.port;\\n}\\n\\nvar _hot = false;\\nvar initial = true;\\nvar currentHash = '';\\nvar useWarningOverlay = false;\\nvar useErrorOverlay = false;\\nvar useProgress = false;\\n\\nvar INFO = 'info';\\nvar WARNING = 'warning';\\nvar ERROR = 'error';\\nvar NONE = 'none';\\n\\n// Set the default log level\\nlog.setDefaultLevel(INFO);\\n\\n// Send messages to the outside, so plugins can consume it.\\nfunction sendMsg(type, data) {\\n  if (typeof self !== 'undefined' && (typeof WorkerGlobalScope === 'undefined' || !(self instanceof WorkerGlobalScope))) {\\n    self.postMessage({\\n      type: 'webpack' + type,\\n      data: data\\n    }, '*');\\n  }\\n}\\n\\nvar onSocketMsg = {\\n  hot: function hot() {\\n    _hot = true;\\n    log.info('[WDS] Hot Module Replacement enabled.');\\n  },\\n  invalid: function invalid() {\\n    log.info('[WDS] App updated. Recompiling...');\\n    // fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\\n    sendMsg('Invalid');\\n  },\\n  hash: function hash(_hash) {\\n    currentHash = _hash;\\n  },\\n\\n  'still-ok': function stillOk() {\\n    log.info('[WDS] Nothing changed.');\\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\\n    sendMsg('StillOk');\\n  },\\n  'log-level': function logLevel(level) {\\n    var hotCtx = __webpack_require__(25);\\n    if (hotCtx.keys().indexOf('./log') !== -1) {\\n      hotCtx('./log').setLogLevel(level);\\n    }\\n    switch (level) {\\n      case INFO:\\n      case ERROR:\\n        log.setLevel(level);\\n        break;\\n      case WARNING:\\n        // loglevel's warning name is different from webpack's\\n        log.setLevel('warn');\\n        break;\\n      case NONE:\\n        log.disableAll();\\n        break;\\n      default:\\n        log.error('[WDS] Unknown clientLogLevel \\\\'' + level + '\\\\'');\\n    }\\n  },\\n  overlay: function overlay(value) {\\n    if (typeof document !== 'undefined') {\\n      if (typeof value === 'boolean') {\\n        useWarningOverlay = false;\\n        useErrorOverlay = value;\\n      } else if (value) {\\n        useWarningOverlay = value.warnings;\\n        useErrorOverlay = value.errors;\\n      }\\n    }\\n  },\\n  progress: function progress(_progress) {\\n    if (typeof document !== 'undefined') {\\n      useProgress = _progress;\\n    }\\n  },\\n\\n  'progress-update': function progressUpdate(data) {\\n    if (useProgress) log.info('[WDS] ' + data.percent + '% - ' + data.msg + '.');\\n  },\\n  ok: function ok() {\\n    sendMsg('Ok');\\n    if (useWarningOverlay || useErrorOverlay) overlay.clear();\\n    if (initial) return initial = false; // eslint-disable-line no-return-assign\\n    reloadApp();\\n  },\\n\\n  'content-changed': function contentChanged() {\\n    log.info('[WDS] Content base changed. Reloading...');\\n    self.location.reload();\\n  },\\n  warnings: function warnings(_warnings) {\\n    log.warn('[WDS] Warnings while compiling.');\\n    var strippedWarnings = _warnings.map(function (warning) {\\n      return stripAnsi(warning);\\n    });\\n    sendMsg('Warnings', strippedWarnings);\\n    for (var i = 0; i < strippedWarnings.length; i++) {\\n      log.warn(strippedWarnings[i]);\\n    }\\n    if (useWarningOverlay) overlay.showMessage(_warnings);\\n\\n    if (initial) return initial = false; // eslint-disable-line no-return-assign\\n    reloadApp();\\n  },\\n  errors: function errors(_errors) {\\n    log.error('[WDS] Errors while compiling. Reload prevented.');\\n    var strippedErrors = _errors.map(function (error) {\\n      return stripAnsi(error);\\n    });\\n    sendMsg('Errors', strippedErrors);\\n    for (var i = 0; i < strippedErrors.length; i++) {\\n      log.error(strippedErrors[i]);\\n    }\\n    if (useErrorOverlay) overlay.showMessage(_errors);\\n    initial = false;\\n  },\\n  error: function error(_error) {\\n    log.error(_error);\\n  },\\n  close: function close() {\\n    log.error('[WDS] Disconnected!');\\n    sendMsg('Close');\\n  }\\n};\\n\\nvar hostname = urlParts.hostname;\\nvar protocol = urlParts.protocol;\\n\\n// check ipv4 and ipv6 `all hostname`\\nif (hostname === '0.0.0.0' || hostname === '::') {\\n  // why do we need this check?\\n  // hostname n/a for file protocol (example, when using electron, ionic)\\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\\n  // eslint-disable-next-line no-bitwise\\n  if (self.location.hostname && !!~self.location.protocol.indexOf('http')) {\\n    hostname = self.location.hostname;\\n  }\\n}\\n\\n// `hostname` can be empty when the script path is relative. In that case, specifying\\n// a protocol would result in an invalid URL.\\n// When https is used in the app, secure websockets are always necessary\\n// because the browser doesn't accept non-secure websockets.\\nif (hostname && (self.location.protocol === 'https:' || urlParts.hostname === '0.0.0.0')) {\\n  protocol = self.location.protocol;\\n}\\n\\nvar socketUrl = url.format({\\n  protocol: protocol,\\n  auth: urlParts.auth,\\n  hostname: hostname,\\n  port: urlParts.port,\\n  pathname: urlParts.path == null || urlParts.path === '/' ? '/sockjs-node' : urlParts.path\\n});\\n\\nsocket(socketUrl, onSocketMsg);\\n\\nvar isUnloading = false;\\nself.addEventListener('beforeunload', function () {\\n  isUnloading = true;\\n});\\n\\nfunction reloadApp() {\\n  if (isUnloading || !hotReload) {\\n    return;\\n  }\\n  if (_hot) {\\n    log.info('[WDS] App hot update...');\\n    // eslint-disable-next-line global-require\\n    var hotEmitter = __webpack_require__(/*! webpack/hot/emitter */ 5);\\n    hotEmitter.emit('webpackHotUpdate', currentHash);\\n    if (typeof self !== 'undefined' && self.window) {\\n      // broadcast update to window\\n      self.postMessage('webpackHotUpdate' + currentHash, '*');\\n    }\\n  } else {\\n    var rootWindow = self;\\n    // use parent window for reload (in case we're in an iframe with no valid src)\\n    var intervalId = self.setInterval(function () {\\n      if (rootWindow.location.protocol !== 'about:') {\\n        // reload immediately if protocol is valid\\n        applyReload(rootWindow, intervalId);\\n      } else {\\n        rootWindow = rootWindow.parent;\\n        if (rootWindow.parent === rootWindow) {\\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\\n          applyReload(rootWindow, intervalId);\\n        }\\n      }\\n    });\\n  }\\n\\n  function applyReload(rootWindow, intervalId) {\\n    clearInterval(intervalId);\\n    log.info('[WDS] App updated. Reloading...');\\n    rootWindow.location.reload();\\n  }\\n}\\n/* WEBPACK VAR INJECTION */}.call(this, \\\"?http://0.0.0.0:8090\\\"))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///43\\n\")},function(F,U,B){B(43),B(23),F.exports=B(21)}]);","extractedComments":[]}